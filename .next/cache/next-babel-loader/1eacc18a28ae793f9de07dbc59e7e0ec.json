{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/charts/pie-chart/pie-chart-widget-settings.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DataSourceActions from '../../../../actions/datasource.actions';\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions';\nimport Swal from 'sweetalert2';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    list: {\n      width: 500,\n      paddingLeft: \"15px\",\n      paddingRight: \"15px\",\n      paddingTop: \"15px\"\n    },\n    h2: {\n      width: '100%',\n      textAlign: 'center',\n      borderBottom: '1px solid #000',\n      lineHeight: '0.1em',\n      marginTop: \"20px\",\n      marginBottom: \"20px\",\n      fontFamily: 'Roboto',\n      fontSize: '13px',\n      color: \"#3F51B5\"\n    },\n    span: {\n      background: '#fff',\n      padding: '0 10px'\n    },\n    formControl: {\n      marginTop: \"15px\"\n    }\n  };\n});\n\nvar PieChartWidgetSettings = function PieChartWidgetSettings(_ref) {\n  var widget = _ref.widget,\n      handleSettingsClose = _ref.handleSettingsClose,\n      isAdding = _ref.isAdding,\n      onWidgetAdd = _ref.onWidgetAdd;\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      datasources = _useState[0],\n      setDatasources = _useState[1];\n\n  var _useState2 = useState(!isAdding ? widget.dataSourceId : ''),\n      datasource = _useState2[0],\n      setDatasource = _useState2[1];\n\n  var _useState3 = useState([]),\n      docList = _useState3[0],\n      setDocList = _useState3[1];\n\n  var _useState4 = useState(!isAdding ? widget.config.docId : ''),\n      doc = _useState4[0],\n      setDoc = _useState4[1];\n\n  var _useState5 = useState([]),\n      fieldList = _useState5[0],\n      setFieldList = _useState5[1];\n\n  var _useState6 = useState(!isAdding ? widget.config.fields : []),\n      fields = _useState6[0],\n      setFields = _useState6[1];\n\n  var _useState7 = useState({}),\n      query = _useState7[0],\n      setQuery = _useState7[1];\n\n  var getDatasources = function getDatasources() {\n    var $datasources, $docList, $fieldList;\n    return _regeneratorRuntime.async(function getDatasources$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(DataSourceActions.getDatasources({}));\n\n          case 3:\n            $datasources = _context.sent;\n\n            if (isAdding) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(DataSourceActions.getDocList(datasource));\n\n          case 7:\n            $docList = _context.sent;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(DataSourceActions.getFieldList(datasource, doc));\n\n          case 10:\n            $fieldList = _context.sent;\n            setDocList($docList);\n            setFieldList($fieldList);\n\n          case 13:\n            setDatasources($datasources);\n            return _context.abrupt(\"return\", $datasources);\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 17]]);\n  };\n\n  var getDocList = function getDocList(id) {\n    var $docList;\n    return _regeneratorRuntime.async(function getDocList$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            setDatasource(id);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(DataSourceActions.getDocList(id));\n\n          case 4:\n            $docList = _context2.sent;\n            setDocList($docList);\n            return _context2.abrupt(\"return\", $docList);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  };\n\n  var getFieldList = function getFieldList(id, docId) {\n    var $fieldList;\n    return _regeneratorRuntime.async(function getFieldList$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            setDoc(docId);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(DataSourceActions.getFieldList(id, docId));\n\n          case 4:\n            $fieldList = _context3.sent;\n            setFieldList($fieldList);\n            return _context3.abrupt(\"return\", $fieldList);\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  };\n\n  var handleDatasourceChange = function handleDatasourceChange(event) {\n    var _event$target, name, value;\n\n    return _regeneratorRuntime.async(function handleDatasourceChange$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _event$target = event.target, name = _event$target.name, value = _event$target.value;\n            setFieldList([]);\n            setFields([]);\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(getDocList(value));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  };\n\n  var handleDocChange = function handleDocChange(event) {\n    var _event$target2, name, value;\n\n    return _regeneratorRuntime.async(function handleDocChange$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _event$target2 = event.target, name = _event$target2.name, value = _event$target2.value;\n            setFieldList([]);\n            setFields([]);\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(getFieldList(datasource, value));\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  };\n\n  var handleFieldChange = function handleFieldChange(name) {\n    return function (event) {\n      var checked = event.target.checked;\n      checked ? setFields([].concat(_toConsumableArray(fields), [name])) : setFields(fields.filter(function (field) {\n        return field != name;\n      }));\n    };\n  };\n\n  var renderFieldSettings = function renderFieldSettings() {\n    return fieldList.length ? __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: classes.h2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: classes.span,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Fields Settings\")), fieldList.map(function (field) {\n      return __jsx(FormControlLabel, {\n        key: field,\n        control: __jsx(Checkbox, {\n          checked: fields.includes(field),\n          onChange: handleFieldChange(field),\n          value: field,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }),\n        label: field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      });\n    })) : __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    });\n  };\n\n  var renderQuerySettings = function renderQuerySettings() {\n    return fields.length ? __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: classes.h2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: classes.span,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Query Settings\")), fields.map(function (field) {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      });\n    })) : __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    });\n  };\n\n  var saveConfigSettings = function saveConfigSettings() {\n    var data, update;\n    return _regeneratorRuntime.async(function saveConfigSettings$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            data = {\n              dataSourceId: datasource,\n              config: {\n                docId: doc,\n                fields: fields,\n                type: 'simple',\n                func: 'find',\n                query: {}\n              },\n              type: 'Table'\n            };\n\n            if (!isAdding) {\n              _context6.next = 6;\n              break;\n            }\n\n            onWidgetAdd(data);\n            _context6.next = 10;\n            break;\n\n          case 6:\n            _context6.next = 8;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.updateWidgetSettings(widget.id, data));\n\n          case 8:\n            update = _context6.sent;\n            handleSettingsClose(update);\n\n          case 10:\n            _context6.next = 15;\n            break;\n\n          case 12:\n            _context6.prev = 12;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log(_context6.t0);\n\n          case 15:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 12]]);\n  };\n\n  useEffect(function () {\n    getDatasources();\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Widget Properties\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    id: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Title\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })), __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Connection Settings\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    id: \"data-source\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Data Source\"), __jsx(Select, {\n    name: \"datasource\",\n    labelId: \"data-source\",\n    value: datasource,\n    onChange: handleDatasourceChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, datasources.map(function (item) {\n    return __jsx(MenuItem, {\n      key: item.id,\n      value: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, item.title);\n  }))), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    disabled: datasource ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    id: \"doc-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Table/Collection\"), __jsx(Select, {\n    name: \"docList\",\n    labelId: \"doc-list\",\n    value: doc,\n    onChange: handleDocChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, docList.map(function (item) {\n    return __jsx(MenuItem, {\n      key: item,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, item);\n  }))), renderFieldSettings(), renderQuerySettings(), __jsx(Button, {\n    fullWidth: true,\n    onClick: saveConfigSettings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, isAdding ? 'Add' : 'Save'));\n};\n\nexport default PieChartWidgetSettings;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/charts/pie-chart/pie-chart-widget-settings.jsx"],"names":["useState","useEffect","makeStyles","Button","InputLabel","MenuItem","FormControl","Input","Select","FormControlLabel","Checkbox","DataSourceActions","WidgetSettingsActions","Swal","useStyles","theme","list","width","paddingLeft","paddingRight","paddingTop","h2","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","formControl","PieChartWidgetSettings","widget","handleSettingsClose","isAdding","onWidgetAdd","classes","datasources","setDatasources","dataSourceId","datasource","setDatasource","docList","setDocList","config","docId","doc","setDoc","fieldList","setFieldList","fields","setFields","query","setQuery","getDatasources","$datasources","getDocList","$docList","getFieldList","$fieldList","console","log","id","handleDatasourceChange","event","target","name","value","handleDocChange","handleFieldChange","checked","filter","field","renderFieldSettings","length","map","includes","renderQuerySettings","saveConfigSettings","data","type","func","updateWidgetSettings","update","item","title"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport Select from '@material-ui/core/Select'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport DataSourceActions from '../../../../actions/datasource.actions'\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\nimport Swal from 'sweetalert2'\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}))\n\nconst PieChartWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\n  const classes = useStyles()\n  const [datasources, setDatasources] = useState([])\n  const [datasource, setDatasource] = useState(!isAdding ? widget.dataSourceId : '')\n  const [docList, setDocList] = useState([])\n  const [doc, setDoc] = useState(!isAdding ? widget.config.docId : '')\n  const [fieldList, setFieldList] = useState([])\n  const [fields, setFields] = useState(!isAdding ? widget.config.fields : [])\n  const [query, setQuery] = useState({})\n\n  const getDatasources = async () => {\n    try {\n      const $datasources = await DataSourceActions.getDatasources({})\n      if (!isAdding) {\n        const $docList = await DataSourceActions.getDocList(datasource)\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\n        setDocList($docList)\n        setFieldList($fieldList)\n      }\n      setDatasources($datasources)\n      return $datasources\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getDocList = async (id) => {\n    try {\n      setDatasource(id)\n      const $docList = await DataSourceActions.getDocList(id)\n      setDocList($docList)\n      return $docList\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getFieldList = async (id, docId) => {\n    try {\n      setDoc(docId)\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\n      setFieldList($fieldList)\n      return $fieldList\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const handleDatasourceChange = async (event) => {\n    const { name, value } = event.target\n    setFieldList([])\n    setFields([])\n    await getDocList(value)\n  }\n\n  const handleDocChange = async (event) => {\n    const { name, value } = event.target\n    setFieldList([])\n    setFields([])\n    await getFieldList(datasource, value)\n  }\n\n  const handleFieldChange = name => event => {\n    const { checked } = event.target\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name))\n  }\n\n  const renderFieldSettings = () => fieldList.length ? (<div>\n    <h2 className={classes.h2}>\n      <span className={classes.span}>Fields Settings</span>\n    </h2>\n\n    {fieldList.map(field => (<FormControlLabel\n      key={field}\n      control={\n        <Checkbox checked={fields.includes(field)} onChange={handleFieldChange(field)} value={field} />\n      }\n      label={field}\n    />))}\n  </div>) : <div></div>\n\n  const renderQuerySettings = () => fields.length ? (<div>\n    <h2 className={classes.h2}>\n      <span className={classes.span}>Query Settings</span>\n    </h2>\n\n    {fields.map(field => (<div>\n\n    </div>))}\n  </div>) : <div></div>\n\n  const saveConfigSettings = async () => {\n    try {\n      const data = {\n        dataSourceId: datasource,\n        config: {\n          docId: doc,\n          fields,\n          type: 'simple',\n          func: 'find',\n          query: {}\n        },\n        type: 'Table'\n      }\n      if (isAdding) {\n        onWidgetAdd(data)\n      } else {\n        const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data)\n        handleSettingsClose(update)\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  useEffect(() => {\n    getDatasources()\n  }, [])\n\n  return (\n    <div className={classes.list} role=\"presentation\">\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Widget Properties</span>\n      </h2>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel id='title'>Title</InputLabel>\n        <Input />\n      </FormControl>\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Connection Settings</span>\n      </h2>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel id=\"data-source\">Data Source</InputLabel>\n        <Select\n          name=\"datasource\"\n          labelId=\"data-source\"\n          value={datasource}\n          onChange={handleDatasourceChange}\n        >\n          {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\n        <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\n        <Select\n          name=\"docList\"\n          labelId=\"doc-list\"\n          value={doc}\n          onChange={handleDocChange}\n        >\n          {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\n        </Select>\n      </FormControl>\n\n      {renderFieldSettings()}\n\n      {renderQuerySettings()}\n\n      <Button fullWidth onClick={saveConfigSettings}>{isAdding ? 'Add' : 'Save'}</Button>\n    </div>\n  )\n}\n\nexport default PieChartWidgetSettings"]},"metadata":{},"sourceType":"module"}