{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\n\nvar Material = /*#__PURE__*/function (_React$Component) {\n  _inherits(Material, _React$Component);\n\n  var _super = _createSuper(Material);\n\n  function Material() {\n    _classCallCheck(this, Material);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Material, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.data); // const keys = [...new Set([].concat.apply([], this.props.data.map(obj => Object.keys(obj))))]\n      // console.log(keys)\n\n      var f = \"\";\n\n      for (var i = 0, j = 0; i < this.props.data.length && j < 10; i++, j++) {\n        var kee = Object.keys(this.props.data[i]);\n        f = kee;\n      }\n\n      return __jsx(\"table\", {\n        cellspacing: \"0\",\n        cellpadding: \"0\",\n        style: {\n          margin: \"20px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          textAlign: \"center\",\n          tableLayout: \"fixed\",\n          whiteSpace: \"normal\",\n          borderRadius: \"15px\",\n          overflow: \"hidden\",\n          boxShadow: \"0 0px 40px 0px rgba(0, 0, 0, 0.15)\",\n          fontSize: \"15px\",\n          color: \"#808080\"\n        }\n      }, __jsx(\"thead\", null, __jsx(\"tr\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          backgroundColor: \"#6c7ae0\",\n          boxShadow: \"0px 0px 9px 0px rgba(0,0,0,0.1)\",\n          color: \"white\"\n        }\n      }, f.map(function (k) {\n        console.log(f.length);\n        return __jsx(\"th\", {\n          style: {\n            width: \"\".concat(100 / f.length, \"%\"),\n            padding: \"15px\"\n          }\n        }, k);\n      }))), __jsx(\"tbody\", {\n        \"class\": \"Tbody\"\n      }, this.props.data.map(function (d) {\n        var values = [];\n        f.forEach(function (key) {\n          if (typeof d[key] === \"object\" || typeof d[key] === \"undefined\") {\n            d[key] = \"----------\";\n          } else if (d[key] === true) {\n            d[key] = \"true\";\n          } else if (d[key] === false) {\n            d[key] = \"false\";\n          } else if (d[key].length < 1) {\n            d[key] = \"----------\";\n          }\n\n          values.push(d[key]);\n        });\n        console.log(values); // values.map(str => {\n        //     if (typeof str === \"object\") {\n        //         let st = JSON.stringify(str)\n        //         values[1] = st;\n        //     } else if (typeof str === Boolean) {\n        //         return str.toString()\n        //     }\n        //})\n\n        return __jsx(\"tr\", {\n          \"class\": \"Tr-body\",\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\"\n          }\n        }, values.map(function (di) {\n          return __jsx(\"td\", {\n            style: {\n              width: \"\".concat(100 / f.length, \"%\"),\n              wordWrap: \"break-word\",\n              padding: \"10px 0\"\n            }\n          }, di);\n        }));\n      })));\n    }\n  }]);\n\n  return Material;\n}(React.Component);\n\nexport default Material;","map":null,"metadata":{},"sourceType":"module"}