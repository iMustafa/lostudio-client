{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/datasources/add/mongodb.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { Button } from '@material-ui/core';\nimport DatasourceActions from '../../../actions/datasource.actions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: '30px 15px 15px 15px'\n    },\n    cardBody: {\n      padding: '10px'\n    },\n    cardTitle: {\n      fontSize: '12px',\n      backgroundColor: '#3F51B5',\n      padding: '3px 3px 3px 6px',\n      color: '#FFF',\n      fontFamily: \"Roboto\"\n    },\n    gridStyles: {\n      margin: '10px 0 5px 0',\n      width: '100%'\n    },\n    h2: {\n      width: '100%',\n      textAlign: 'center',\n      borderBottom: '1px solid #000',\n      lineHeight: '0.1em',\n      margin: '10px 0 20px',\n      fontFamily: 'Roboto',\n      fontSize: '13px',\n      color: \"#3F51B5\"\n    },\n    span: {\n      background: '#fff',\n      padding: '0 10px'\n    },\n    card: {\n      padding: '10px 15px 20px 15px',\n      marginBottom: '20px'\n    }\n  };\n});\n\nvar AddMongoDBDataSource = function AddMongoDBDataSource() {\n  var classes = useStyles();\n\n  var _useState = useState({\n    showPassword: false,\n    useAuth: 0,\n    isLoading: false\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var _useState2 = useState(0),\n      attempts = _useState2[0],\n      setAttempts = _useState2[1];\n\n  var _useState3 = useState({\n    title: '',\n    type: 'mongodb',\n    force: false,\n    description: '',\n    config: {\n      port: 27017,\n      server: '',\n      db: '',\n      user: '',\n      password: ''\n    }\n  }),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var handleClickShowPassword = function handleClickShowPassword() {\n    setValues(_objectSpread({}, values, {\n      showPassword: !values.showPassword\n    }));\n  };\n\n  var handleMouseDownPassword = function handleMouseDownPassword(event) {\n    event.preventDefault();\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var _event$target = event.target,\n        value = _event$target.value,\n        name = _event$target.name;\n    setState(_objectSpread({}, state, _defineProperty({}, name, value)));\n    setAttempts(0);\n  };\n\n  var handleAuthChange = function handleAuthChange(event) {\n    var _event$target2 = event.target,\n        value = _event$target2.value,\n        name = _event$target2.name;\n    setState(_objectSpread({}, state, {\n      config: _objectSpread({}, state.config, _defineProperty({}, name, value))\n    }));\n  };\n\n  var renderSubmitButtons = function renderSubmitButtons() {\n    return values.isLoading ? __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    })) : attempts >= 1 ? __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"alert alert-info\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      style: {\n        fontFamily: 'Roboto',\n        margin: '0'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Connection failed to this database, would you like to save it anyway?\")), __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Cancel\"), __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, \"Save\"))) : __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"Cancel\"), __jsx(Button, {\n      onClick: handleSubmitData,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Save\"));\n  };\n\n  var handleSubmitData = function handleSubmitData() {\n    var res;\n    return _regeneratorRuntime.async(function handleSubmitData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setValues(_objectSpread({}, values, {\n              isLoading: true\n            }));\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(DatasourceActions.createDatasource(state));\n\n          case 4:\n            res = _context.sent;\n            setValues(_objectSpread({}, values, {\n              isLoading: false\n            }));\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n\n            if (_context.t0.error.message == 'Connection Failed') {\n              setState(_objectSpread({}, state, {\n                force: true\n              }));\n              setAttempts(1);\n            }\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var renderAuth = function renderAuth() {\n    return values.useAuth ? __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, __jsx(TextField, {\n      fullWidth: true,\n      onChange: handleAuthChange.bind(_this),\n      required: true,\n      value: state.config.user,\n      name: \"user\",\n      label: \"Username\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    })), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, __jsx(FormControl, {\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, __jsx(InputLabel, {\n      htmlFor: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, \"Password\"), __jsx(Input, {\n      required: true,\n      name: \"password\",\n      type: values.showPassword ? 'text' : 'password',\n      onChange: handleAuthChange.bind(_this),\n      value: state.config.password,\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, __jsx(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPassword,\n        onMouseDown: handleMouseDownPassword,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      }, values.showPassword ? __jsx(Visibility, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 44\n        }\n      }) : __jsx(VisibilityOff, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 61\n        }\n      }))),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    })))) : __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    });\n  };\n\n  return __jsx(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.cardTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, \"Add a New Data Source - MongoDB\"), __jsx(Card, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    className: classes.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, \"Properties\")), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    onChange: handleInputChange.bind(_this),\n    fullWidth: true,\n    required: true,\n    value: state.title,\n    name: \"title\",\n    label: \"Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    onChange: handleInputChange.bind(_this),\n    fullWidth: true,\n    id: \"description\",\n    value: state.description,\n    name: \"description\",\n    label: \"Description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  })))), __jsx(Card, {\n    className: classes.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, \"Database Properties\")), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    fullWidth: true,\n    onChange: handleAuthChange.bind(_this),\n    required: true,\n    value: state.config.server,\n    name: \"server\",\n    label: \"Server\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    fullWidth: true,\n    onChange: handleAuthChange.bind(_this),\n    required: true,\n    value: state.config.port,\n    name: \"port\",\n    label: \"Port\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    fullWidth: true,\n    onChange: handleAuthChange.bind(_this),\n    required: true,\n    value: state.config.db,\n    name: \"db\",\n    label: \"Database\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  })))), __jsx(Card, {\n    className: classes.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, \"Authentication\")), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, __jsx(InputLabel, {\n    id: \"mechanism\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, \"Mechanism\"), __jsx(Select, {\n    labelId: \"mechanism\",\n    onChange: function onChange(e) {\n      setValues(_objectSpread({}, values, {\n        useAuth: e.target.value\n      }));\n    },\n    value: values.useAuth,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, __jsx(MenuItem, {\n    value: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 19\n    }\n  }, \"No Authentication\"), __jsx(MenuItem, {\n    value: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }, \"Username and Password\")))), renderAuth())), __jsx(Card, {\n    className: classes.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, \"Miscellaneous\")), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    fullWidth: true,\n    id: \"timeout\",\n    name: \"timeout\",\n    label: \"Query Timeout\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  })))), renderSubmitButtons()));\n};\n\nexport default AddMongoDBDataSource;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/datasources/add/mongodb.tsx"],"names":["useState","makeStyles","Card","Grid","TextField","Input","IconButton","InputAdornment","InputLabel","MenuItem","FormControl","Select","Visibility","VisibilityOff","Button","DatasourceActions","CircularProgress","useStyles","theme","root","padding","cardBody","cardTitle","fontSize","backgroundColor","color","fontFamily","gridStyles","margin","width","h2","textAlign","borderBottom","lineHeight","span","background","card","marginBottom","AddMongoDBDataSource","classes","showPassword","useAuth","isLoading","values","setValues","attempts","setAttempts","title","type","force","description","config","port","server","db","user","password","state","setState","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","handleInputChange","target","value","name","handleAuthChange","renderSubmitButtons","display","justifyContent","handleSubmitData","createDatasource","res","error","message","renderAuth","bind","e"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport Input from '@material-ui/core/Input'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\nimport { Button } from '@material-ui/core'\nimport DatasourceActions from '../../../actions/datasource.actions'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '30px 15px 15px 15px',\n  },\n  cardBody: {\n    padding: '10px'\n  },\n  cardTitle: {\n    fontSize: '12px',\n    backgroundColor: '#3F51B5',\n    padding: '3px 3px 3px 6px',\n    color: '#FFF',\n    fontFamily: \"Roboto\"\n  },\n  gridStyles: {\n    margin: '10px 0 5px 0',\n    width: '100%'\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    margin: '10px 0 20px',\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  card: {\n    padding: '10px 15px 20px 15px',\n    marginBottom: '20px'\n  }\n}))\n\nconst AddMongoDBDataSource = () => {\n  const classes = useStyles();\n  const [values, setValues] = useState({ showPassword: false, useAuth: 0, isLoading: false })\n  const [attempts, setAttempts] = useState(0)\n  const [state, setState] = useState({\n    title: '',\n    type: 'mongodb',\n    force: false,\n    description: '',\n    config: {\n      port: 27017,\n      server: '',\n      db: '',\n      user: '',\n      password: ''\n    }\n  })\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  }\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault()\n  }\n\n  const handleInputChange = (event) => {\n    const { value, name } = event.target\n    setState({ ...state, [name]: value })\n    setAttempts(0)\n  }\n\n  const handleAuthChange = (event) => {\n    const { value, name } = event.target\n    setState({ ...state, config: { ...state.config, [name]: value } })\n  }\n\n  const renderSubmitButtons = () => {\n    return values.isLoading ? (\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <CircularProgress />\n      </div>\n    ) : attempts >= 1 ? (\n      <div>\n        <div className=\"alert alert-info\" style={{ display: 'flex', justifyContent: 'center' }}>\n          <p style={{ fontFamily: 'Roboto', margin: '0' }}>Connection failed to this database, would you like to save it anyway?</p>\n        </div>\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <Button>Cancel</Button>\n          <Button>Save</Button>\n        </div>\n      </div>\n    ) : (\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button>Cancel</Button>\n            <Button onClick={handleSubmitData}>Save</Button>\n          </div>\n        )\n  }\n\n  const handleSubmitData = async () => {\n    try {\n      setValues({ ...values, isLoading: true })\n      const res: any = await DatasourceActions.createDatasource(state)\n      setValues({ ...values, isLoading: false })\n    } catch (e) {\n      if (e.error.message == 'Connection Failed') {\n        setState({ ...state, force: true })\n        setAttempts(1)\n      }\n    }\n  }\n\n  const renderAuth = () => {\n    return values.useAuth ? (\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <TextField fullWidth onChange={handleAuthChange.bind(this)} required value={state.config.user} name=\"user\" label=\"Username\" />\n        </Grid>\n        <Grid item xs={6}>\n          <FormControl fullWidth>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input\n              required\n              name=\"password\"\n              type={values.showPassword ? 'text' : 'password'}\n              onChange={handleAuthChange.bind(this)}\n              value={state.config.password}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                  >\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        </Grid>\n      </Grid>\n    ) : <Grid container spacing={2}></Grid>\n  }\n\n  return (\n    <Card>\n      <div className={classes.cardTitle}>\n        Add a New Data Source - MongoDB\n      </div>\n      <Card className={classes.root}>\n\n        <Card className={classes.card}>\n          <h2 className={classes.h2}>\n            <span className={classes.span}>Properties</span>\n          </h2>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField onChange={handleInputChange.bind(this)} fullWidth required value={state.title} name=\"title\" label=\"Name\" />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField onChange={handleInputChange.bind(this)} fullWidth id=\"description\" value={state.description} name=\"description\" label=\"Description\" />\n            </Grid>\n          </Grid>\n        </Card>\n\n        <Card className={classes.card}>\n          <h2 className={classes.h2}>\n            <span className={classes.span}>Database Properties</span>\n          </h2>\n          <Grid container spacing={2}>\n            <Grid item xs={8}>\n              <TextField fullWidth onChange={handleAuthChange.bind(this)} required value={state.config.server} name=\"server\" label=\"Server\" />\n            </Grid>\n            <Grid item xs={4}>\n              <TextField fullWidth onChange={handleAuthChange.bind(this)} required value={state.config.port} name=\"port\" label=\"Port\" />\n            </Grid>\n            <Grid item xs={4}>\n              <TextField fullWidth onChange={handleAuthChange.bind(this)} required value={state.config.db} name=\"db\" label=\"Database\" />\n            </Grid>\n          </Grid>\n        </Card>\n\n        <Card className={classes.card}>\n          <h2 className={classes.h2}>\n            <span className={classes.span}>Authentication</span>\n          </h2>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <FormControl fullWidth>\n                <InputLabel id=\"mechanism\">Mechanism</InputLabel>\n                <Select\n                  labelId=\"mechanism\"\n                  onChange={(e) => { setValues({ ...values, useAuth: e.target.value as number }) }}\n                  value={values.useAuth}\n                >\n                  <MenuItem value={0}>No Authentication</MenuItem>\n                  <MenuItem value={1}>Username and Password</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            {renderAuth()}\n          </Grid>\n        </Card>\n\n        <Card className={classes.card}>\n          <h2 className={classes.h2}>\n            <span className={classes.span}>Miscellaneous</span>\n          </h2>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <TextField fullWidth id=\"timeout\" name=\"timeout\" label=\"Query Timeout\" />\n            </Grid>\n          </Grid>\n        </Card>\n\n        {renderSubmitButtons()}\n\n      </Card>\n    </Card>\n  )\n};\n\n\nexport default AddMongoDBDataSource;"]},"metadata":{},"sourceType":"module"}