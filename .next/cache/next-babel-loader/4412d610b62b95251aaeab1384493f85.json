{"ast":null,"code":"import axios from 'axios';\nimport config from 'next/config';\nimport Cookie from 'js-cookie';\nconst {\n  API_URL\n} = config().publicRuntimeConfig;\nexport default class WidgetSettingsActions {\n  static async addWidgetSettingsDocument(widgetSettingsId, data) {\n    return axios.post(`${API_URL}/WidgetSettings/${widgetSettingsId}/add-document`, data, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async editWidgetSettingsDocument(widgetSettingsId, data, keyId) {\n    return axios.post(`${API_URL}/WidgetSettings/${widgetSettingsId}/edit-document`, data, {\n      headers: {\n        Authorization: Cookie.get('id')\n      },\n      params: {\n        keyId\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async deleteWidgetSettingsDocument(widgetSettingsId, keyId) {\n    return axios.delete(`${API_URL}/WidgetSettings/${widgetSettingsId}/delete-document`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      },\n      params: {\n        keyId\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async createWidgetSettings(widgetSettings) {\n    return axios.post(`${API_URL}/WidgetSettings`, widgetSettings, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getSubWidgets(widgetSettingsId) {\n    return axios.get(`${API_URL}/WidgetSettings/${widgetSettingsId}/subWidgetSettings`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      },\n      params: {\n        filter: {\n          include: 'subWidgetSettings'\n        }\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async exportWidgetData(widgetSettingsId, format, method, selectedFields) {\n    if (format == 'email') {\n      return axios.get(`${API_URL}/WidgetSettings/${widgetSettingsId}/export-data`, {\n        headers: {\n          Authorization: Cookie.get('id')\n        },\n        params: {\n          format,\n          selectedFields,\n          method\n        }\n      }).then(res => res.data).catch(err => err.response);\n    } else {\n      window.open(`${API_URL}/WidgetSettings/${widgetSettingsId}/export-data?format=${format}&method=${method}&selectedFields=${selectedFields}`);\n    }\n  }\n\n  static async createSubWidget(widgetSettingsId, subWidgetSettingsId) {\n    return axios.post(`${API_URL}/WidgetSettings/${widgetSettingsId}/subWidgetSettings`, {\n      subWidgetSettingsId\n    }, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getWidgetSettingsMeasureConditions(widgetSettingsId) {\n    return axios.get(`${API_URL}/WidgetSettings/${widgetSettingsId}/measureConditions`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async createWidgetSettingsMeasureConditions(widgetSettingsId, measureCondition) {\n    return axios.post(`${API_URL}/WidgetSettings/${widgetSettingsId}/measureConditions`, measureCondition, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async deleteWidgetSettingsMeasureConditions(widgetSettingsId, measureConditionId) {\n    return axios.delete(`${API_URL}/WidgetSettings/${widgetSettingsId}/measureConditions/${measureConditionId}`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async deleteSubWidget(widgetSettingsId, subWidgetSettingsId) {\n    return axios.delete(`${API_URL}/WidgetSettings/${widgetSettingsId}/subWidgetSettings/${subWidgetSettingsId}`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getFormGroupWidgets() {\n    return axios.get(`${API_URL}/WidgetSettings`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      },\n      params: {\n        filter: {\n          where: {\n            type: \"Form Group\"\n          }\n        }\n      }\n    }).then(res => res.data).catch(err => err.response);\n  } // TODO\n\n\n  static async getWidgetSettings() {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  } // TODO\n\n\n  static async getWidgetSettingsById(id, Authorization) {\n    return axios.get(`${API_URL}/WidgetSettings/${id}`, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  } // TODO\n\n\n  static async updateWidgetSettings(id, widgetSettings) {\n    return axios.patch(`${API_URL}/WidgetSettings/${id}`, widgetSettings, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  } // TODO\n\n\n  static async deleteWidgetSettings(id) {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  }\n\n  static async executeWidgetQuery(id, Authorization) {\n    return axios.get(`${API_URL}/WidgetSettings/${id}/execute-query`, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n}","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/actions/widgetSettings.actions.ts"],"names":["axios","config","Cookie","API_URL","publicRuntimeConfig","WidgetSettingsActions","addWidgetSettingsDocument","widgetSettingsId","data","post","headers","Authorization","get","then","res","catch","err","response","editWidgetSettingsDocument","keyId","params","deleteWidgetSettingsDocument","delete","createWidgetSettings","widgetSettings","getSubWidgets","filter","include","exportWidgetData","format","method","selectedFields","window","open","createSubWidget","subWidgetSettingsId","getWidgetSettingsMeasureConditions","createWidgetSettingsMeasureConditions","measureCondition","deleteWidgetSettingsMeasureConditions","measureConditionId","deleteSubWidget","getFormGroupWidgets","where","type","getWidgetSettings","getWidgetSettingsById","id","updateWidgetSettings","patch","deleteWidgetSettings","executeWidgetQuery"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport config from 'next/config'\nimport Cookie from 'js-cookie'\nimport User from '../types/users.types'\nimport Dashboard from '../types/dashboard.types'\nimport Datasource from '../types/datasource.types'\nimport Widget from '../types/widget.types'\nimport MeasureCondition from '../types/measureCondition.types'\nimport WidgetSettings from '../types/widgetSettings.type'\nimport { promises } from 'dns'\n\nconst { API_URL } = config().publicRuntimeConfig\n\nexport default class WidgetSettingsActions {\n\n  public static async addWidgetSettingsDocument(widgetSettingsId: string, data): Promise<any> {\n    return axios\n      .post(`${API_URL}/WidgetSettings/${widgetSettingsId}/add-document`, data, { headers: { Authorization: Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async editWidgetSettingsDocument(widgetSettingsId: string, data, keyId: string): Promise<any> {\n    return axios\n      .post(`${API_URL}/WidgetSettings/${widgetSettingsId}/edit-document`, data, { headers: { Authorization: Cookie.get('id') }, params: { keyId } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async deleteWidgetSettingsDocument(widgetSettingsId: string, keyId: string): Promise<any> {\n    return axios\n      .delete(`${API_URL}/WidgetSettings/${widgetSettingsId}/delete-document`, { headers: { Authorization: Cookie.get('id') }, params: { keyId } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async createWidgetSettings(widgetSettings: WidgetSettings): Promise<WidgetSettings> {\n    return axios\n      .post(`${API_URL}/WidgetSettings`, widgetSettings, { headers: { Authorization: Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async getSubWidgets(widgetSettingsId: string): Promise<Array<WidgetSettings>> {\n    return axios\n      .get(\n        `${API_URL}/WidgetSettings/${widgetSettingsId}/subWidgetSettings`,\n        {\n          headers: {\n            Authorization: Cookie.get('id')\n          },\n          params: {\n            filter: { include: 'subWidgetSettings' }\n          }\n        }\n      )\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async exportWidgetData(widgetSettingsId: string, format: string, method: string, selectedFields: Array<any>): Promise<any> {\n    if (format == 'email') {\n      return axios\n        .get(\n          `${API_URL}/WidgetSettings/${widgetSettingsId}/export-data`,\n          {\n            headers: { Authorization: Cookie.get('id') },\n            params: { format, selectedFields, method }\n          }\n        )\n        .then(res => res.data)\n        .catch(err => err.response)\n    } else {\n      window.open(`${API_URL}/WidgetSettings/${widgetSettingsId}/export-data?format=${format}&method=${method}&selectedFields=${selectedFields}`)\n    }\n  }\n\n  public static async createSubWidget(widgetSettingsId: string, subWidgetSettingsId: string): Promise<any> {\n    return axios\n      .post(\n        `${API_URL}/WidgetSettings/${widgetSettingsId}/subWidgetSettings`,\n        { subWidgetSettingsId },\n        { headers: { Authorization: Cookie.get('id') } }\n      )\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async getWidgetSettingsMeasureConditions(widgetSettingsId: string): Promise<Array<MeasureCondition>> {\n    return axios\n      .get(`${API_URL}/WidgetSettings/${widgetSettingsId}/measureConditions`, { headers: { Authorization: Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async createWidgetSettingsMeasureConditions(widgetSettingsId: string, measureCondition: MeasureCondition): Promise<MeasureCondition> {\n    return axios\n      .post(\n        `${API_URL}/WidgetSettings/${widgetSettingsId}/measureConditions`,\n        measureCondition,\n        { headers: { Authorization: Cookie.get('id') } }\n      )\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async deleteWidgetSettingsMeasureConditions(widgetSettingsId: string, measureConditionId: string): Promise<any> {\n    return axios\n      .delete(\n        `${API_URL}/WidgetSettings/${widgetSettingsId}/measureConditions/${measureConditionId}`,\n        { headers: { Authorization: Cookie.get('id') } }\n      )\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async deleteSubWidget(widgetSettingsId: string, subWidgetSettingsId: string): Promise<any> {\n    return axios\n      .delete(\n        `${API_URL}/WidgetSettings/${widgetSettingsId}/subWidgetSettings/${subWidgetSettingsId}`,\n        { headers: { Authorization: Cookie.get('id') } }\n      )\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async getFormGroupWidgets(): Promise<Array<WidgetSettings>> {\n    return axios\n      .get(\n        `${API_URL}/WidgetSettings`,\n        {\n          headers: {\n            Authorization: Cookie.get('id')\n          },\n          params: {\n            filter: { where: { type: \"Form Group\" } }\n          }\n        }\n      )\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  // TODO\n  public static async getWidgetSettings(): Promise<Array<WidgetSettings>> {\n    return axios\n      .post('', {})\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  // TODO\n  public static async getWidgetSettingsById(id: string, Authorization?: string): Promise<WidgetSettings> {\n    return axios\n      .get(`${API_URL}/WidgetSettings/${id}`, { headers: { Authorization: Authorization || Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  // TODO\n  public static async updateWidgetSettings(id: string, widgetSettings: WidgetSettings): Promise<WidgetSettings> {\n    return axios\n      .patch(`${API_URL}/WidgetSettings/${id}`, widgetSettings, { headers: { Authorization: Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  // TODO\n  public static async deleteWidgetSettings(id: string): Promise<WidgetSettings> {\n    return axios\n      .post('', {})\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async executeWidgetQuery(id: string, Authorization?: string): Promise<any> {\n    return axios\n      .get(`${API_URL}/WidgetSettings/${id}/execute-query`, { headers: { Authorization: Authorization || Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n}"]},"metadata":{},"sourceType":"module"}