{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\signup\\\\business.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Swal from 'sweetalert2';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport { register } from '../../actions/auth.actions';\nimport countries from '../../helpers/countries';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from '@material-ui/core';\n\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined' ? isoCode.toUpperCase().replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + 127397)) : isoCode;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: '80vh',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  loginCard: {\n    padding: '30px 15px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  headerHolder: {\n    borderRight: '1px solid #DEDEDE'\n  },\n  formHolder: {},\n  textField: {\n    width: '90%'\n  },\n  fieldsGrid: {\n    marginTop: theme.spacing(4)\n  },\n  signupButtonHolder: {\n    display: 'flex',\n    marginTop: theme.spacing(4),\n    justifyContent: 'center'\n  },\n  signupButton: {\n    width: '50%'\n  },\n  loginHolder: {\n    textAlign: 'center',\n    marginTop: theme.spacing(3)\n  },\n  loginText: {\n    marginRight: theme.spacing(2)\n  },\n  loginButton: {}\n}));\n\nconst personalSignUp = () => {\n  const classes = useStyles();\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    countryCode: '',\n    phoneNumber: '',\n    country: '',\n    city: '',\n    password: '',\n    confirmPassword: '',\n    roleString: 'organization'\n  });\n\n  const handleChange = e => {\n    setData(_objectSpread({}, data, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const submitSignup = async () => {\n    try {\n      const user = await register(data);\n      console.log(user);\n    } catch (e) {\n      switch (e.status) {\n        case 422:\n          Swal.fire('Error', 'Email already exists', 'error');\n          break;\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(TextField, {\n    name: \"firstName\",\n    label: 'Company Name',\n    required: true,\n    onChange: handleChange,\n    value: data.firstName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(TextField, {\n    name: \"lastName\",\n    label: 'Website URL',\n    required: true,\n    onChange: handleChange,\n    value: data.lastName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })))), __jsx(Grid, {\n    container: true,\n    className: classes.fieldsGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(TextField, {\n    name: \"email\",\n    label: 'Email',\n    type: 'email',\n    required: true,\n    onChange: handleChange,\n    value: data.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(Autocomplete, {\n    options: countries,\n    getOptionLabel: option => `+${option.phone}`,\n    renderOption: option => __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, countryToFlag(option.code)), __jsx(\"span\", {\n      style: {\n        fontSize: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"+\", option.phone)),\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      name: 'countryCode',\n      label: \"Country Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, __jsx(TextField, {\n    name: \"phoneNumber\",\n    label: 'Phone Number',\n    onChange: handleChange,\n    value: data.phoneNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })))))), __jsx(Grid, {\n    container: true,\n    className: classes.fieldsGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, __jsx(Autocomplete, {\n    options: countries,\n    getOptionLabel: option => option.label,\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      name: 'country',\n      label: \"Country\",\n      fullWidth: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, __jsx(TextField, {\n    name: \"city\",\n    label: 'City',\n    required: true,\n    onChange: handleChange,\n    value: data.city,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  })))), __jsx(Grid, {\n    container: true,\n    className: classes.fieldsGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, __jsx(TextField, {\n    name: \"password\",\n    label: 'Password',\n    required: true,\n    onChange: handleChange,\n    value: data.password,\n    type: 'password',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, __jsx(TextField, {\n    name: \"confirmPassword\",\n    label: 'Confirm Password',\n    required: true,\n    onChange: handleChange,\n    value: data.confirmPassword,\n    type: 'password',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.signupButtonHolder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, __jsx(Button, {\n    className: classes.signupButton,\n    onClick: submitSignup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Signup\")));\n};\n\nexport default personalSignUp;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/signup/business.jsx"],"names":["React","useState","useEffect","makeStyles","Swal","Button","FormControl","Grid","register","countries","Autocomplete","TextField","countryToFlag","isoCode","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","useStyles","theme","root","minHeight","alignItems","justifyContent","loginCard","padding","display","flexDirection","headerHolder","borderRight","formHolder","textField","width","fieldsGrid","marginTop","spacing","signupButtonHolder","signupButton","loginHolder","textAlign","loginText","marginRight","loginButton","personalSignUp","classes","data","setData","firstName","lastName","email","countryCode","phoneNumber","country","city","password","confirmPassword","roleString","handleChange","e","target","name","value","submitSignup","user","console","log","status","fire","option","phone","code","fontSize","params","label"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Swal from 'sweetalert2'\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { register } from '../../actions/auth.actions';\r\nimport countries from '../../helpers/countries'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nfunction countryToFlag(isoCode) {\r\n  return typeof String.fromCodePoint !== 'undefined'\r\n    ? isoCode.toUpperCase().replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + 127397))\r\n    : isoCode;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    minHeight: '80vh',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  loginCard: {\r\n    padding: '30px 15px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center'\r\n  },\r\n  headerHolder: {\r\n    borderRight: '1px solid #DEDEDE'\r\n  },\r\n  formHolder: {\r\n\r\n  },\r\n  textField: {\r\n    width: '90%'\r\n  },\r\n  fieldsGrid: {\r\n    marginTop: theme.spacing(4)\r\n  },\r\n  signupButtonHolder: {\r\n    display: 'flex',\r\n    marginTop: theme.spacing(4),\r\n    justifyContent: 'center'\r\n  },\r\n  signupButton: {\r\n    width: '50%'\r\n  },\r\n  loginHolder: {\r\n    textAlign: 'center',\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  loginText: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  loginButton: {\r\n  }\r\n}));\r\n\r\nconst personalSignUp = () => {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    countryCode: '',\r\n    phoneNumber: '',\r\n    country: '',\r\n    city: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    roleString: 'organization'\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setData({\r\n      ...data,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const submitSignup = async () => {\r\n    try {\r\n      const user = await register(data)\r\n      console.log(user)\r\n    } catch (e) {\r\n      switch (e.status) {\r\n        case 422:\r\n          Swal.fire('Error', 'Email already exists', 'error')\r\n          break\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\r\n          <FormControl className={classes.textField}>\r\n            <TextField\r\n              name=\"firstName\"\r\n              label={'Company Name'}\r\n              required\r\n              onChange={handleChange}\r\n              value={data.firstName}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\r\n          <FormControl className={classes.textField}>\r\n            <TextField\r\n              name=\"lastName\"\r\n              label={'Website URL'}\r\n              required\r\n              onChange={handleChange}\r\n              value={data.lastName}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container className={classes.fieldsGrid}>\r\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\r\n          <FormControl className={classes.textField}>\r\n            <TextField\r\n              name=\"email\"\r\n              label={'Email'}\r\n              type={'email'}\r\n              required\r\n              onChange={handleChange}\r\n              value={data.email}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={4}>\r\n              <Autocomplete\r\n                options={countries}\r\n                getOptionLabel={option => `+${option.phone}`}\r\n                renderOption={option => (\r\n                  <React.Fragment>\r\n                    <span>{countryToFlag(option.code)}</span>\r\n                    <span style={{ fontSize: '10px' }}>+{option.phone}</span>\r\n                  </React.Fragment>\r\n                )}\r\n                renderInput={params => (\r\n                  <TextField {...params} name={'countryCode'} label=\"Country Code\" />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <FormControl className={classes.textField}>\r\n                <TextField\r\n                  name=\"phoneNumber\"\r\n                  label={'Phone Number'}\r\n                  onChange={handleChange}\r\n                  value={data.phoneNumber}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container className={classes.fieldsGrid}>\r\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\r\n          <FormControl className={classes.textField}>\r\n            <Autocomplete\r\n              options={countries}\r\n              getOptionLabel={option => option.label}\r\n              renderInput={params => (\r\n                <TextField {...params} name={'country'} label=\"Country\" fullWidth required />\r\n              )}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\r\n          <FormControl className={classes.textField}>\r\n            <TextField\r\n              name=\"city\"\r\n              label={'City'}\r\n              required\r\n              onChange={handleChange}\r\n              value={data.city}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container className={classes.fieldsGrid}>\r\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\r\n          <FormControl className={classes.textField}>\r\n            <TextField\r\n              name=\"password\"\r\n              label={'Password'}\r\n              required\r\n              onChange={handleChange}\r\n              value={data.password}\r\n              type={'password'}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n\r\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\r\n          <FormControl className={classes.textField}>\r\n            <TextField\r\n              name=\"confirmPassword\"\r\n              label={'Confirm Password'}\r\n              required\r\n              onChange={handleChange}\r\n              value={data.confirmPassword}\r\n              type={'password'}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} className={classes.signupButtonHolder}>\r\n        <Button className={classes.signupButton} onClick={submitSignup}>Signup</Button>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default personalSignUp"]},"metadata":{},"sourceType":"module"}