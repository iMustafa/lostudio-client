{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/form-controls/autocomplete/autocomplete-widget-settings.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Select from '@material-ui/core/Select';\nimport DataSourceActions from '../../../../actions/datasource.actions';\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions';\nimport Swal from 'sweetalert2';\nimport { Typography } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}));\n\nconst AutoCompleteWidgetSettings = ({\n  widget,\n  handleSettingsClose,\n  isAdding,\n  onWidgetAdd\n}) => {\n  const classes = useStyles();\n  const {\n    0: selectionOption,\n    1: setSelectionOption\n  } = useState('datasource');\n  const {\n    0: properties,\n    1: setProperties\n  } = useState({\n    label: '',\n    id: '',\n    name: '',\n    placeholder: '',\n    className: '',\n    value: ''\n  });\n  const {\n    0: datasources,\n    1: setDatasources\n  } = useState([]);\n  const {\n    0: datasource,\n    1: setDatasource\n  } = useState(!isAdding ? widget.dataSourceId : '');\n  const {\n    0: docList,\n    1: setDocList\n  } = useState([]);\n  const {\n    0: doc,\n    1: setDoc\n  } = useState(!isAdding ? widget.config.docId : '');\n  const {\n    0: fieldList,\n    1: setFieldList\n  } = useState([]);\n  const {\n    0: fields,\n    1: setFields\n  } = useState(!isAdding ? widget.config.fields : '');\n\n  const getDatasources = async () => {\n    try {\n      const $datasources = await DataSourceActions.getDatasources({});\n\n      if (!isAdding) {\n        const $docList = await DataSourceActions.getDocList(datasource);\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc);\n        setDocList($docList);\n        setFieldList($fieldList);\n      }\n\n      setDatasources($datasources);\n      return $datasources;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getDocList = async id => {\n    try {\n      setDatasource(id);\n      const $docList = await DataSourceActions.getDocList(id);\n      setDocList($docList);\n      return $docList;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getFieldList = async (id, docId) => {\n    try {\n      setDoc(docId);\n      const $fieldList = await DataSourceActions.getFieldList(id, docId);\n      setFieldList($fieldList);\n      return $fieldList;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleDatasourceChange = async event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFieldList([]);\n    setFields([]);\n    await getDocList(value);\n  };\n\n  const handleDocChange = async event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFieldList([]);\n    setFields([]);\n    await getFieldList(datasource, value);\n  };\n\n  const handleFieldChange = event => {\n    const {\n      value\n    } = event.target;\n    console.log(value);\n    setFields(value);\n  };\n\n  const handlePropertiesChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setProperties(_objectSpread({}, properties, {\n      [name]: value\n    }));\n  };\n\n  useEffect(() => {\n    getDatasources();\n  }, []);\n\n  const handleSourceChange = event => {\n    const {\n      value\n    } = event.target;\n    setSelectionOption(value);\n  };\n\n  const saveConfigData = async () => {\n    try {\n      const data = {\n        dataSourceId: datasource,\n        config: {\n          docId: doc,\n          fields: [fields],\n          type: selectionOption == 'datasource' ? 'simple' : 'constant',\n          func: 'find',\n          query: {},\n          values: selectionOption == 'datasource' ? [] : []\n        },\n        properties,\n        type: 'Auto Complete'\n      };\n\n      if (isAdding) {\n        onWidgetAdd(data);\n      } else {\n        const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data);\n        handleSettingsClose(update);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const renderFieldSettings = () => fieldList.length ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Fields Settings\")), __jsx(RadioGroup, {\n    onChange: handleFieldChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, fieldList.map(field => __jsx(FormControlLabel, {\n    key: field,\n    control: __jsx(Radio, {\n      value: field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }),\n    label: field,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }))), __jsx(Typography, {\n    style: {\n      fontSize: 12,\n      color: '#F00',\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"* You can only select one field in an autocomplete textfield.\")) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  });\n\n  return __jsx(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Widget Info\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Title\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })), __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Widget Properties\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"Label\"), __jsx(Input, {\n    name: \"label\",\n    onChange: handlePropertiesChange,\n    value: properties.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"ID\"), __jsx(Input, {\n    name: \"id\",\n    onChange: handlePropertiesChange,\n    value: properties.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"Name\"), __jsx(Input, {\n    name: \"name\",\n    onChange: handlePropertiesChange,\n    value: properties.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"Placeholder\"), __jsx(Input, {\n    name: \"placeholder\",\n    onChange: handlePropertiesChange,\n    value: properties.placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Class name\"), __jsx(Input, {\n    name: \"className\",\n    onChange: handlePropertiesChange,\n    value: properties.className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Value\"), __jsx(Input, {\n    name: \"value\",\n    onChange: handlePropertiesChange,\n    value: properties.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  })), __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Unique Properties\")), __jsx(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, __jsx(RadioGroup, {\n    onChange: handleSourceChange,\n    value: selectionOption,\n    style: {\n      justifyContent: 'space-evenly',\n      width: '100%',\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, __jsx(FormControlLabel, {\n    value: \"datasource\",\n    control: __jsx(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }),\n    label: \"From Data Source\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }), __jsx(FormControlLabel, {\n    value: \"fixed\",\n    control: __jsx(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }),\n    label: \"Fixed Values\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }))), selectionOption == 'datasource' ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    id: \"data-source\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, \"Data Source\"), __jsx(Select, {\n    name: \"datasource\",\n    labelId: \"data-source\",\n    value: datasource,\n    onChange: handleDatasourceChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, datasources.map(item => __jsx(MenuItem, {\n    key: item.id,\n    value: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, item.title)))), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    disabled: datasource ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    id: \"doc-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, \"Table/Collection\"), __jsx(Select, {\n    name: \"docList\",\n    labelId: \"doc-list\",\n    value: doc,\n    onChange: handleDocChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, docList.map(item => __jsx(MenuItem, {\n    key: item,\n    value: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, item)))), renderFieldSettings()) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }), __jsx(Button, {\n    onClick: saveConfigData,\n    fullWidth: true,\n    color: \"primary\",\n    className: classes.formControl,\n    style: {\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, \"Save\"));\n};\n\nexport default AutoCompleteWidgetSettings;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/form-controls/autocomplete/autocomplete-widget-settings.jsx"],"names":["useState","useEffect","makeStyles","Button","MenuItem","Input","InputLabel","FormControl","FormGroup","FormControlLabel","Radio","Checkbox","RadioGroup","Select","DataSourceActions","WidgetSettingsActions","Swal","Typography","useStyles","theme","list","width","paddingLeft","paddingRight","paddingTop","h2","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","formControl","AutoCompleteWidgetSettings","widget","handleSettingsClose","isAdding","onWidgetAdd","classes","selectionOption","setSelectionOption","properties","setProperties","label","id","name","placeholder","className","value","datasources","setDatasources","datasource","setDatasource","dataSourceId","docList","setDocList","doc","setDoc","config","docId","fieldList","setFieldList","fields","setFields","getDatasources","$datasources","$docList","getDocList","$fieldList","getFieldList","e","console","log","handleDatasourceChange","event","target","handleDocChange","handleFieldChange","handlePropertiesChange","handleSourceChange","saveConfigData","data","type","func","query","values","update","updateWidgetSettings","renderFieldSettings","length","map","field","justifyContent","flexDirection","item","title"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Select from '@material-ui/core/Select'\nimport DataSourceActions from '../../../../actions/datasource.actions'\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\nimport Swal from 'sweetalert2'\nimport { Typography } from '@material-ui/core'\n\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}))\n\nconst AutoCompleteWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\n  const classes = useStyles()\n  const [selectionOption, setSelectionOption] = useState('datasource')\n  const [properties, setProperties] = useState({\n    label: '', id: '', name: '', placeholder: '', className: '', value: ''\n  })\n  const [datasources, setDatasources] = useState([])\n  const [datasource, setDatasource] = useState(!isAdding ? widget.dataSourceId : '')\n  const [docList, setDocList] = useState([])\n  const [doc, setDoc] = useState(!isAdding ? widget.config.docId : '')\n  const [fieldList, setFieldList] = useState([])\n  const [fields, setFields] = useState(!isAdding ? widget.config.fields : '')\n\n  const getDatasources = async () => {\n    try {\n      const $datasources = await DataSourceActions.getDatasources({})\n      if (!isAdding) {\n        const $docList = await DataSourceActions.getDocList(datasource)\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\n        setDocList($docList)\n        setFieldList($fieldList)\n      }\n      setDatasources($datasources)\n      return $datasources\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getDocList = async (id) => {\n    try {\n      setDatasource(id)\n      const $docList = await DataSourceActions.getDocList(id)\n      setDocList($docList)\n      return $docList\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getFieldList = async (id, docId) => {\n    try {\n      setDoc(docId)\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\n      setFieldList($fieldList)\n      return $fieldList\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const handleDatasourceChange = async (event) => {\n    const { name, value } = event.target\n    setFieldList([])\n    setFields([])\n    await getDocList(value)\n  }\n\n  const handleDocChange = async (event) => {\n    const { name, value } = event.target\n    setFieldList([])\n    setFields([])\n    await getFieldList(datasource, value)\n  }\n\n  const handleFieldChange = event => {\n    const { value } = event.target\n    console.log(value)\n    setFields(value)\n  }\n\n  const handlePropertiesChange = (event) => {\n    const { name, value } = event.target\n    setProperties({ ...properties, [name]: value })\n  }\n\n  useEffect(() => {\n    getDatasources()\n  }, [])\n\n  const handleSourceChange = (event) => {\n    const { value } = event.target\n    setSelectionOption(value)\n  }\n\n  const saveConfigData = async () => {\n    try {\n      const data = {\n        dataSourceId: datasource,\n        config: {\n          docId: doc,\n          fields: [fields],\n          type: selectionOption == 'datasource' ? 'simple' : 'constant',\n          func: 'find',\n          query: {},\n          values: selectionOption == 'datasource' ? [] : []\n        },\n        properties,\n        type: 'Auto Complete'\n      }\n      if (isAdding) {\n        onWidgetAdd(data)\n      } else {\n        const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data)\n        handleSettingsClose(update)\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const renderFieldSettings = () => fieldList.length ?\n    (\n      <div>\n        <h2 className={classes.h2}>\n          <span className={classes.span}>Fields Settings</span>\n        </h2>\n        <RadioGroup onChange={handleFieldChange}>\n          {\n            fieldList.map(field => (\n              <FormControlLabel\n                key={field}\n                control={<Radio value={field} />}\n                label={field}\n              />))\n          }\n        </RadioGroup>\n        <Typography style={{ fontSize: 12, color: '#F00', marginTop: 10 }}>\n          * You can only select one field in an autocomplete textfield.\n    </Typography>\n      </div>\n    ) : (\n      <div>\n\n      </div>\n    )\n\n  return (\n    <div className={classes.list} role=\"presentation\">\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Widget Info</span>\n      </h2>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Title</InputLabel>\n        <Input />\n      </FormControl>\n\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Widget Properties</span>\n      </h2>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Label</InputLabel>\n        <Input name='label' onChange={handlePropertiesChange} value={properties.label} />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>ID</InputLabel>\n        <Input name='id' onChange={handlePropertiesChange} value={properties.id} />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Name</InputLabel>\n        <Input name='name' onChange={handlePropertiesChange} value={properties.name} />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Placeholder</InputLabel>\n        <Input name='placeholder' onChange={handlePropertiesChange} value={properties.placeholder} />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Class name</InputLabel>\n        <Input name='className' onChange={handlePropertiesChange} value={properties.className} />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Value</InputLabel>\n        <Input name='value' onChange={handlePropertiesChange} value={properties.value} />\n      </FormControl>\n\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Unique Properties</span>\n      </h2>\n      <FormGroup row>\n        <RadioGroup onChange={handleSourceChange} value={selectionOption} style={{ justifyContent: 'space-evenly', width: '100%', flexDirection: 'row' }}>\n          <FormControlLabel value=\"datasource\" control={<Radio />} label=\"From Data Source\" />\n          <FormControlLabel value=\"fixed\" control={<Radio />} label=\"Fixed Values\" />\n        </RadioGroup>\n      </FormGroup>\n      {\n        selectionOption == 'datasource' ? (\n          <div>\n            <FormControl fullWidth className={classes.formControl}>\n              <InputLabel id=\"data-source\">Data Source</InputLabel>\n              <Select\n                name=\"datasource\"\n                labelId=\"data-source\"\n                value={datasource}\n                onChange={handleDatasourceChange}\n              >\n                {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\n              </Select>\n            </FormControl>\n\n            <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\n              <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\n              <Select\n                name=\"docList\"\n                labelId=\"doc-list\"\n                value={doc}\n                onChange={handleDocChange}\n              >\n                {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\n              </Select>\n            </FormControl>\n            {renderFieldSettings()}\n          </div>\n        ) : (\n            <div>\n\n            </div>\n          )\n      }\n      <Button onClick={saveConfigData} fullWidth color=\"primary\" className={classes.formControl} style={{ marginBottom: 10 }}>Save</Button>\n    </div>\n  )\n}\n\nexport default AutoCompleteWidgetSettings"]},"metadata":{},"sourceType":"module"}