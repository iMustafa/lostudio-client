{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SystemWidgets from './system-widgets';\nimport MyWidgets from './my-widgets';\n\nconst TabPanel = props => {\n  const {\n    children,\n    value,\n    index\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `full-width-tabpanel-${index}`,\n    \"aria-labelledby\": `full-width-tab-${index}`\n  }, other), value === index && __jsx(Box, {\n    p: 3\n  }, children));\n};\n\nconst a11yProps = index => {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`\n  };\n};\n\nconst useStyles = makeStyles(() => ({}));\n\nconst WidgetSidemenu = ({\n  onWidgetClick,\n  widgetSettings,\n  addPredefinedWidget\n}) => {\n  const classes = useStyles();\n  const {\n    0: value,\n    1: setValue\n  } = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return __jsx(\"div\", null, __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\"\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    \"aria-label\": \"full width tabs example\"\n  }, __jsx(Tab, _extends({\n    label: \"System Widgets\"\n  }, a11yProps(0))), __jsx(Tab, _extends({\n    label: \"My Widgets\"\n  }, a11yProps(1))))), __jsx(\"div\", {\n    index: value\n  }, __jsx(TabPanel, {\n    value: value,\n    index: 0\n  }, __jsx(SystemWidgets, {\n    onWidgetClick: onWidgetClick\n  })), __jsx(TabPanel, {\n    value: value,\n    index: 1\n  }, __jsx(MyWidgets, {\n    addPredefinedWidget: addPredefinedWidget,\n    widgetSettings: widgetSettings\n  }))));\n};\n\nexport default WidgetSidemenu;","map":null,"metadata":{},"sourceType":"module"}