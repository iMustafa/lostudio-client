{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/form-controls/file/file-widget-settings.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport DataSourceActions from '../../../../actions/datasource.actions';\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions';\nimport Swal from 'sweetalert2';\nimport { Typography } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    list: {\n      width: 500,\n      paddingLeft: \"15px\",\n      paddingRight: \"15px\",\n      paddingTop: \"15px\"\n    },\n    h2: {\n      width: '100%',\n      textAlign: 'center',\n      borderBottom: '1px solid #000',\n      lineHeight: '0.1em',\n      marginTop: \"20px\",\n      marginBottom: \"20px\",\n      fontFamily: 'Roboto',\n      fontSize: '13px',\n      color: \"#3F51B5\"\n    },\n    span: {\n      background: '#fff',\n      padding: '0 10px'\n    },\n    formControl: {\n      marginTop: \"15px\"\n    }\n  };\n});\nvar acceptedFileFormats = [\"text/plain\", \"application/pdf\", \"image/png\", \"image/tiff\", \"image/webp\", \"image/gif\", \"image/jpeg\", \"application/json\", \"audio/mpeg\", \"audio/wav\", \"audio/webm\", \"video/mpeg\", \"video/ogg\", \"video/mp2t\", \"video/webm\", \"video/3gpp\", \"video/3gpp2\", \"application/xml\", \"text/csv\"];\n\nvar FileWidgetSettings = function FileWidgetSettings(_ref) {\n  var widget = _ref.widget,\n      handleSettingsClose = _ref.handleSettingsClose,\n      isAdding = _ref.isAdding,\n      onWidgetAdd = _ref.onWidgetAdd;\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      selectedFileFormats = _useState[0],\n      setSelectedFileFormats = _useState[1];\n\n  var handleFieldChange = function handleFieldChange(name) {\n    return function (event) {\n      var checked = event.target.checked;\n      checked ? setSelectedFileFormats([].concat(_toConsumableArray(selectedFileFormats), [name])) : setSelectedFileFormats(selectedFileFormats.filter(function (format) {\n        return format != name;\n      }));\n    };\n  };\n\n  return __jsx(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Widget Info\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Title\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Widget Properties\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Label\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"ID\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Name\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Placeholder\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Class name\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Value\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Type\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Unique Properties\")), __jsx(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Accepted File Formats\"), acceptedFileFormats.map(function (format) {\n    return __jsx(FormControlLabel, {\n      key: format,\n      control: __jsx(Checkbox, {\n        checked: selectedFileFormats.includes(format),\n        onChange: handleFieldChange(format),\n        value: format,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }),\n      label: format,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    });\n  }), __jsx(Button, {\n    fullWidth: true,\n    color: \"primary\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Save\"));\n};\n\nexport default FileWidgetSettings;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/form-controls/file/file-widget-settings.jsx"],"names":["useState","useEffect","makeStyles","Button","Input","InputLabel","FormControl","FormControlLabel","Checkbox","Select","DataSourceActions","WidgetSettingsActions","Swal","Typography","useStyles","theme","list","width","paddingLeft","paddingRight","paddingTop","h2","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","formControl","acceptedFileFormats","FileWidgetSettings","widget","handleSettingsClose","isAdding","onWidgetAdd","classes","selectedFileFormats","setSelectedFileFormats","handleFieldChange","name","event","checked","target","filter","format","map","includes"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Select from '@material-ui/core/Select'\nimport DataSourceActions from '../../../../actions/datasource.actions'\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\nimport Swal from 'sweetalert2'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}))\n\nconst acceptedFileFormats = [\n  \"text/plain\", \"application/pdf\", \"image/png\", \"image/tiff\", \"image/webp\", \"image/gif\", \"image/jpeg\",\n  \"application/json\", \"audio/mpeg\", \"audio/wav\", \"audio/webm\", \"video/mpeg\", \"video/ogg\", \"video/mp2t\",\n  \"video/webm\", \"video/3gpp\", \"video/3gpp2\", \"application/xml\", \"text/csv\"\n]\n\nconst FileWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\n  const classes = useStyles()\n  const [selectedFileFormats, setSelectedFileFormats] = useState([])\n\n  const handleFieldChange = name => event => {\n    const { checked } = event.target\n    checked ? setSelectedFileFormats([...selectedFileFormats, name]) : setSelectedFileFormats(selectedFileFormats.filter(format => format != name))\n  }\n\n  return (\n    <div className={classes.list} role=\"presentation\">\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Widget Info</span>\n      </h2>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Title</InputLabel>\n        <Input />\n      </FormControl>\n\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Widget Properties</span>\n      </h2>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Label</InputLabel>\n        <Input />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>ID</InputLabel>\n        <Input />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Name</InputLabel>\n        <Input />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Placeholder</InputLabel>\n        <Input />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Class name</InputLabel>\n        <Input />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Value</InputLabel>\n        <Input />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Type</InputLabel>\n        <Input />\n      </FormControl>\n\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Unique Properties</span>\n      </h2>\n      <Typography>Accepted File Formats</Typography>\n      {acceptedFileFormats.map(format => (<FormControlLabel\n        key={format}\n        control={\n          <Checkbox checked={selectedFileFormats.includes(format)} onChange={handleFieldChange(format)} value={format} />\n        }\n        label={format}\n      />))}\n\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\n    </div>\n  )\n}\n\nexport default FileWidgetSettings"]},"metadata":{},"sourceType":"module"}