{"ast":null,"code":"import axios from 'axios';\nimport config from 'next/config';\nimport Cookie from 'js-cookie';\nvar API_URL = config().publicRuntimeConfig.API_URL;\nexport var login = function login(data) {\n  return new Promise(function (resolve, reject) {\n    axios.post(\"\".concat(API_URL, \"/users/login\"), data).then(function (res) {\n      return resolve(res.data);\n    })[\"catch\"](function (err) {\n      return reject(err.response);\n    });\n  });\n};\nexport var register = function register(data) {\n  return new Promise(function (resolve, reject) {\n    axios.post(\"\".concat(API_URL, \"/users\"), data).then(function (res) {\n      return resolve(res.data);\n    })[\"catch\"](function (err) {\n      return reject(err.response);\n    });\n  });\n};\nexport var logout = function logout() {\n  return new Promise(function (resolve, reject) {\n    axios.post(\"\".concat(API_URL, \"/users/logout\"), {}, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(function (res) {\n      return resolve(res.data);\n    })[\"catch\"](function (err) {\n      return reject(err);\n    });\n  });\n};\nexport var deleteCookie = function deleteCookie() {\n  Cookie.remove('id');\n  Cookie.remove('ttl');\n  Cookie.remove('userId');\n  Cookie.remove('created');\n};\nexport var saveLoginData = function saveLoginData(data) {\n  Object.keys(data).forEach(function (key) {\n    Cookie.set(key, data[key]);\n  });\n};","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/actions/auth.actions.ts"],"names":["axios","config","Cookie","API_URL","publicRuntimeConfig","login","data","Promise","resolve","reject","post","then","res","err","response","register","logout","headers","Authorization","get","deleteCookie","remove","saveLoginData","Object","keys","forEach","key","set"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;IAOQC,O,GAAYF,MAAM,GAAGG,mB,CAArBD,O;AAER,OAAO,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD;AAAA,SAAoD,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxGT,IAAAA,KAAK,CAACU,IAAN,WAAcP,OAAd,mBAAqCG,IAArC,EACGK,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACI,GAAG,CAACN,IAAL,CAAX;AAAA,KADX,WAES,UAAAO,GAAG;AAAA,aAAIJ,MAAM,CAACI,GAAG,CAACC,QAAL,CAAV;AAAA,KAFZ;AAGD,GAJwE,CAApD;AAAA,CAAd;AAMP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACT,IAAD;AAAA,SAA4B,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACnFT,IAAAA,KAAK,CAACU,IAAN,WAAcP,OAAd,aAA+BG,IAA/B,EACGK,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACI,GAAG,CAACN,IAAL,CAAX;AAAA,KADX,WAES,UAAAO,GAAG;AAAA,aAAIJ,MAAM,CAACI,GAAG,CAACC,QAAL,CAAV;AAAA,KAFZ;AAGD,GAJmD,CAA5B;AAAA,CAAjB;AAMP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS;AAAA,SAAM,IAAIT,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC3DT,IAAAA,KAAK,CAACU,IAAN,WAAcP,OAAd,oBAAsC,EAAtC,EAA0C;AACxCc,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEhB,MAAM,CAACiB,GAAP,CAAW,IAAX;AAAjB;AAD+B,KAA1C,EAGGR,IAHH,CAGQ,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACI,GAAG,CAACN,IAAL,CAAX;AAAA,KAHX,WAIS,UAAAO,GAAG;AAAA,aAAIJ,MAAM,CAACI,GAAD,CAAV;AAAA,KAJZ;AAKD,GAN2B,CAAN;AAAA,CAAf;AAQP,OAAO,IAAMO,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChClB,EAAAA,MAAM,CAACmB,MAAP,CAAc,IAAd;AACAnB,EAAAA,MAAM,CAACmB,MAAP,CAAc,KAAd;AACAnB,EAAAA,MAAM,CAACmB,MAAP,CAAc,QAAd;AACAnB,EAAAA,MAAM,CAACmB,MAAP,CAAc,SAAd;AACD,CALM;AAOP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAChB,IAAD,EAAyB;AACpDiB,EAAAA,MAAM,CAACC,IAAP,CAAYlB,IAAZ,EACGmB,OADH,CACW,UAAAC,GAAG,EAAI;AACdxB,IAAAA,MAAM,CAACyB,GAAP,CAAWD,GAAX,EAAgBpB,IAAI,CAACoB,GAAD,CAApB;AACD,GAHH;AAID,CALM","sourcesContent":["import axios from 'axios'\nimport config from 'next/config'\nimport Cookie from 'js-cookie'\nimport {\n  LoginCredentials,\n  RegistrationData,\n  LoginResponse\n} from '../types/auth.types'\n\nconst { API_URL } = config().publicRuntimeConfig\n\nexport const login = (data: LoginCredentials): Promise<LoginResponse> => new Promise((resolve, reject) => {\n  axios.post(`${API_URL}/users/login`, data)\n    .then(res => resolve(res.data))\n    .catch(err => reject(err.response))\n})\n\nexport const register = (data: RegistrationData) => new Promise((resolve, reject) => {\n  axios.post(`${API_URL}/users`, data)\n    .then(res => resolve(res.data))\n    .catch(err => reject(err.response))\n})\n\nexport const logout = () => new Promise((resolve, reject) => {\n  axios.post(`${API_URL}/users/logout`, {}, {\n    headers: { Authorization: Cookie.get('id') }\n  })\n    .then(res => resolve(res.data))\n    .catch(err => reject(err))\n})\n\nexport const deleteCookie = () => {\n  Cookie.remove('id')\n  Cookie.remove('ttl')\n  Cookie.remove('userId')\n  Cookie.remove('created')\n}\n\nexport const saveLoginData = (data: LoginResponse) => {\n  Object.keys(data)\n    .forEach(key => {\n      Cookie.set(key, data[key])\n    })\n}\n"]},"metadata":{},"sourceType":"module"}