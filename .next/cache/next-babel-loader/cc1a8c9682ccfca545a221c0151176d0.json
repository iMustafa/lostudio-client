{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport axios from \"axios\";\nimport config from \"next/config\";\nimport Cookie from \"js-cookie\";\nvar API_URL = config().publicRuntimeConfig.API_URL;\n\nvar DashboardActions = /*#__PURE__*/function () {\n  function DashboardActions() {\n    _classCallCheck(this, DashboardActions);\n  }\n\n  _createClass(DashboardActions, null, [{\n    key: \"createDashboard\",\n    value: function createDashboard(_ref) {\n      var Authorization, dashboard;\n      return _regeneratorRuntime.async(function createDashboard$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Authorization = _ref.Authorization, dashboard = _ref.dashboard;\n              return _context.abrupt(\"return\", axios.post(\"\".concat(API_URL, \"/Dashboards\"), dashboard, {\n                headers: {\n                  Authorization: Authorization || Cookie.get(\"id\")\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getDashboards\",\n    value: function getDashboards(_ref2) {\n      var Authorization, query;\n      return _regeneratorRuntime.async(function getDashboards$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              Authorization = _ref2.Authorization, query = _ref2.query;\n              return _context2.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/Dashboards\"), {\n                headers: {\n                  Authorization: Authorization || Cookie.get(\"id\")\n                },\n                params: {\n                  filter: {\n                    where: {\n                      isSub: false\n                    }\n                  }\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err;\n              }));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getWebpages\",\n    value: function getWebpages(_ref3) {\n      var Authorization;\n      return _regeneratorRuntime.async(function getWebpages$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              Authorization = _ref3.Authorization;\n              return _context3.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/Dashboards\"), {\n                headers: {\n                  Authorization: Authorization || Cookie.get(\"id\")\n                },\n                params: {\n                  filter: {\n                    where: {\n                      type: \"webpage\"\n                    }\n                  }\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err;\n              }));\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"linkSubDashboard\",\n    value: function linkSubDashboard(_ref4) {\n      var id, subDashboardId;\n      return _regeneratorRuntime.async(function linkSubDashboard$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              id = _ref4.id, subDashboardId = _ref4.subDashboardId;\n              return _context4.abrupt(\"return\", axios.post(\"\".concat(API_URL, \"/Dashboards/\").concat(id, \"/subDashboards\"), {\n                dashboardId: id,\n                subDashboardId: subDashboardId\n              }, {\n                headers: {\n                  Authorization: Cookie.get(\"id\")\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err;\n              }));\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"unLinkSubDashboard\",\n    value: function unLinkSubDashboard(_ref5) {\n      var id, subDashboardId;\n      return _regeneratorRuntime.async(function unLinkSubDashboard$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              id = _ref5.id, subDashboardId = _ref5.subDashboardId;\n              return _context5.abrupt(\"return\", axios[\"delete\"](\"\".concat(API_URL, \"/Dashboards/\").concat(id, \"/subDashboards/\").concat(subDashboardId), {\n                headers: {\n                  Authorization: Cookie.get(\"id\")\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err;\n              }));\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getSubDashboards\",\n    value: function getSubDashboards(_ref6) {\n      var Authorization, id;\n      return _regeneratorRuntime.async(function getSubDashboards$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              Authorization = _ref6.Authorization, id = _ref6.id;\n              return _context6.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/Dashboards/\").concat(id, \"/subDashboards\"), {\n                headers: {\n                  Authorization: Authorization || Cookie.get(\"id\")\n                },\n                params: {\n                  filter: {\n                    include: \"subDashboard\"\n                  }\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err;\n              }));\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getDashboardById\",\n    value: function getDashboardById(id) {\n      return _regeneratorRuntime.async(function getDashboardById$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/Dashboards/\").concat(id), {\n                headers: {\n                  Authorization: Cookie.get(\"id\")\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"updateDashboard\",\n    value: function updateDashboard(id, data) {\n      return _regeneratorRuntime.async(function updateDashboard$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.abrupt(\"return\", axios.patch(\"\".concat(API_URL, \"/Dashboards/\").concat(id), data).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"deleteDashboard\",\n    value: function deleteDashboard(data) {\n      return _regeneratorRuntime.async(function deleteDashboard$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              return _context9.abrupt(\"return\", axios.post(\"\", {}).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getWidgetSettings\",\n    value: function getWidgetSettings(_ref7) {\n      var Authorization, id;\n      return _regeneratorRuntime.async(function getWidgetSettings$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              Authorization = _ref7.Authorization, id = _ref7.id;\n              return _context10.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/Dashboards/\").concat(id, \"/widgetSettings\"), {\n                headers: {\n                  Authorization: Authorization || Cookie.get(\"id\")\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 2:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getCollaborators\",\n    value: function getCollaborators(_ref8) {\n      var Authorization, id;\n      return _regeneratorRuntime.async(function getCollaborators$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              Authorization = _ref8.Authorization, id = _ref8.id;\n              return _context11.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/Dashboards/\").concat(id, \"/collaborators\"), {\n                headers: {\n                  Authorization: Authorization || Cookie.get(\"id\")\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 2:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getCollaboratorations\",\n    value: function getCollaboratorations(_ref9) {\n      var Authorization;\n      return _regeneratorRuntime.async(function getCollaboratorations$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              Authorization = _ref9.Authorization;\n              return _context12.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/Dashboards/collaborations\"), {\n                headers: {\n                  Authorization: Authorization || Cookie.get(\"id\")\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 2:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"addCollaborator\",\n    value: function addCollaborator(_ref10) {\n      var Authorization, email, id, editor, viewer;\n      return _regeneratorRuntime.async(function addCollaborator$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              Authorization = _ref10.Authorization, email = _ref10.email, id = _ref10.id, editor = _ref10.editor, viewer = _ref10.viewer;\n              return _context13.abrupt(\"return\", axios.post(\"\".concat(API_URL, \"/Dashboards/\").concat(id, \"/dashboardRoleMappings\"), {\n                email: email,\n                editor: editor,\n                viewer: viewer\n              }, {\n                headers: {\n                  Authorization: Authorization || Cookie.get(\"id\")\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 2:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"addWidgetToDashboard\",\n    value: function addWidgetToDashboard(id, fk) {\n      return _regeneratorRuntime.async(function addWidgetToDashboard$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              return _context14.abrupt(\"return\", axios.put(\"\".concat(API_URL, \"/Dashboards/\").concat(id, \"/widgetSettings/rel/\").concat(fk), {\n                dashboardId: id,\n                widgetSettingsId: fk\n              }, {\n                headers: {\n                  Authorization: Cookie.get(\"id\")\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"createWidgetInDashboard\",\n    value: function createWidgetInDashboard(id, widgetData) {\n      return _regeneratorRuntime.async(function createWidgetInDashboard$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              return _context15.abrupt(\"return\", axios.post(\"\".concat(API_URL, \"/Dashboards/\").concat(id, \"/widgetSettings\"), widgetData, {\n                headers: {\n                  Authorization: Cookie.get(\"id\")\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"removeWidgetFromDashboard\",\n    value: function removeWidgetFromDashboard(data) {\n      return _regeneratorRuntime.async(function removeWidgetFromDashboard$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              return _context16.abrupt(\"return\", axios.post(\"\", {}).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return DashboardActions;\n}();\n\nexport { DashboardActions as default };","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/actions/dashboard.actions.ts"],"names":["axios","config","Cookie","API_URL","publicRuntimeConfig","DashboardActions","Authorization","dashboard","post","headers","get","then","res","data","err","response","query","params","filter","where","isSub","type","id","subDashboardId","dashboardId","include","patch","email","editor","viewer","fk","put","widgetSettingsId","widgetData"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport config from \"next/config\";\nimport Cookie from \"js-cookie\";\nimport User from \"../types/users.types\";\nimport Dashboard from \"../types/dashboard.types\";\nimport Datasource from \"../types/datasource.types\";\nimport Widget from \"../types/widget.types\";\nimport WidgetSettings from \"../types/widgetSettings.type\";\n\nconst { API_URL } = config().publicRuntimeConfig;\n\nexport default class DashboardActions {\n  public static async createDashboard({\n    Authorization,\n    dashboard,\n  }: {\n    dashboard: Dashboard;\n    Authorization?: string;\n  }): Promise<Dashboard> {\n    return axios\n      .post(`${API_URL}/Dashboards`, dashboard, {\n        headers: { Authorization: Authorization || Cookie.get(\"id\") },\n      })\n      .then((res) => res.data)\n      .catch((err) => err.response);\n  }\n\n  public static async getDashboards({\n    Authorization,\n    query,\n  }: {\n    Authorization?: string;\n    query?: any;\n  }): Promise<Array<Dashboard>> {\n    return axios\n      .get(`${API_URL}/Dashboards`, {\n        headers: { Authorization: Authorization || Cookie.get(\"id\") },\n        params: { filter: { where: { isSub: false } } },\n      })\n      .then((res) => res.data)\n      .catch((err) => err);\n  }\n\n  public static async getWebpages({\n    Authorization,\n  }: {\n    Authorization?: string;\n  }): Promise<Array<Dashboard>> {\n    return axios\n      .get(`${API_URL}/Dashboards`, {\n        headers: { Authorization: Authorization || Cookie.get(\"id\") },\n        params: { filter: { where: { type: \"webpage\" } } },\n      })\n      .then((res) => res.data)\n      .catch((err) => err);\n  }\n\n  public static async linkSubDashboard({\n    id,\n    subDashboardId,\n  }: {\n    id: string;\n    subDashboardId: string;\n  }): Promise<any> {\n    return axios\n      .post(\n        `${API_URL}/Dashboards/${id}/subDashboards`,\n        { dashboardId: id, subDashboardId },\n        { headers: { Authorization: Cookie.get(\"id\") } }\n      )\n      .then((res) => res.data)\n      .catch((err) => err);\n  }\n\n  public static async unLinkSubDashboard({\n    id,\n    subDashboardId,\n  }: {\n    id: string;\n    subDashboardId: string;\n  }): Promise<any> {\n    return axios\n      .delete(`${API_URL}/Dashboards/${id}/subDashboards/${subDashboardId}`, {\n        headers: { Authorization: Cookie.get(\"id\") },\n      })\n      .then((res) => res.data)\n      .catch((err) => err);\n  }\n\n  public static async getSubDashboards({\n    Authorization,\n    id,\n  }: {\n    Authorization?: string;\n    id: string;\n  }): Promise<any> {\n    return axios\n      .get(`${API_URL}/Dashboards/${id}/subDashboards`, {\n        headers: { Authorization: Authorization || Cookie.get(\"id\") },\n        params: { filter: { include: \"subDashboard\" } },\n      })\n      .then((res) => res.data)\n      .catch((err) => err);\n  }\n\n  public static async getDashboardById(id: string): Promise<Dashboard> {\n    return axios\n      .get(`${API_URL}/Dashboards/${id}`, {\n        headers: { Authorization: Cookie.get(\"id\") },\n      })\n      .then((res) => res.data)\n      .catch((err) => err.response);\n  }\n\n  public static async updateDashboard(id: string, data): Promise<Dashboard> {\n    return axios\n      .patch(`${API_URL}/Dashboards/${id}`, data)\n      .then((res) => res.data)\n      .catch((err) => err.response);\n  }\n\n  public static async deleteDashboard(data: Datasource): Promise<Dashboard> {\n    return axios\n      .post(\"\", {})\n      .then((res) => res.data)\n      .catch((err) => err.response);\n  }\n\n  public static async getWidgetSettings({\n    Authorization,\n    id,\n  }: {\n    Authorization?: string;\n    id: string;\n  }): Promise<Array<WidgetSettings>> {\n    return axios\n      .get(`${API_URL}/Dashboards/${id}/widgetSettings`, {\n        headers: { Authorization: Authorization || Cookie.get(\"id\") },\n      })\n      .then((res) => res.data)\n      .catch((err) => err.response);\n  }\n\n  public static async getCollaborators({\n    Authorization,\n    id,\n  }: {\n    Authorization?: string;\n    id: string;\n  }): Promise<Array<User>> {\n    return axios\n      .get(`${API_URL}/Dashboards/${id}/collaborators`, {\n        headers: { Authorization: Authorization || Cookie.get(\"id\") },\n      })\n      .then((res) => res.data)\n      .catch((err) => err.response);\n  }\n\n  public static async getCollaboratorations({\n    Authorization,\n  }: {\n    Authorization?: string;\n  }): Promise<Array<Dashboard>> {\n    return axios\n      .get(`${API_URL}/Dashboards/collaborations`, {\n        headers: { Authorization: Authorization || Cookie.get(\"id\") },\n      })\n      .then((res) => res.data)\n      .catch((err) => err.response);\n  }\n\n  public static async addCollaborator({\n    Authorization,\n    email,\n    id,\n    editor,\n    viewer,\n  }: {\n    Authorization?: string;\n    email: string;\n    id: string;\n    editor: boolean;\n    viewer: boolean;\n  }): Promise<any> {\n    return axios\n      .post(\n        `${API_URL}/Dashboards/${id}/dashboardRoleMappings`,\n        { email, editor, viewer },\n        { headers: { Authorization: Authorization || Cookie.get(\"id\") } }\n      )\n      .then((res) => res.data)\n      .catch((err) => err.response);\n  }\n\n  public static async addWidgetToDashboard(\n    id: string,\n    fk: string\n  ): Promise<Dashboard> {\n    return axios\n      .put(\n        `${API_URL}/Dashboards/${id}/widgetSettings/rel/${fk}`,\n        { dashboardId: id, widgetSettingsId: fk },\n        { headers: { Authorization: Cookie.get(\"id\") } }\n      )\n      .then((res) => res.data)\n      .catch((err) => err.response);\n  }\n\n  public static async createWidgetInDashboard(\n    id: string,\n    widgetData: any\n  ): Promise<Dashboard> {\n    return axios\n      .post(`${API_URL}/Dashboards/${id}/widgetSettings`, widgetData, {\n        headers: { Authorization: Cookie.get(\"id\") },\n      })\n      .then((res) => res.data)\n      .catch((err) => err.response);\n  }\n\n  public static async removeWidgetFromDashboard(\n    data: Datasource\n  ): Promise<Dashboard> {\n    return axios\n      .post(\"\", {})\n      .then((res) => res.data)\n      .catch((err) => err.response);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}