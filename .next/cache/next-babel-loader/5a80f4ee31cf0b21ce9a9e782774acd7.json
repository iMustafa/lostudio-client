{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Cookies from 'next-cookies';\nimport DashboardActions from '../../actions/dashboard.actions';\nimport ListDashboards from '../../components/dashboards/list-dashboards';\nimport Grid from '@material-ui/core/Grid';\n\nvar Dashboards = function Dashboards(_ref) {\n  var Collaborations = _ref.Collaborations,\n      Dashboards = _ref.Dashboards;\n  var dashboards = Object.values(Dashboards);\n  var collaborations = Object.values(Collaborations);\n\n  var _useState = useState(0),\n      refresh = _useState[0],\n      setRefresh = _useState[1];\n\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(\"div\", {\n    className: \"container\",\n    style: {\n      margin: \"25px auto 25px auto\"\n    }\n  }, __jsx(ListDashboards, {\n    dashboards: dashboards,\n    title: \"My Dashboards\",\n    type: \"personal\"\n  }), __jsx(ListDashboards, {\n    dashboards: collaborations,\n    title: \"My Collaborations\",\n    type: \"collaborations\"\n  }))));\n};\n\nDashboards.getInitialProps = function _callee(req) {\n  var Authorization, _Dashboards, Collaborations;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          Authorization = Cookies(req).id;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(DashboardActions.getDashboards({\n            Authorization: Authorization\n          }));\n\n        case 4:\n          _Dashboards = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(DashboardActions.getCollaboratorations({\n            Authorization: Authorization\n          }));\n\n        case 7:\n          Collaborations = _context.sent;\n          return _context.abrupt(\"return\", {\n            Collaborations: Collaborations,\n            Dashboards: _Dashboards\n          });\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", {\n            Collaborations: [],\n            Dashboards: []\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n};\n\nexport default Dashboards;","map":null,"metadata":{},"sourceType":"module"}