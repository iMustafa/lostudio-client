{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/dashboards/dashboard-item.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport router from \"next/router\";\nconst useStyles = makeStyles(theme => ({\n  media: {\n    height: 140\n  },\n  card: {\n    maxHeight: 280\n  }\n}));\n\nconst DashbordItem = ({\n  title = \"\",\n  description,\n  id,\n  permissions,\n  type\n}) => {\n  const classes = useStyles();\n\n  const navigateToBoard = () => {\n    if (type == \"webpage\") router.push(`/webpages/${id}/edit`);else router.push(`/dashboards/${id}/edit`);\n  };\n\n  const renderButtons = () => {\n    return !permissions ? __jsx(CardActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, __jsx(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: () => navigateToBoard(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Edit\"), __jsx(Button, {\n      size: \"small\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"View\")) : permissions.editor ? __jsx(CardActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, __jsx(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: () => navigateToBoard(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Edit\"), __jsx(Button, {\n      size: \"small\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"View\")) : __jsx(CardActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, __jsx(Button, {\n      size: \"small\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"View\"));\n  };\n\n  return __jsx(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(CardMedia, {\n    className: classes.media,\n    image: \"https://via.placeholder.com/350x150\",\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, title), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, description)), renderButtons());\n};\n\nexport default DashbordItem;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/dashboards/dashboard-item.jsx"],"names":["makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","router","useStyles","theme","media","height","card","maxHeight","DashbordItem","title","description","id","permissions","type","classes","navigateToBoard","push","renderButtons","editor"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport router from \"next/router\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: 140,\n  },\n  card: {\n    maxHeight: 280\n  }\n}));\n\nconst DashbordItem = ({ title = \"\", description, id, permissions, type }) => {\n  const classes = useStyles();\n\n  const navigateToBoard = () => {\n    if (type == \"webpage\") router.push(`/webpages/${id}/edit`);\n    else router.push(`/dashboards/${id}/edit`);\n  };\n\n  const renderButtons = () => {\n    return !permissions ? (\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={() => navigateToBoard()}>\n          Edit\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          View\n        </Button>\n      </CardActions>\n    ) : permissions.editor ? (\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={() => navigateToBoard()}>\n          Edit\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          View\n        </Button>\n      </CardActions>\n    ) : (\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          View\n        </Button>\n      </CardActions>\n    );\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        image=\"https://via.placeholder.com/350x150\"\n        title={title}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {description}\n        </Typography>\n      </CardContent>\n      {renderButtons()}\n    </Card>\n  );\n};\n\nexport default DashbordItem;\n"]},"metadata":{},"sourceType":"module"}