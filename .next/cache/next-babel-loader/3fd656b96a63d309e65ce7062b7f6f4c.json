{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\pages\\\\datasources\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Cookies from 'next-cookies';\nimport DatasourceActions from '../../actions/datasource.actions';\nvar useStyles = makeStyles(function (theme) {\n  return {};\n});\n\nvar Datasources = function Datasources(_ref) {\n  var Datasources = _ref.Datasources;\n  var classes = useStyles();\n  console.log(Datasources);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Datasources works\"));\n};\n\nDatasources.getInitialProps = function _callee(req) {\n  var Authorization, _Datasources;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          Authorization = Cookies(req).id;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(DatasourceActions.getDatasources({\n            Authorization: Authorization\n          }));\n\n        case 4:\n          _Datasources = _context.sent;\n          return _context.abrupt(\"return\", {\n            Datasources: _Datasources\n          });\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          return _context.abrupt(\"return\", []);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexport default Datasources;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/pages/datasources/index.tsx"],"names":["React","makeStyles","Cookies","DatasourceActions","useStyles","theme","Datasources","classes","console","log","getInitialProps","req","Authorization","id","getDatasources"],"mappings":";;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,OAAP,MAAoB,cAApB;AAIA,OAAOC,iBAAP,MAA8B,kCAA9B;AAGA,IAAMC,SAAS,GAAGH,UAAU,CAAC,UAAAI,KAAK;AAAA,SAAK,EAAL;AAAA,CAAN,CAA5B;;AAIA,IAAMC,WAAwC,GAAG,2BAAyD;AAAA,MAAtDA,WAAsD,QAAtDA,WAAsD;AACxG,MAAMC,OAAO,GAAGH,SAAS,EAAzB;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF;AAKD,CATD;;AAWAA,WAAW,CAACI,eAAZ,GAA8B,iBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEpBC,UAAAA,aAFoB,GAEJV,OAAO,CAACS,GAAD,CAAP,CAAaE,EAFT;AAAA;AAAA,2CAGAV,iBAAiB,CAACW,cAAlB,CAAiC;AAAEF,YAAAA,aAAa,EAAbA;AAAF,WAAjC,CAHA;;AAAA;AAGpBN,UAAAA,YAHoB;AAAA,2CAInB;AAAEA,YAAAA,WAAW,EAAXA;AAAF,WAJmB;;AAAA;AAAA;AAAA;AAM1BE,UAAAA,OAAO,CAACC,GAAR;AAN0B,2CAOnB,EAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AAWA,eAAeH,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Cookies from 'next-cookies'\r\nimport { NextPage } from 'next';\r\nimport Router from 'next/router'\r\nimport Swal from 'sweetalert2'\r\nimport DatasourceActions from '../../actions/datasource.actions'\r\nimport Datasource from '../../types/datasource.types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}));\r\n\r\nconst Datasources: NextPage<Array<Datasource>> = ({ Datasources }: { Datasources: Array<Datasource> }) => {\r\n  const classes = useStyles()\r\n\r\n  console.log(Datasources)\r\n  return (\r\n    <div>\r\n      <h1>Datasources works</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nDatasources.getInitialProps = async (req): Promise<Array<Datasource>> => {\r\n  try {\r\n    const Authorization = Cookies(req).id\r\n    const Datasources = await DatasourceActions.getDatasources({ Authorization })\r\n    return { Datasources }\r\n  } catch (e) {\r\n    console.log(e)\r\n    return []\r\n  }\r\n}\r\n\r\nexport default Datasources"]},"metadata":{},"sourceType":"module"}