{"ast":null,"code":"import axios from 'axios';\nimport config from 'next/config';\nimport Cookie from 'js-cookie';\nconst {\n  API_URL\n} = config().publicRuntimeConfig;\nexport default class DashboardActions {\n  // TODO\n  static async createDashboard(dashborad) {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  } // TODO\n\n\n  static async getDashboards({\n    Authorization,\n    query\n  }) {\n    return axios.get(`${API_URL}/Dashboards`, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err);\n  } // TODO\n\n\n  static async getDashboardById(data) {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  } // TODO\n\n\n  static async updateDashboard(data) {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  } // TODO\n\n\n  static async deleteDashboard(data) {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getWidgetSettings(id) {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  }\n\n  static async addWidgetToDashboard(data) {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  }\n\n  static async removeWidgetFromDashboard(data) {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  }\n\n}","map":{"version":3,"sources":["F:/Projects/LoStudio/client/actions/dashboard.actions.ts"],"names":["axios","config","Cookie","API_URL","publicRuntimeConfig","DashboardActions","createDashboard","dashborad","post","then","res","data","catch","err","response","getDashboards","Authorization","query","get","headers","getDashboardById","updateDashboard","deleteDashboard","getWidgetSettings","id","addWidgetToDashboard","removeWidgetFromDashboard"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAOA,MAAM;AAAEC,EAAAA;AAAF,IAAcF,MAAM,GAAGG,mBAA7B;AAEA,eAAe,MAAMC,gBAAN,CAAuB;AAEpC;AACA,eAAoBC,eAApB,CAAoCC,SAApC,EAA8E;AAC5E,WAAOP,KAAK,CACTQ,IADI,CACC,EADD,EACK,EADL,EAEJC,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,IAFZ,EAGJC,KAHI,CAGEC,GAAG,IAAIA,GAAG,CAACC,QAHb,CAAP;AAID,GARmC,CAUpC;;;AACA,eAAoBC,aAApB,CAAkC;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,GAAlC,EAAgI;AAC9H,WAAOjB,KAAK,CACTkB,GADI,CACC,GAAEf,OAAQ,aADX,EACyB;AAAEgB,MAAAA,OAAO,EAAE;AAAEH,QAAAA,aAAa,EAAEA,aAAa,IAAId,MAAM,CAACgB,GAAP,CAAW,IAAX;AAAlC;AAAX,KADzB,EAEJT,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,IAFZ,EAGJC,KAHI,CAGEC,GAAG,IAAIA,GAHT,CAAP;AAID,GAhBmC,CAkBpC;;;AACA,eAAoBO,gBAApB,CAAqCT,IAArC,EAA2E;AACzE,WAAOX,KAAK,CACTQ,IADI,CACC,EADD,EACK,EADL,EAEJC,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,IAFZ,EAGJC,KAHI,CAGEC,GAAG,IAAIA,GAAG,CAACC,QAHb,CAAP;AAID,GAxBmC,CA0BpC;;;AACA,eAAoBO,eAApB,CAAoCV,IAApC,EAA0E;AACxE,WAAOX,KAAK,CACTQ,IADI,CACC,EADD,EACK,EADL,EAEJC,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,IAFZ,EAGJC,KAHI,CAGEC,GAAG,IAAIA,GAAG,CAACC,QAHb,CAAP;AAID,GAhCmC,CAkCpC;;;AACA,eAAoBQ,eAApB,CAAoCX,IAApC,EAA0E;AACxE,WAAOX,KAAK,CACTQ,IADI,CACC,EADD,EACK,EADL,EAEJC,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,IAFZ,EAGJC,KAHI,CAGEC,GAAG,IAAIA,GAAG,CAACC,QAHb,CAAP;AAID;;AAED,eAAoBS,iBAApB,CAAsCC,EAAtC,EAAkF;AAChF,WAAOxB,KAAK,CACTQ,IADI,CACC,EADD,EACK,EADL,EAEJC,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,IAFZ,EAGJC,KAHI,CAGEC,GAAG,IAAIA,GAAG,CAACC,QAHb,CAAP;AAID;;AAED,eAAoBW,oBAApB,CAAyCd,IAAzC,EAA+E;AAC7E,WAAOX,KAAK,CACTQ,IADI,CACC,EADD,EACK,EADL,EAEJC,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,IAFZ,EAGJC,KAHI,CAGEC,GAAG,IAAIA,GAAG,CAACC,QAHb,CAAP;AAID;;AAED,eAAoBY,yBAApB,CAA8Cf,IAA9C,EAAoF;AAClF,WAAOX,KAAK,CACTQ,IADI,CACC,EADD,EACK,EADL,EAEJC,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,IAFZ,EAGJC,KAHI,CAGEC,GAAG,IAAIA,GAAG,CAACC,QAHb,CAAP;AAID;;AA7DmC","sourcesContent":["import axios from 'axios'\r\nimport config from 'next/config'\r\nimport Cookie from 'js-cookie'\r\nimport User from '../types/users.types'\r\nimport Dashboard from '../types/dashboard.types'\r\nimport Datasource from '../types/datasource.types'\r\nimport Widget from '../types/widget.types'\r\nimport WidgetSettings from '../types/widgetSettings.type'\r\n\r\nconst { API_URL } = config().publicRuntimeConfig\r\n\r\nexport default class DashboardActions {\r\n\r\n  // TODO\r\n  public static async createDashboard(dashborad: Dashboard): Promise<Dashboard> {\r\n    return axios\r\n      .post('', {})\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  // TODO\r\n  public static async getDashboards({ Authorization, query }: { Authorization?: string, query?: any }): Promise<Array<Dashboard>> {\r\n    return axios\r\n      .get(`${API_URL}/Dashboards`, { headers: { Authorization: Authorization || Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err)\r\n  }\r\n\r\n  // TODO\r\n  public static async getDashboardById(data: Datasource): Promise<Dashboard> {\r\n    return axios\r\n      .post('', {})\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  // TODO\r\n  public static async updateDashboard(data: Datasource): Promise<Dashboard> {\r\n    return axios\r\n      .post('', {})\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  // TODO\r\n  public static async deleteDashboard(data: Datasource): Promise<Dashboard> {\r\n    return axios\r\n      .post('', {})\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async getWidgetSettings(id: string): Promise<Array<WidgetSettings>> {\r\n    return axios\r\n      .post('', {})\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async addWidgetToDashboard(data: Datasource): Promise<Dashboard> {\r\n    return axios\r\n      .post('', {})\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async removeWidgetFromDashboard(data: Datasource): Promise<Dashboard> {\r\n    return axios\r\n      .post('', {})\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}