{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\pages\\\\dashboards\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Cookies from 'next-cookies';\nimport DashboardActions from '../../actions/dashboard.actions';\nimport ListDashboards from '../../components/dashboards/list-dashboards';\n\nconst Dashboards = ({\n  Collaborations,\n  Dashboards\n}) => {\n  const dashboards = Object.values(Dashboards);\n  const collaborations = Object.values(Collaborations);\n  return __jsx(\"div\", {\n    className: \"container\",\n    style: {\n      marginTop: \"25px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(ListDashboards, {\n    dashboards: dashboards,\n    title: \"My Dashboards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), __jsx(ListDashboards, {\n    dashboards: collaborations,\n    title: \"My Collaborations\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nDashboards.getInitialProps = async req => {\n  try {\n    const Authorization = Cookies(req).id;\n    const Dashboards = await DashboardActions.getDashboards({\n      Authorization\n    });\n    const Collaborations = await DashboardActions.getCollaboratorations({\n      Authorization\n    });\n    return {\n      Collaborations,\n      Dashboards\n    };\n  } catch (e) {\n    return {\n      Collaborations: [],\n      Dashboards: []\n    };\n  }\n};\n\nexport default Dashboards;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/pages/dashboards/index.tsx"],"names":["Cookies","DashboardActions","ListDashboards","Dashboards","Collaborations","dashboards","Object","values","collaborations","marginTop","getInitialProps","req","Authorization","id","getDashboards","getCollaboratorations","e"],"mappings":";;;AAEA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAEA,OAAOC,cAAP,MAA2B,6CAA3B;;AAEA,MAAMC,UAAoD,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBD,EAAAA;AAAlB,CAAD,KAAoC;AAC/F,QAAME,UAA4B,GAAGC,MAAM,CAACC,MAAP,CAAcJ,UAAd,CAArC;AACA,QAAMK,cAAgC,GAAGF,MAAM,CAACC,MAAP,CAAcH,cAAd,CAAzC;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAEK,MAAAA,SAAS,EAAE;AAAb,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,UAAU,EAAEJ,UAA5B;AAAwC,IAAA,KAAK,EAAC,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,cAAD;AAAgB,IAAA,UAAU,EAAEG,cAA5B;AAA4C,IAAA,KAAK,EAAC,mBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAVD;;AAYAL,UAAU,CAACO,eAAX,GAA6B,MAAOC,GAAP,IAA4F;AACvH,MAAI;AACF,UAAMC,aAAa,GAAGZ,OAAO,CAACW,GAAD,CAAP,CAAaE,EAAnC;AACA,UAAMV,UAAU,GAAG,MAAMF,gBAAgB,CAACa,aAAjB,CAA+B;AAAEF,MAAAA;AAAF,KAA/B,CAAzB;AACA,UAAMR,cAAc,GAAG,MAAMH,gBAAgB,CAACc,qBAAjB,CAAuC;AAAEH,MAAAA;AAAF,KAAvC,CAA7B;AACA,WAAO;AAAER,MAAAA,cAAF;AAAkBD,MAAAA;AAAlB,KAAP;AACD,GALD,CAKE,OAAOa,CAAP,EAAU;AACV,WAAO;AAAEZ,MAAAA,cAAc,EAAE,EAAlB;AAAsBD,MAAAA,UAAU,EAAE;AAAlC,KAAP;AACD;AACF,CATD;;AAWA,eAAeA,UAAf","sourcesContent":["import { NextPage } from 'next'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Cookies from 'next-cookies'\r\nimport DashboardActions from '../../actions/dashboard.actions'\r\nimport Dashboard from '../../types/dashboard.types'\r\nimport ListDashboards from '../../components/dashboards/list-dashboards'\r\n\r\nconst Dashboards: NextPage<{ Collaborations, Dashboards }> = ({ Collaborations, Dashboards }) => {\r\n  const dashboards: Array<Dashboard> = Object.values(Dashboards)\r\n  const collaborations: Array<Dashboard> = Object.values(Collaborations)\r\n\r\n  return (\r\n    <div className=\"container\" style={{ marginTop: \"25px\" }}>\r\n      <ListDashboards dashboards={dashboards} title=\"My Dashboards\"></ListDashboards>\r\n      <ListDashboards dashboards={collaborations} title=\"My Collaborations\"></ListDashboards>\r\n    </div>\r\n  )\r\n}\r\n\r\nDashboards.getInitialProps = async (req): Promise<{ Collaborations: Array<Dashboard>, Dashboards: Array<Dashboard> }> => {\r\n  try {\r\n    const Authorization = Cookies(req).id\r\n    const Dashboards = await DashboardActions.getDashboards({ Authorization })\r\n    const Collaborations = await DashboardActions.getCollaboratorations({ Authorization })\r\n    return { Collaborations, Dashboards }\r\n  } catch (e) {\r\n    return { Collaborations: [], Dashboards: [] }\r\n  }\r\n}\r\n\r\nexport default Dashboards"]},"metadata":{},"sourceType":"module"}