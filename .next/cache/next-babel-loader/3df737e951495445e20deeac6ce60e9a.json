{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-widget-settings-panel.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nimport { ConnectionSettings } from '../helpers';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    list: {\n      width: 500,\n      paddingLeft: \"15px\",\n      paddingRight: \"15px\",\n      paddingTop: \"15px\"\n    },\n    h2: {\n      width: '100%',\n      textAlign: 'center',\n      borderBottom: '1px solid #000',\n      lineHeight: '0.1em',\n      marginTop: \"20px\",\n      marginBottom: \"20px\",\n      fontFamily: 'Roboto',\n      fontSize: '13px',\n      color: \"#3F51B5\"\n    },\n    span: {\n      background: '#fff',\n      padding: '0 10px'\n    },\n    formControl: {\n      marginTop: \"15px\"\n    }\n  };\n});\n\nvar TableWidgetSettingsPanel = function TableWidgetSettingsPanel(_ref) {\n  var widget = _ref.widget,\n      handleSettingsClose = _ref.handleSettingsClose,\n      isAdding = _ref.isAdding,\n      onWidgetAdd = _ref.onWidgetAdd;\n  var classes = useStyles();\n\n  var _useState = useState(!isAdding ? widget.config.connectionMethod : 'database'),\n      connectionMethod = _useState[0],\n      setConnectionMethod = _useState[1];\n\n  var _useState2 = useState(!isAdding ? widget.config.docId : ''),\n      doc = _useState2[0],\n      setDoc = _useState2[1];\n\n  var _useState3 = useState(!isAdding ? widget.title : ''),\n      title = _useState3[0],\n      setTitle = _useState3[1];\n\n  var _useState4 = useState(!isAdding ? widget.dataSourceId : ''),\n      datasource = _useState4[0],\n      setDatasource = _useState4[1];\n\n  var _useState5 = useState(!isAdding ? widget.config.fields : []),\n      fields = _useState5[0],\n      setFields = _useState5[1];\n\n  var _useState6 = useState(!isAdding ? widget.config.primaryKey : null),\n      primaryKey = _useState6[0],\n      setPrimaryKey = _useState6[1];\n\n  var _useState7 = useState(isAdding ? false : widget.config.isEditable),\n      isEditable = _useState7[0],\n      setIsEditable = _useState7[1];\n\n  var _useState8 = useState(isAdding ? false : widget.config.isDeletable),\n      isDeletable = _useState8[0],\n      setIsDeletable = _useState8[1];\n\n  var _useState9 = useState(isAdding ? false : widget.config.isAddable),\n      isAddable = _useState9[0],\n      setIsAddable = _useState9[1];\n\n  var _useState10 = useState(isAdding ? '' : widget.config.url),\n      url = _useState10[0],\n      setURL = _useState10[1];\n\n  var _useState11 = useState(isAdding ? {} : widget.config.headers || {}),\n      headers = _useState11[0],\n      setHeaders = _useState11[1];\n\n  var _useState12 = useState(isAdding ? '' : widget.config.method),\n      method = _useState12[0],\n      setMethod = _useState12[1];\n\n  var _useState13 = useState(isAdding ? {} : widget.config.body || {}),\n      body = _useState13[0],\n      setBody = _useState13[1];\n\n  var _useState14 = useState(isAdding ? {} : widget.config.query || {}),\n      query = _useState14[0],\n      setQuery = _useState14[1];\n\n  var saveConfigSettings = function saveConfigSettings() {\n    var data, update;\n    return _regeneratorRuntime.async(function saveConfigSettings$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            data = {\n              dataSourceId: datasource,\n              title: title,\n              config: _defineProperty({\n                docId: doc,\n                fields: fields,\n                type: 'simple',\n                func: 'find',\n                query: {},\n                isEditable: isEditable,\n                isDeletable: isDeletable,\n                isAddable: isAddable,\n                primaryKey: primaryKey,\n                connectionMethod: connectionMethod,\n                url: url,\n                headers: headers,\n                method: method,\n                body: body\n              }, \"query\", query),\n              type: 'Table'\n            };\n            console.log(data);\n\n            if (!isAdding) {\n              _context.next = 7;\n              break;\n            }\n\n            onWidgetAdd(data);\n            _context.next = 11;\n            break;\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.updateWidgetSettings(widget.id, data));\n\n          case 9:\n            update = _context.sent;\n            handleSettingsClose(update);\n\n          case 11:\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Widget Properties\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    value: title,\n    onChange: function onChange(e) {\n      setTitle(e.target.value);\n    },\n    id: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Title\"), __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: isEditable,\n      onChange: function onChange(event) {\n        setIsEditable(event.target.checked);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }),\n    label: \"Allow Edit?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: isDeletable,\n      onChange: function onChange(event) {\n        setIsDeletable(event.target.checked);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }),\n    label: \"Allow Delete?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: isAddable,\n      onChange: function onChange(event) {\n        setIsAddable(event.target.checked);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }),\n    label: \"Allow Add?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })), __jsx(ConnectionSettings, {\n    isAdding: isAdding,\n    connectionMethod: connectionMethod,\n    setConnectionMethod: setConnectionMethod,\n    setDoc: setDoc,\n    setDatasource: setDatasource,\n    setFields: setFields,\n    doc: doc,\n    datasource: datasource,\n    fields: fields,\n    primaryKey: primaryKey,\n    setPrimaryKey: setPrimaryKey,\n    url: url,\n    setURL: setURL,\n    headers: headers,\n    setHeaders: setHeaders,\n    method: method,\n    setMethod: setMethod,\n    body: body,\n    setBody: setBody,\n    query: query,\n    setQuery: setQuery,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    fullWidth: true,\n    className: classes.formControl,\n    onClick: saveConfigSettings,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, isAdding ? 'Add' : 'Save'));\n};\n\nexport default TableWidgetSettingsPanel;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-widget-settings-panel.jsx"],"names":["useState","useEffect","makeStyles","Button","InputLabel","FormControl","Input","FormControlLabel","Checkbox","WidgetSettingsActions","ConnectionSettings","useStyles","theme","list","width","paddingLeft","paddingRight","paddingTop","h2","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","formControl","TableWidgetSettingsPanel","widget","handleSettingsClose","isAdding","onWidgetAdd","classes","config","connectionMethod","setConnectionMethod","docId","doc","setDoc","title","setTitle","dataSourceId","datasource","setDatasource","fields","setFields","primaryKey","setPrimaryKey","isEditable","setIsEditable","isDeletable","setIsDeletable","isAddable","setIsAddable","url","setURL","headers","setHeaders","method","setMethod","body","setBody","query","setQuery","saveConfigSettings","data","type","func","console","log","updateWidgetSettings","id","update","e","target","value","event","checked"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\nimport { ConnectionSettings } from '../helpers'\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}))\n\nconst TableWidgetSettingsPanel = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\n  const classes = useStyles()\n  const [connectionMethod, setConnectionMethod] = useState(!isAdding ? widget.config.connectionMethod : 'database')\n  const [doc, setDoc] = useState(!isAdding ? widget.config.docId : '')\n  const [title, setTitle] = useState(!isAdding ? widget.title : '')\n  const [datasource, setDatasource] = useState(!isAdding ? widget.dataSourceId : '')\n  const [fields, setFields] = useState(!isAdding ? widget.config.fields : [])\n  const [primaryKey, setPrimaryKey] = useState(!isAdding ? widget.config.primaryKey : null)\n  const [isEditable, setIsEditable] = useState(isAdding ? false : widget.config.isEditable)\n  const [isDeletable, setIsDeletable] = useState(isAdding ? false : widget.config.isDeletable)\n  const [isAddable, setIsAddable] = useState(isAdding ? false : widget.config.isAddable)\n\n  const [url, setURL] = useState(isAdding ? '' : widget.config.url)\n  const [headers, setHeaders] = useState(isAdding ? {} : widget.config.headers || {})\n  const [method, setMethod] = useState(isAdding ? '' : widget.config.method)\n  const [body, setBody] = useState(isAdding ? {} : widget.config.body || {})\n  const [query, setQuery] = useState(isAdding ? {} : widget.config.query || {})\n\n  const saveConfigSettings = async () => {\n    try {\n      const data = {\n        dataSourceId: datasource,\n        title,\n        config: {\n          docId: doc,\n          fields,\n          type: 'simple',\n          func: 'find',\n          query: {},\n          isEditable,\n          isDeletable,\n          isAddable,\n          primaryKey,\n          connectionMethod,\n          url,\n          headers,\n          method,\n          body,\n          query\n        },\n        type: 'Table'\n      }\n      console.log(data)\n      if (isAdding) {\n        onWidgetAdd(data)\n      } else {\n        const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data)\n        handleSettingsClose(update)\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  return (\n    <div>\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Widget Properties</span>\n      </h2>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel value={title} onChange={e => { setTitle(e.target.value) }} id='title'>Title</InputLabel>\n        <Input />\n      </FormControl>\n      <div style={{ marginTop: 20 }}>\n        <FormControlLabel\n          control={\n            <Checkbox checked={isEditable} onChange={event => { setIsEditable(event.target.checked) }} />\n          }\n          label=\"Allow Edit?\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox checked={isDeletable} onChange={event => { setIsDeletable(event.target.checked) }} />\n          }\n          label=\"Allow Delete?\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox checked={isAddable} onChange={event => { setIsAddable(event.target.checked) }} />\n          }\n          label=\"Allow Add?\"\n        />\n      </div>\n\n      <ConnectionSettings\n        isAdding={isAdding}\n        connectionMethod={connectionMethod}\n        setConnectionMethod={setConnectionMethod}\n        setDoc={setDoc}\n        setDatasource={setDatasource}\n        setFields={setFields}\n        doc={doc}\n        datasource={datasource}\n        fields={fields}\n        primaryKey={primaryKey}\n        setPrimaryKey={setPrimaryKey}\n        url={url} setURL={setURL}\n        headers={headers} setHeaders={setHeaders}\n        method={method} setMethod={setMethod}\n        body={body} setBody={setBody}\n        query={query} setQuery={setQuery}\n      />\n\n      <Button fullWidth className={classes.formControl} onClick={saveConfigSettings}>{isAdding ? 'Add' : 'Save'}</Button>\n    </div>\n  )\n}\n\nexport default TableWidgetSettingsPanel"]},"metadata":{},"sourceType":"module"}