{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\widgets\\\\table\\\\table-widget-settings.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DataSourceActions from '../../../actions/datasource.actions';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nimport Swal from 'sweetalert2';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    list: {\n      width: 500,\n      paddingLeft: \"15px\",\n      paddingRight: \"15px\",\n      paddingTop: \"15px\"\n    },\n    h2: {\n      width: '100%',\n      textAlign: 'center',\n      borderBottom: '1px solid #000',\n      lineHeight: '0.1em',\n      marginTop: \"20px\",\n      marginBottom: \"20px\",\n      fontFamily: 'Roboto',\n      fontSize: '13px',\n      color: \"#3F51B5\"\n    },\n    span: {\n      background: '#fff',\n      padding: '0 10px'\n    },\n    formControl: {\n      marginTop: \"15px\"\n    }\n  };\n});\n\nvar TableWidgetSettings = function TableWidgetSettings(_ref) {\n  var widget = _ref.widget,\n      handleSettingsClose = _ref.handleSettingsClose,\n      isAdding = _ref.isAdding;\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      datasources = _useState[0],\n      setDatasources = _useState[1];\n\n  var _useState2 = useState(widget.dataSourceId),\n      datasource = _useState2[0],\n      setDatasource = _useState2[1];\n\n  var _useState3 = useState([]),\n      docList = _useState3[0],\n      setDocList = _useState3[1];\n\n  var _useState4 = useState(widget.config && widget.config.docId ? widget.config.docId : null),\n      doc = _useState4[0],\n      setDoc = _useState4[1];\n\n  var _useState5 = useState([]),\n      fieldList = _useState5[0],\n      setFieldList = _useState5[1];\n\n  var _useState6 = useState(widget.config && widget.config.fields ? widget.config.fields : []),\n      fields = _useState6[0],\n      setFields = _useState6[1];\n\n  var _useState7 = useState({}),\n      query = _useState7[0],\n      setQuery = _useState7[1];\n\n  var getDatasources = function getDatasources() {\n    var $datasources, $docList, $fieldList;\n    return _regeneratorRuntime.async(function getDatasources$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(DataSourceActions.getDatasources({}));\n\n          case 3:\n            $datasources = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(DataSourceActions.getDocList(datasource));\n\n          case 6:\n            $docList = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(DataSourceActions.getFieldList(datasource, doc));\n\n          case 9:\n            $fieldList = _context.sent;\n            setDatasources($datasources);\n            setDocList($docList);\n            setFieldList($fieldList);\n            return _context.abrupt(\"return\", $datasources);\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 16]]);\n  };\n\n  var getDocList = function getDocList(id) {\n    var $docList;\n    return _regeneratorRuntime.async(function getDocList$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            setDatasource(id);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(DataSourceActions.getDocList(id));\n\n          case 4:\n            $docList = _context2.sent;\n            setDocList($docList);\n            return _context2.abrupt(\"return\", $docList);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  };\n\n  var getFieldList = function getFieldList(id, docId) {\n    var $fieldList;\n    return _regeneratorRuntime.async(function getFieldList$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            setDoc(docId);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(DataSourceActions.getFieldList(id, docId));\n\n          case 4:\n            $fieldList = _context3.sent;\n            setFieldList($fieldList);\n            return _context3.abrupt(\"return\", $fieldList);\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  };\n\n  var handleDatasourceChange = function handleDatasourceChange(event) {\n    var _event$target, name, value;\n\n    return _regeneratorRuntime.async(function handleDatasourceChange$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _event$target = event.target, name = _event$target.name, value = _event$target.value;\n            setFieldList([]);\n            setFields([]);\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(getDocList(value));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  };\n\n  var handleDocChange = function handleDocChange(event) {\n    var _event$target2, name, value;\n\n    return _regeneratorRuntime.async(function handleDocChange$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _event$target2 = event.target, name = _event$target2.name, value = _event$target2.value;\n            setFieldList([]);\n            setFields([]);\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(getFieldList(datasource, value));\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  };\n\n  var handleFieldChange = function handleFieldChange(name) {\n    return function (event) {\n      var checked = event.target.checked;\n      checked ? setFields([].concat(_toConsumableArray(fields), [name])) : setFields(fields.filter(function (field) {\n        return field != name;\n      }));\n    };\n  };\n\n  var renderFieldSettings = function renderFieldSettings() {\n    return fieldList.length ? __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: classes.h2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: classes.span,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Fields Settings\")), fieldList.map(function (field) {\n      return __jsx(FormControlLabel, {\n        key: field,\n        control: __jsx(Checkbox, {\n          checked: fields.includes(field),\n          onChange: handleFieldChange(field),\n          value: field,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }),\n        label: field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n    })) : __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    });\n  };\n\n  var renderQuerySettings = function renderQuerySettings() {\n    return fields.length ? __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: classes.h2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: classes.span,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Query Settings\")), fields.map(function (field) {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      });\n    })) : __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    });\n  };\n\n  var saveConfigSettings = function saveConfigSettings() {\n    var data, update;\n    return _regeneratorRuntime.async(function saveConfigSettings$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            data = {\n              dataSourceId: datasource,\n              config: {\n                docId: doc,\n                fields: fields,\n                type: 'simple',\n                func: 'find',\n                query: {}\n              }\n            };\n            _context6.next = 4;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.updateWidgetSettings(widget.id, data));\n\n          case 4:\n            update = _context6.sent;\n            handleSettingsClose(update);\n            _context6.next = 11;\n            break;\n\n          case 8:\n            _context6.prev = 8;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log(_context6.t0);\n\n          case 11:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 8]]);\n  };\n\n  useEffect(function () {\n    getDatasources();\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Widget Properties\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    id: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Title\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })), __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Connection Settings\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    id: \"data-source\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Data Source\"), __jsx(Select, {\n    name: \"datasource\",\n    labelId: \"data-source\",\n    value: datasource,\n    onChange: handleDatasourceChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, datasources.map(function (item) {\n    return __jsx(MenuItem, {\n      key: item.id,\n      value: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, item.title);\n  }))), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    disabled: datasource ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    id: \"doc-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Table/Collection\"), __jsx(Select, {\n    name: \"docList\",\n    labelId: \"doc-list\",\n    value: doc,\n    onChange: handleDocChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, docList.map(function (item) {\n    return __jsx(MenuItem, {\n      key: item,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, item);\n  }))), renderFieldSettings(), renderQuerySettings(), __jsx(Button, {\n    fullWidth: true,\n    onClick: saveConfigSettings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Save\")));\n};\n\nexport default TableWidgetSettings;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/widgets/table/table-widget-settings.jsx"],"names":["useState","useEffect","makeStyles","Button","InputLabel","MenuItem","FormControl","Input","Select","FormControlLabel","Checkbox","DataSourceActions","WidgetSettingsActions","Swal","useStyles","theme","list","width","paddingLeft","paddingRight","paddingTop","h2","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","formControl","TableWidgetSettings","widget","handleSettingsClose","isAdding","classes","datasources","setDatasources","dataSourceId","datasource","setDatasource","docList","setDocList","config","docId","doc","setDoc","fieldList","setFieldList","fields","setFields","query","setQuery","getDatasources","$datasources","getDocList","$docList","getFieldList","$fieldList","console","log","id","handleDatasourceChange","event","target","name","value","handleDocChange","handleFieldChange","checked","filter","field","renderFieldSettings","length","map","includes","renderQuerySettings","saveConfigSettings","data","type","func","updateWidgetSettings","update","item","title"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,IAAMC,SAAS,GAAGZ,UAAU,CAAC,UAAAa,KAAK;AAAA,SAAK;AACrCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,GADH;AAEJC,MAAAA,WAAW,EAAE,MAFT;AAGJC,MAAAA,YAAY,EAAE,MAHV;AAIJC,MAAAA,UAAU,EAAE;AAJR,KAD+B;AAOrCC,IAAAA,EAAE,EAAE;AACFJ,MAAAA,KAAK,EAAE,MADL;AAEFK,MAAAA,SAAS,EAAE,QAFT;AAGFC,MAAAA,YAAY,EAAE,gBAHZ;AAIFC,MAAAA,UAAU,EAAE,OAJV;AAKFC,MAAAA,SAAS,EAAE,MALT;AAMFC,MAAAA,YAAY,EAAE,MANZ;AAOFC,MAAAA,UAAU,EAAE,QAPV;AAQFC,MAAAA,QAAQ,EAAE,MARR;AASFC,MAAAA,KAAK,EAAE;AATL,KAPiC;AAkBrCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,UAAU,EAAE,MADR;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAlB+B;AAsBrCC,IAAAA,WAAW,EAAE;AACXR,MAAAA,SAAS,EAAE;AADA;AAtBwB,GAAL;AAAA,CAAN,CAA5B;;AA2BA,IAAMS,mBAAmB,GAAG,SAAtBA,mBAAsB,OAA+C;AAAA,MAA5CC,MAA4C,QAA5CA,MAA4C;AAAA,MAApCC,mBAAoC,QAApCA,mBAAoC;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACzE,MAAMC,OAAO,GAAGxB,SAAS,EAAzB;;AADyE,kBAEnCd,QAAQ,CAAC,EAAD,CAF2B;AAAA,MAElEuC,WAFkE;AAAA,MAErDC,cAFqD;;AAAA,mBAGrCxC,QAAQ,CAACmC,MAAM,CAACM,YAAR,CAH6B;AAAA,MAGlEC,UAHkE;AAAA,MAGtDC,aAHsD;;AAAA,mBAI3C3C,QAAQ,CAAC,EAAD,CAJmC;AAAA,MAIlE4C,OAJkE;AAAA,MAIzDC,UAJyD;;AAAA,mBAKnD7C,QAAQ,CAACmC,MAAM,CAACW,MAAP,IAAiBX,MAAM,CAACW,MAAP,CAAcC,KAA/B,GAAuCZ,MAAM,CAACW,MAAP,CAAcC,KAArD,GAA6D,IAA9D,CAL2C;AAAA,MAKlEC,GALkE;AAAA,MAK7DC,MAL6D;;AAAA,mBAMvCjD,QAAQ,CAAC,EAAD,CAN+B;AAAA,MAMlEkD,SANkE;AAAA,MAMvDC,YANuD;;AAAA,mBAO7CnD,QAAQ,CAACmC,MAAM,CAACW,MAAP,IAAiBX,MAAM,CAACW,MAAP,CAAcM,MAA/B,GAAwCjB,MAAM,CAACW,MAAP,CAAcM,MAAtD,GAA+D,EAAhE,CAPqC;AAAA,MAOlEA,MAPkE;AAAA,MAO1DC,SAP0D;;AAAA,mBAQ/CrD,QAAQ,CAAC,EAAD,CARuC;AAAA,MAQlEsD,KARkE;AAAA,MAQ3DC,QAR2D;;AAUzE,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEQ7C,iBAAiB,CAAC6C,cAAlB,CAAiC,EAAjC,CAFR;;AAAA;AAEbC,YAAAA,YAFa;AAAA;AAAA,6CAGI9C,iBAAiB,CAAC+C,UAAlB,CAA6BhB,UAA7B,CAHJ;;AAAA;AAGbiB,YAAAA,QAHa;AAAA;AAAA,6CAIMhD,iBAAiB,CAACiD,YAAlB,CAA+BlB,UAA/B,EAA2CM,GAA3C,CAJN;;AAAA;AAIba,YAAAA,UAJa;AAKnBrB,YAAAA,cAAc,CAACiB,YAAD,CAAd;AACAZ,YAAAA,UAAU,CAACc,QAAD,CAAV;AACAR,YAAAA,YAAY,CAACU,UAAD,CAAZ;AAPmB,6CAQZJ,YARY;;AAAA;AAAA;AAAA;AAUnBK,YAAAA,OAAO,CAACC,GAAR;;AAVmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAcA,MAAML,UAAU,GAAG,SAAbA,UAAa,CAAOM,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfrB,YAAAA,aAAa,CAACqB,EAAD,CAAb;AAFe;AAAA,6CAGQrD,iBAAiB,CAAC+C,UAAlB,CAA6BM,EAA7B,CAHR;;AAAA;AAGTL,YAAAA,QAHS;AAIfd,YAAAA,UAAU,CAACc,QAAD,CAAV;AAJe,8CAKRA,QALQ;;AAAA;AAAA;AAAA;AAOfG,YAAAA,OAAO,CAACC,GAAR;;AAPe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAWA,MAAMH,YAAY,GAAG,SAAfA,YAAe,CAAOI,EAAP,EAAWjB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjBE,YAAAA,MAAM,CAACF,KAAD,CAAN;AAFiB;AAAA,6CAGQpC,iBAAiB,CAACiD,YAAlB,CAA+BI,EAA/B,EAAmCjB,KAAnC,CAHR;;AAAA;AAGXc,YAAAA,UAHW;AAIjBV,YAAAA,YAAY,CAACU,UAAD,CAAZ;AAJiB,8CAKVA,UALU;;AAAA;AAAA;AAAA;AAOjBC,YAAAA,OAAO,CAACC,GAAR;;AAPiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAWA,MAAME,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAOC,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BACLA,KAAK,CAACC,MADD,EACrBC,IADqB,iBACrBA,IADqB,EACfC,KADe,iBACfA,KADe;AAE7BlB,YAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,YAAAA,SAAS,CAAC,EAAD,CAAT;AAH6B;AAAA,6CAIvBK,UAAU,CAACW,KAAD,CAJa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAOA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAOJ,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BACEA,KAAK,CAACC,MADR,EACdC,IADc,kBACdA,IADc,EACRC,KADQ,kBACRA,KADQ;AAEtBlB,YAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,YAAAA,SAAS,CAAC,EAAD,CAAT;AAHsB;AAAA,6CAIhBO,YAAY,CAAClB,UAAD,EAAa2B,KAAb,CAJI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAOA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAH,IAAI;AAAA,WAAI,UAAAF,KAAK,EAAI;AAAA,UACjCM,OADiC,GACrBN,KAAK,CAACC,MADe,CACjCK,OADiC;AAEzCA,MAAAA,OAAO,GAAGnB,SAAS,8BAAKD,MAAL,IAAagB,IAAb,GAAZ,GAAkCf,SAAS,CAACD,MAAM,CAACqB,MAAP,CAAc,UAAAC,KAAK;AAAA,eAAIA,KAAK,IAAIN,IAAb;AAAA,OAAnB,CAAD,CAAlD;AACD,KAH6B;AAAA,GAA9B;;AAKA,MAAMO,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,WAAMzB,SAAS,CAAC0B,MAAV,GAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACpD;AAAI,MAAA,SAAS,EAAEtC,OAAO,CAACjB,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAEiB,OAAO,CAACR,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADoD,EAKnDoB,SAAS,CAAC2B,GAAV,CAAc,UAAAH,KAAK;AAAA,aAAK,MAAC,gBAAD;AACvB,QAAA,GAAG,EAAEA,KADkB;AAEvB,QAAA,OAAO,EACL,MAAC,QAAD;AAAU,UAAA,OAAO,EAAEtB,MAAM,CAAC0B,QAAP,CAAgBJ,KAAhB,CAAnB;AAA2C,UAAA,QAAQ,EAAEH,iBAAiB,CAACG,KAAD,CAAtE;AAA+E,UAAA,KAAK,EAAEA,KAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHqB;AAKvB,QAAA,KAAK,EAAEA,KALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL;AAAA,KAAnB,CALmD,CAApB,GAYxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZkB;AAAA,GAA5B;;AAcA,MAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,WAAM3B,MAAM,CAACwB,MAAP,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACjD;AAAI,MAAA,SAAS,EAAEtC,OAAO,CAACjB,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAEiB,OAAO,CAACR,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADiD,EAKhDsB,MAAM,CAACyB,GAAP,CAAW,UAAAH,KAAK;AAAA,aAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL;AAAA,KAAhB,CALgD,CAAjB,GAQxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARkB;AAAA,GAA5B;;AAUA,MAAMM,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjBC,YAAAA,IAFiB,GAEV;AACXxC,cAAAA,YAAY,EAAEC,UADH;AAEXI,cAAAA,MAAM,EAAE;AACNC,gBAAAA,KAAK,EAAEC,GADD;AAENI,gBAAAA,MAAM,EAANA,MAFM;AAGN8B,gBAAAA,IAAI,EAAE,QAHA;AAINC,gBAAAA,IAAI,EAAE,MAJA;AAKN7B,gBAAAA,KAAK,EAAE;AALD;AAFG,aAFU;AAAA;AAAA,6CAYF1C,qBAAqB,CAACwE,oBAAtB,CAA2CjD,MAAM,CAAC6B,EAAlD,EAAsDiB,IAAtD,CAZE;;AAAA;AAYjBI,YAAAA,MAZiB;AAavBjD,YAAAA,mBAAmB,CAACiD,MAAD,CAAnB;AAbuB;AAAA;;AAAA;AAAA;AAAA;AAevBvB,YAAAA,OAAO,CAACC,GAAR;;AAfuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAmBA9D,EAAAA,SAAS,CAAC,YAAM;AACduD,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACtB,IAAxB;AAA8B,IAAA,IAAI,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEsB,OAAO,CAACjB,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAEiB,OAAO,CAACR,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAIE,MAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,SAAS,EAAEQ,OAAO,CAACL,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,EAAE,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJF,EAQE;AAAI,IAAA,SAAS,EAAEK,OAAO,CAACjB,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAEiB,OAAO,CAACR,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CARF,EAWE,MAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,SAAS,EAAEQ,OAAO,CAACL,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,EAAE,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,OAAO,EAAC,aAFV;AAGE,IAAA,KAAK,EAAES,UAHT;AAIE,IAAA,QAAQ,EAAEuB,sBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG1B,WAAW,CAACsC,GAAZ,CAAgB,UAAAS,IAAI;AAAA,WAAK,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACtB,EAApB;AAAwB,MAAA,KAAK,EAAEsB,IAAI,CAACtB,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCsB,IAAI,CAACC,KAA9C,CAAL;AAAA,GAApB,CANH,CAFF,CAXF,EAuBE,MAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,SAAS,EAAEjD,OAAO,CAACL,WAA1C;AAAuD,IAAA,QAAQ,EAAES,UAAU,GAAG,KAAH,GAAW,IAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,EAAE,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAEM,GAHT;AAIE,IAAA,QAAQ,EAAEsB,eAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG1B,OAAO,CAACiC,GAAR,CAAY,UAAAS,IAAI;AAAA,WAAK,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAf;AAAqB,MAAA,KAAK,EAAEA,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCA,IAAnC,CAAL;AAAA,GAAhB,CANH,CAFF,CAvBF,EAmCGX,mBAAmB,EAnCtB,EAqCGI,mBAAmB,EArCtB,EAuCE,MAAC,MAAD;AAAQ,IAAA,SAAS,MAAjB;AAAkB,IAAA,OAAO,EAAEC,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvCF,CADF,CADF;AA8CD,CA9JD;;AAgKA,eAAe9C,mBAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Input from '@material-ui/core/Input'\r\nimport Select from '@material-ui/core/Select'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport DataSourceActions from '../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst TableWidgetSettings = ({ widget, handleSettingsClose, isAdding }) => {\r\n  const classes = useStyles()\r\n  const [datasources, setDatasources] = useState([])\r\n  const [datasource, setDatasource] = useState(widget.dataSourceId)\r\n  const [docList, setDocList] = useState([])\r\n  const [doc, setDoc] = useState(widget.config && widget.config.docId ? widget.config.docId : null)\r\n  const [fieldList, setFieldList] = useState([])\r\n  const [fields, setFields] = useState(widget.config && widget.config.fields ? widget.config.fields : [])\r\n  const [query, setQuery] = useState({})\r\n\r\n  const getDatasources = async () => {\r\n    try {\r\n      const $datasources = await DataSourceActions.getDatasources({})\r\n      const $docList = await DataSourceActions.getDocList(datasource)\r\n      const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\r\n      setDatasources($datasources)\r\n      setDocList($docList)\r\n      setFieldList($fieldList)\r\n      return $datasources\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getDocList = async (id) => {\r\n    try {\r\n      setDatasource(id)\r\n      const $docList = await DataSourceActions.getDocList(id)\r\n      setDocList($docList)\r\n      return $docList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getFieldList = async (id, docId) => {\r\n    try {\r\n      setDoc(docId)\r\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\r\n      setFieldList($fieldList)\r\n      return $fieldList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const handleDatasourceChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getDocList(value)\r\n  }\r\n\r\n  const handleDocChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getFieldList(datasource, value)\r\n  }\r\n\r\n  const handleFieldChange = name => event => {\r\n    const { checked } = event.target\r\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name))\r\n  }\r\n\r\n  const renderFieldSettings = () => fieldList.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Fields Settings</span>\r\n    </h2>\r\n\r\n    {fieldList.map(field => (<FormControlLabel\r\n      key={field}\r\n      control={\r\n        <Checkbox checked={fields.includes(field)} onChange={handleFieldChange(field)} value={field} />\r\n      }\r\n      label={field}\r\n    />))}\r\n  </div>) : <div></div>\r\n\r\n  const renderQuerySettings = () => fields.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Query Settings</span>\r\n    </h2>\r\n\r\n    {fields.map(field => (<div>\r\n\r\n    </div>))}\r\n  </div>) : <div></div>\r\n\r\n  const saveConfigSettings = async () => {\r\n    try {\r\n      const data = {\r\n        dataSourceId: datasource,\r\n        config: {\r\n          docId: doc,\r\n          fields,\r\n          type: 'simple',\r\n          func: 'find',\r\n          query: {}\r\n        }\r\n      }\r\n      const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data)\r\n      handleSettingsClose(update)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDatasources()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <div>\r\n        <h2 className={classes.h2}>\r\n          <span className={classes.span}>Widget Properties</span>\r\n        </h2>\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <InputLabel id='title'>Title</InputLabel>\r\n          <Input />\r\n        </FormControl>\r\n        <h2 className={classes.h2}>\r\n          <span className={classes.span}>Connection Settings</span>\r\n        </h2>\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <InputLabel id=\"data-source\">Data Source</InputLabel>\r\n          <Select\r\n            name=\"datasource\"\r\n            labelId=\"data-source\"\r\n            value={datasource}\r\n            onChange={handleDatasourceChange}\r\n          >\r\n            {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\r\n          <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\r\n          <Select\r\n            name=\"docList\"\r\n            labelId=\"doc-list\"\r\n            value={doc}\r\n            onChange={handleDocChange}\r\n          >\r\n            {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {renderFieldSettings()}\r\n\r\n        {renderQuerySettings()}\r\n\r\n        <Button fullWidth onClick={saveConfigSettings}>Save</Button>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableWidgetSettings"]},"metadata":{},"sourceType":"module"}