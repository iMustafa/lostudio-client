{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/grapes/table-widgets/html-table-widget/Material.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\n\nclass Material extends React.Component {\n  render() {\n    console.log(this.props.data); // const keys = [...new Set([].concat.apply([], this.props.data.map(obj => Object.keys(obj))))]\n    // console.log(keys)\n\n    let f = '';\n\n    for (let i = 0, j = 0; i < this.props.data.length && j < 10; i++, j++) {\n      const kee = Object.keys(this.props.data[i]);\n      console.log(kee);\n      f = kee;\n    }\n\n    return __jsx(\"div\", {\n      id: \"hie\",\n      class: \"datagrid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, __jsx(\"table\", {\n      cellspacing: \"0\",\n      cellpadding: \"0\",\n      style: {\n        margin: \"0 20px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        borderRadius: '5px',\n        fontSize: \"25px\",\n        color: \"black\",\n        tableLayout: 'fixed',\n        whiteSpace: 'normal'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, __jsx(\"tr\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        marginTop: \"15px\",\n        marginBottom: \"15px\",\n        backgroundColor: '#95A5A6',\n        boxShadow: '0px 0px 9px 0px rgba(0,0,0,0.1)',\n        borderRadius: \"7px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, f.map(k => {\n      console.log(f.length);\n      return __jsx(\"th\", {\n        style: {\n          width: `${100 / f.length}%`,\n          padding: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 37\n        }\n      }, k);\n    }))), __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, this.props.data.map(d => {\n      const values = [];\n      f.forEach(key => {\n        if (typeof d[key] === 'object' || typeof d[key] === 'undefined') {\n          d[key] = '----------';\n        } else if (d[key] === true) {\n          d[key] = \"true\";\n        } else if (d[key] === false) {\n          d[key] = 'false';\n        } else if (d[key].length < 1) {\n          d[key] = '----------';\n        }\n\n        values.push(d[key]);\n      });\n      console.log(values); // values.map(str => {\n      //     if (typeof str === \"object\") {\n      //         let st = JSON.stringify(str)\n      //         values[1] = st;\n      //     } else if (typeof str === Boolean) {\n      //         return str.toString()\n      //     }\n      //})\n\n      return __jsx(\"tr\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-around\",\n          alignItems: \"center\",\n          marginBottom: \"15px\",\n          boxShadow: '0px 0px 9px 0px rgba(0,0,0,0.1)',\n          borderRadius: \"7px\",\n          backgroundColor: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 37\n        }\n      }, values.map(di => {\n        return __jsx(\"td\", {\n          style: {\n            width: `${100 / f.length}%`,\n            wordWrap: 'break-word',\n            padding: '10px 0'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 49\n          }\n        }, di);\n      }));\n    }))));\n  }\n\n}\n\nexport default Material;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/grapes/table-widgets/html-table-widget/Material.js"],"names":["React","Material","Component","render","console","log","props","data","f","i","j","length","kee","Object","keys","margin","display","flexDirection","textAlign","borderRadius","fontSize","color","tableLayout","whiteSpace","justifyContent","marginTop","marginBottom","backgroundColor","boxShadow","map","k","width","padding","d","values","forEach","key","push","alignItems","di","wordWrap"],"mappings":"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","sourcesContent":["import React from \"react\";\nclass Material extends React.Component {\n    \n    render() {\n        console.log(this.props.data)\n        // const keys = [...new Set([].concat.apply([], this.props.data.map(obj => Object.keys(obj))))]\n        // console.log(keys)\n        let f = ''\n        for (let i = 0, j = 0; i < this.props.data.length && j < 10; i++, j++) {\n\n            const kee = Object.keys(this.props.data[i])\n            console.log(kee)\n            f = kee\n        }\n        return (\n            <div id=\"hie\" class=\"datagrid\">\n                <table\n                    cellspacing=\"0\"\n                    cellpadding=\"0\"\n                    style={{\n                    margin: \"0 20px\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    textAlign: \"center\",\n                    borderRadius: '5px',\n                    fontSize: \"25px\",\n                    color: \"black\",\n                    tableLayout: 'fixed',\n                    whiteSpace: 'normal'\n                }}>\n                    <thead>\n                        <tr\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"space-between\",\n                                marginTop: \"15px\",\n                                marginBottom: \"15px\",\n                                backgroundColor: '#95A5A6',\n                                boxShadow: '0px 0px 9px 0px rgba(0,0,0,0.1)',\n                                borderRadius: \"7px\"\n\n\n\n                        }}\n                        >\n                            {f.map((k) => {\n                                console.log(f.length)\n                                \n                                return (\n                                    <th\n                                        style={{\n                                            width:`${100/f.length}%`,\n                                            padding: \"15px\",\n                                        }}>{k}</th>\n                                )\n                            })}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.props.data.map((d) => {\n                                const values = []\n                                f.forEach(key => {\n                                    \n                                    if (typeof d[key] === 'object' || typeof d[key] === 'undefined') {\n\n                                        d[key] = '----------'\n\n                                    } else if (d[key] === true) {\n                                        d[key] = \"true\"\n                                    } else if (d[key] === false) {\n                                        d[key] = 'false'\n                                    } else if (d[key].length < 1) {\n                                        d[key] = '----------'\n                                    } \n                                    \n                                    \n                                    values.push(d[key])\n\n                                })\n                                console.log(values)\n                                // values.map(str => {\n                                //     if (typeof str === \"object\") {\n                                //         let st = JSON.stringify(str)\n                                //         values[1] = st;\n                                //     } else if (typeof str === Boolean) {\n                                //         return str.toString()\n\n                                //     }\n                                //})\n                                return (\n                                    <tr style={{\n                                        display: \"flex\",\n                                        flexDirection: \"row\",\n                                        justifyContent: \"space-around\",\n                                        alignItems:\"center\",\n                                        marginBottom: \"15px\",\n                                        boxShadow: '0px 0px 9px 0px rgba(0,0,0,0.1)',\n                                        borderRadius: \"7px\",\n                                        backgroundColor:\"white\"\n\n\n\n\n                                    }}>\n                                        \n                                        {values.map((di) => {\n                                            return (\n                                                \n                                                <td\n                                                    style={{\n                                                    width: `${100 / f.length}%`,\n                                                        wordWrap: 'break-word',\n                                                        padding: '10px 0',\n                                                        \n                                                }}\n                                            \n                                                >\n                                                    \n                                                    {di}\n                                                    </td>\n                                            )\n                                        })}\n                                    </tr>\n                                )\n                            })\n                        }\n                        \n                \n                    </tbody>\n                </table>\n            </div>\n        );\n\n    }\n}\n\n\n\nexport default Material\n"]},"metadata":{},"sourceType":"module"}