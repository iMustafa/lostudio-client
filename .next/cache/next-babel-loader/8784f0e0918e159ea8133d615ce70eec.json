{"ast":null,"code":"import axios from \"axios\";\nimport config from \"next/config\";\nimport Cookie from \"js-cookie\";\nconst {\n  API_URL\n} = config().publicRuntimeConfig;\nexport default class DashboardActions {\n  static async createDashboard({\n    Authorization,\n    dashboard\n  }) {\n    return axios.post(`${API_URL}/Dashboards`, dashboard, {\n      headers: {\n        Authorization: Authorization || Cookie.get(\"id\")\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getDashboards({\n    Authorization,\n    query\n  }) {\n    return axios.get(`${API_URL}/Dashboards`, {\n      headers: {\n        Authorization: Authorization || Cookie.get(\"id\")\n      },\n      params: {\n        filter: {\n          where: {\n            isSub: false\n          }\n        }\n      }\n    }).then(res => res.data).catch(err => err);\n  }\n\n  static async getWebpages({\n    Authorization\n  }) {\n    return axios.get(`${API_URL}/Dashboards`, {\n      headers: {\n        Authorization: Authorization || Cookie.get(\"id\")\n      },\n      params: {\n        filter: {\n          where: {\n            type: \"webpage\"\n          }\n        }\n      }\n    }).then(res => res.data).catch(err => err);\n  }\n\n  static async linkSubDashboard({\n    id,\n    subDashboardId\n  }) {\n    return axios.post(`${API_URL}/Dashboards/${id}/subDashboards`, {\n      dashboardId: id,\n      subDashboardId\n    }, {\n      headers: {\n        Authorization: Cookie.get(\"id\")\n      }\n    }).then(res => res.data).catch(err => err);\n  }\n\n  static async unLinkSubDashboard({\n    id,\n    subDashboardId\n  }) {\n    return axios.delete(`${API_URL}/Dashboards/${id}/subDashboards/${subDashboardId}`, {\n      headers: {\n        Authorization: Cookie.get(\"id\")\n      }\n    }).then(res => res.data).catch(err => err);\n  }\n\n  static async getSubDashboards({\n    Authorization,\n    id\n  }) {\n    return axios.get(`${API_URL}/Dashboards/${id}/subDashboards`, {\n      headers: {\n        Authorization: Authorization || Cookie.get(\"id\")\n      },\n      params: {\n        filter: {\n          include: \"subDashboard\"\n        }\n      }\n    }).then(res => res.data).catch(err => err);\n  }\n\n  static async getDashboardById(id) {\n    return axios.get(`${API_URL}/Dashboards/${id}`, {\n      headers: {\n        Authorization: Cookie.get(\"id\")\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async updateDashboard(id, data) {\n    return axios.patch(`${API_URL}/Dashboards/${id}`, data).then(res => res.data).catch(err => err.response);\n  }\n\n  static async deleteDashboard(data) {\n    return axios.post(\"\", {}).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getWidgetSettings({\n    Authorization,\n    id\n  }) {\n    return axios.get(`${API_URL}/Dashboards/${id}/widgetSettings`, {\n      headers: {\n        Authorization: Authorization || Cookie.get(\"id\")\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getCollaborators({\n    Authorization,\n    id\n  }) {\n    return axios.get(`${API_URL}/Dashboards/${id}/collaborators`, {\n      headers: {\n        Authorization: Authorization || Cookie.get(\"id\")\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getCollaboratorations({\n    Authorization\n  }) {\n    return axios.get(`${API_URL}/Dashboards/collaborations`, {\n      headers: {\n        Authorization: Authorization || Cookie.get(\"id\")\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async addCollaborator({\n    Authorization,\n    email,\n    id,\n    editor,\n    viewer\n  }) {\n    return axios.post(`${API_URL}/Dashboards/${id}/dashboardRoleMappings`, {\n      email,\n      editor,\n      viewer\n    }, {\n      headers: {\n        Authorization: Authorization || Cookie.get(\"id\")\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async addWidgetToDashboard(id, fk) {\n    return axios.put(`${API_URL}/Dashboards/${id}/widgetSettings/rel/${fk}`, {\n      dashboardId: id,\n      widgetSettingsId: fk\n    }, {\n      headers: {\n        Authorization: Cookie.get(\"id\")\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async createWidgetInDashboard(id, widgetData) {\n    return axios.post(`${API_URL}/Dashboards/${id}/widgetSettings`, widgetData, {\n      headers: {\n        Authorization: Cookie.get(\"id\")\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async removeWidgetFromDashboard(data) {\n    return axios.post(\"\", {}).then(res => res.data).catch(err => err.response);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}