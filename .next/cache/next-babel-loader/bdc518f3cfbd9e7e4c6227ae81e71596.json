{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport config from 'next/config';\nimport Cookie from 'js-cookie';\nconst {\n  API_URL\n} = config().publicRuntimeConfig;\nexport default class DatasourceActions {\n  static async createDatasource(data) {\n    return axios.post(`${API_URL}/DataSources`, data, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err);\n  }\n\n  static async updateDatasource(id, data) {\n    return axios.patch(`${API_URL}/DataSources/${id}`, data, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getDatasources({\n    Authorization,\n    query\n  }) {\n    return axios.get(`${API_URL}/DataSources`, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err);\n  }\n\n  static async getUserDatasources(id, query) {\n    return axios.get(`${API_URL}/users/${id}/dataSrouces`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      },\n      params: _objectSpread({}, query)\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getDatasourceById(id) {\n    return axios.get(`${API_URL}/DataSources/${id}`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async removeDatasource(id) {\n    return axios.delete(`${API_URL}/DataSources/${id}`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getDocList(id) {\n    return axios.get(`${API_URL}/DataSources/${id}/doc-list`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getFieldList(id, docId) {\n    return axios.get(`${API_URL}/DataSources/${id}/field-list`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      },\n      params: {\n        docId\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async queryDatasource(query) {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  }\n\n}","map":{"version":3,"sources":["F:/Projects/LoStudio/client/actions/datasource.actions.ts"],"names":["axios","config","Cookie","API_URL","publicRuntimeConfig","DatasourceActions","createDatasource","data","post","headers","Authorization","get","then","res","catch","err","updateDatasource","id","patch","response","getDatasources","query","getUserDatasources","params","getDatasourceById","removeDatasource","delete","getDocList","getFieldList","docId","queryDatasource"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport config from 'next/config'\r\nimport Cookie from 'js-cookie'\r\nimport Datasource from '../types/datasource.types'\r\n\r\nconst { API_URL } = config().publicRuntimeConfig\r\n\r\nexport default class DatasourceActions {\r\n\r\n  public static async createDatasource(data: Datasource): Promise<Datasource> {\r\n    return axios\r\n      .post(`${API_URL}/DataSources`, data, { headers: { Authorization: Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err)\r\n  }\r\n\r\n  public static async updateDatasource(id: string, data: Datasource): Promise<Datasource> {\r\n    return axios\r\n      .patch(`${API_URL}/DataSources/${id}`, data, { headers: { Authorization: Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async getDatasources({ Authorization, query }: { Authorization?: string, query?: any }): Promise<Array<Datasource>> {\r\n    return axios\r\n      .get(`${API_URL}/DataSources`, { headers: { Authorization: Authorization || Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err)\r\n  }\r\n\r\n  public static async getUserDatasources(id: string, query: any): Promise<Array<Datasource>> {\r\n    return axios\r\n      .get(`${API_URL}/users/${id}/dataSrouces`, { headers: { Authorization: Cookie.get('id') }, params: { ...query } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async getDatasourceById(id: string): Promise<Datasource> {\r\n    return axios\r\n      .get(`${API_URL}/DataSources/${id}`, { headers: { Authorization: Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async removeDatasource(id: string): Promise<Datasource> {\r\n    return axios\r\n      .delete(`${API_URL}/DataSources/${id}`, { headers: { Authorization: Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async getDocList(id: string): Promise<any> {\r\n    return axios\r\n      .get(`${API_URL}/DataSources/${id}/doc-list`, { headers: { Authorization: Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async getFieldList(id: string, docId: string): Promise<any> {\r\n    return axios\r\n      .get(`${API_URL}/DataSources/${id}/field-list`, { headers: { Authorization: Cookie.get('id') }, params: { docId } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async queryDatasource(query: string): Promise<any> {\r\n    return axios\r\n      .post('', {})\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}