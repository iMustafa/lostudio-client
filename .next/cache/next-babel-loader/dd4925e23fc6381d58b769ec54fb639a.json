{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DashboardActions from '../../../actions/dashboard.actions';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Swal from 'sweetalert2';\nvar useStyles = makeStyles(function () {\n  return {};\n});\n\nvar AddCollaboratorCard = function AddCollaboratorCard(_ref) {\n  var id = _ref.id,\n      cancel = _ref.cancel;\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState({\n    viewer: false,\n    editor: false\n  }),\n      permissions = _useState2[0],\n      setPermissions = _useState2[1];\n\n  var handleEmailChange = function handleEmailChange(e) {\n    setEmail(e.target.value);\n  };\n\n  var handlePermissionsChange = function handlePermissionsChange(event) {\n    setPermissions(_objectSpread({}, permissions, _defineProperty({}, event.target.name, event.target.checked)));\n  };\n\n  var addCollaborator = function addCollaborator() {\n    var editor, viewer, collaboration;\n    return _regeneratorRuntime.async(function addCollaborator$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            editor = permissions.editor, viewer = permissions.viewer;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(DashboardActions.addCollaborator({\n              email: email,\n              editor: editor,\n              viewer: viewer,\n              id: id\n            }));\n\n          case 4:\n            collaboration = _context.sent;\n\n            if (collaboration.status == 500) {\n              Swal.fire('Error', collaboration.data.error.message, 'error');\n            } else {\n              if (collaboration.sent) Swal.fire('Success', \"\".concat(email, \" is now a collaborator on this board. \"), 'success');else Swal.fire('Success', \"\".concat(email, \" is not a member yet, but they'll be assigned as a collaborator as soon as they sign up. \"), 'success');\n              setEmail('');\n              setPermissions({\n                editor: false,\n                viewer: false\n              });\n            }\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  return __jsx(Card, {\n    style: {\n      marginBottom: 10\n    }\n  }, __jsx(Grid, {\n    spacing: 2,\n    container: true,\n    style: {\n      margin: 0,\n      width: '100%'\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.name\n  }, __jsx(TextField, {\n    type: \"email\",\n    onChange: handleEmailChange,\n    label: \"Email\",\n    placeholder: \"example@domain.com\",\n    fullWidth: true\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      display: 'flex',\n      alignItems: 'flex-end'\n    }\n  }, __jsx(FormControlLabel, {\n    style: {\n      margin: 0\n    },\n    control: __jsx(Checkbox, {\n      checked: permissions.viewer,\n      onChange: handlePermissionsChange,\n      name: \"viewer\"\n    }),\n    label: \"Editor\"\n  }), __jsx(FormControlLabel, {\n    style: {\n      margin: 0\n    },\n    control: __jsx(Checkbox, {\n      checked: permissions.editor,\n      onChange: handlePermissionsChange,\n      name: \"editor\"\n    }),\n    label: \"Viewer\"\n  }))), __jsx(Grid, {\n    spacing: 2,\n    container: true,\n    style: {\n      margin: 0,\n      width: '100%',\n      marginTop: 10\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6\n  }, __jsx(Button, {\n    fullWidth: true,\n    onClick: cancel\n  }, \"Cancel\")), __jsx(Grid, {\n    item: true,\n    xs: 6\n  }, __jsx(Button, {\n    fullWidth: true,\n    onClick: addCollaborator\n  }, \"Add\"))));\n};\n\nexport default AddCollaboratorCard;","map":null,"metadata":{},"sourceType":"module"}