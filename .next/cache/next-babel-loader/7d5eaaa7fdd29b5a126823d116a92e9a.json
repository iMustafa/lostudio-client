{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/pages/login.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Router from 'next/router';\nimport Swal from 'sweetalert2';\nimport { Card, Box } from '@material-ui/core';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Lock from '@material-ui/icons/Lock';\nimport { login, saveLoginData } from '../actions/auth.actions';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      minHeight: '80vh',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    textInput: {\n      margin: theme.spacing(2),\n      width: '40%'\n    },\n    loginCard: {\n      padding: '30px 15px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      minHeight: '35vh'\n    },\n    loginButton: {\n      border: '1px solid #DEDEDE',\n      width: '45%'\n    },\n    buttonHolder: {\n      display: 'flex',\n      width: '90%',\n      justifyContent: 'center',\n      borderBottom: '1px solid #DEDEDE',\n      paddingBottom: theme.spacing(4)\n    },\n    forgetPassword: {\n      fontSize: '13px',\n      color: '#333',\n      alignSelf: 'flex-start',\n      paddingTop: theme.spacing(2),\n      paddingLeft: theme.spacing(5),\n      cursor: 'pointer'\n    },\n    signupHolder: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginTop: theme.spacing(2)\n    },\n    signupText: {\n      color: '#333',\n      position: 'relative',\n      top: '6px'\n    },\n    signupButton: {\n      marginLeft: theme.spacing(4),\n      border: '1px solid #DEDEDE',\n      width: '20%'\n    }\n  };\n});\n\nvar LoginPage = function LoginPage() {\n  var classes = useStyles();\n\n  var _useState = useState({\n    password: '',\n    email: ''\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(0),\n      invalidPasswordCount = _useState2[0],\n      setInvalidPasswordCount = _useState2[1];\n\n  var handleChange = function handleChange(e) {\n    setData(_objectSpread({}, data, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var submitLogin = function submitLogin() {\n    var loginInfo;\n    return _regeneratorRuntime.async(function submitLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(login(data));\n\n          case 3:\n            loginInfo = _context.sent;\n            saveLoginData(loginInfo);\n            Router.push('/');\n            _context.next = 16;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            _context.t1 = _context.t0.status;\n            _context.next = _context.t1 === 401 ? 13 : 16;\n            break;\n\n          case 13:\n            setInvalidPasswordCount(invalidPasswordCount + 1);\n\n            if (invalidPasswordCount >= 3) {\n              Swal.fire({\n                title: _context.t0.statusText,\n                text: 'Did you forget your email/password?',\n                icon: 'error',\n                showCancelButton: true,\n                confirmButtonText: 'Reset password',\n                cancelButtonText: 'Close'\n              }).then(function (result) {\n                if (result.value) Router.push('/reset-password');\n              });\n            } else {\n              Swal.fire(_context.t0.statusText, \"Invalid email/password combination.\", 'error');\n            }\n\n            return _context.abrupt(\"break\", 16);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]]);\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(Card, {\n    className: classes.loginCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    className: classes.textInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    htmlFor: \"input-with-icon-adornment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Email\"), __jsx(Input, {\n    name: \"email\",\n    startAdornment: __jsx(InputAdornment, {\n      position: \"start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, __jsx(AccountCircle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })),\n    type: 'email',\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    className: classes.textInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    htmlFor: \"input-with-icon-adornment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Password\"), __jsx(Input, {\n    name: \"password\",\n    startAdornment: __jsx(InputAdornment, {\n      position: \"start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, __jsx(Lock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })),\n    onChange: handleChange,\n    type: 'password',\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), __jsx(Box, {\n    className: classes.buttonHolder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, __jsx(Button, {\n    className: classes.loginButton,\n    onClick: submitLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Login\")), __jsx(Box, {\n    className: classes.forgetPassword,\n    onClick: function onClick() {\n      Router.push('/reset-password');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Did you forget your username/password?\")), __jsx(Box, {\n    className: classes.signupHolder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.signupText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"New Customer Signup.\"), __jsx(Button, {\n    className: classes.signupButton,\n    onClick: function onClick() {\n      Router.push('/signup');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Signup\"))));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/pages/login.tsx"],"names":["React","useState","makeStyles","Router","Swal","Card","Box","Input","Button","InputLabel","InputAdornment","FormControl","Grid","AccountCircle","Lock","login","saveLoginData","useStyles","theme","root","minHeight","alignItems","justifyContent","textInput","margin","spacing","width","loginCard","padding","display","flexDirection","loginButton","border","buttonHolder","borderBottom","paddingBottom","forgetPassword","fontSize","color","alignSelf","paddingTop","paddingLeft","cursor","signupHolder","marginTop","signupText","position","top","signupButton","marginLeft","LoginPage","classes","password","email","data","setData","invalidPasswordCount","setInvalidPasswordCount","handleChange","e","target","name","value","submitLogin","loginInfo","push","status","fire","title","statusText","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NextPage } from 'next';\nimport Router from 'next/router'\nimport Swal from 'sweetalert2'\nimport Cookies from 'js-cookie'\nimport { Card, Box } from '@material-ui/core';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Lock from '@material-ui/icons/Lock';\nimport { login, saveLoginData } from '../actions/auth.actions';\nimport { LoginResponse } from '../types/auth.types';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: '80vh',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textInput: {\n    margin: theme.spacing(2),\n    width: '40%',\n  },\n  loginCard: {\n    padding: '30px 15px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    minHeight: '35vh'\n  },\n  loginButton: {\n    border: '1px solid #DEDEDE',\n    width: '45%'\n  },\n  buttonHolder: {\n    display: 'flex',\n    width: '90%',\n    justifyContent: 'center',\n    borderBottom: '1px solid #DEDEDE',\n    paddingBottom: theme.spacing(4)\n  },\n  forgetPassword: {\n    fontSize: '13px',\n    color: '#333',\n    alignSelf: 'flex-start',\n    paddingTop: theme.spacing(2),\n    paddingLeft: theme.spacing(5),\n    cursor: 'pointer'\n  },\n  signupHolder: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(2),\n  },\n  signupText: {\n    color: '#333',\n    position: 'relative',\n    top: '6px'\n  },\n  signupButton: {\n    marginLeft: theme.spacing(4),\n    border: '1px solid #DEDEDE',\n    width: '20%'\n  }\n}));\n\nconst LoginPage: NextPage<{}> = () => {\n  const classes = useStyles();\n  const [data, setData] = useState({ password: '', email: '' });\n  const [invalidPasswordCount, setInvalidPasswordCount] = useState(0)\n\n  const handleChange = e => {\n    setData({\n      ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const submitLogin = async () => {\n    try {\n      const loginInfo: LoginResponse = await login(data)\n      saveLoginData(loginInfo)\n      Router.push('/')\n    } catch (e) {\n      switch (e.status) {\n        case 401:\n          setInvalidPasswordCount(invalidPasswordCount + 1)\n          if (invalidPasswordCount >= 3) {\n            Swal\n              .fire({\n                title: e.statusText,\n                text: 'Did you forget your email/password?',\n                icon: 'error',\n                showCancelButton: true,\n                confirmButtonText: 'Reset password',\n                cancelButtonText: 'Close'\n              })\n              .then(result => {\n                if (result.value)\n                  Router.push('/reset-password')\n              })\n          } else {\n            Swal.fire(e.statusText, \"Invalid email/password combination.\", 'error')\n          }\n          break\n      }\n    }\n  }\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      className={classes.root}\n    >\n      <Grid item md={6} xs={10}>\n        <Card className={classes.loginCard}>\n\n          <FormControl className={classes.textInput}>\n            <InputLabel htmlFor=\"input-with-icon-adornment\">Email</InputLabel>\n            <Input\n              name=\"email\"\n              startAdornment={\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              }\n              type={'email'}\n              onChange={handleChange}\n              required\n            />\n          </FormControl>\n\n          <FormControl className={classes.textInput}>\n            <InputLabel htmlFor=\"input-with-icon-adornment\">Password</InputLabel>\n            <Input\n              name=\"password\"\n              startAdornment={\n                <InputAdornment position=\"start\">\n                  <Lock />\n                </InputAdornment>\n              }\n              onChange={handleChange}\n              type={'password'}\n              required\n            />\n          </FormControl>\n\n          <Box className={classes.buttonHolder}>\n            <Button className={classes.loginButton} onClick={submitLogin}>Login</Button>\n          </Box>\n\n          <Box className={classes.forgetPassword} onClick={() => { Router.push('/reset-password') }}>\n            Did you forget your username/password?\n          </Box>\n\n        </Card>\n\n        <Box className={classes.signupHolder}>\n          <span className={classes.signupText}>New Customer Signup.</span>\n          <Button className={classes.signupButton} onClick={() => { Router.push('/signup') }}>Signup</Button>\n        </Box>\n\n      </Grid>\n    </Grid>\n  )\n};\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}