{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nimport config from 'next/config';\nimport Cookie from 'js-cookie';\nvar API_URL = config().publicRuntimeConfig.API_URL;\nexport var login = function login(data) {\n  return new _Promise(function (resolve, reject) {\n    axios.post(\"\".concat(API_URL, \"/users/login\"), data).then(function (res) {\n      return resolve(res.data);\n    })[\"catch\"](function (err) {\n      return reject(err.response);\n    });\n  });\n};\nexport var register = function register(data) {\n  return new _Promise(function (resolve, reject) {\n    axios.post(\"\".concat(API_URL, \"/users\"), data).then(function (res) {\n      return resolve(res.data);\n    })[\"catch\"](function (err) {\n      return reject(err.response);\n    });\n  });\n};\nexport var logout = function logout() {\n  return new _Promise(function (resolve, reject) {\n    axios.post(\"\".concat(API_URL, \"/users/logout\"), {}, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(function (res) {\n      return resolve(res.data);\n    })[\"catch\"](function (err) {\n      return reject(err);\n    });\n  });\n};\nexport var deleteCookie = function deleteCookie() {\n  Cookie.remove('id');\n  Cookie.remove('ttl');\n  Cookie.remove('userId');\n  Cookie.remove('created');\n};\nexport var saveLoginData = function saveLoginData(data) {\n  _Object$keys(data).forEach(function (key) {\n    Cookie.set(key, data[key]);\n  });\n};","map":{"version":3,"sources":["F:/Projects/LoStudio/client/actions/auth.actions.ts"],"names":["axios","config","Cookie","API_URL","publicRuntimeConfig","login","data","resolve","reject","post","then","res","err","response","register","logout","headers","Authorization","get","deleteCookie","remove","saveLoginData","forEach","key","set"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;IAOQC,O,GAAYF,MAAM,GAAGG,mB,CAArBD,O;AAER,OAAO,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD;AAAA,SAAoD,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxGR,IAAAA,KAAK,CAACS,IAAN,WAAcN,OAAd,mBAAqCG,IAArC,EACGI,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACI,GAAG,CAACL,IAAL,CAAX;AAAA,KADX,WAES,UAAAM,GAAG;AAAA,aAAIJ,MAAM,CAACI,GAAG,CAACC,QAAL,CAAV;AAAA,KAFZ;AAGD,GAJwE,CAApD;AAAA,CAAd;AAMP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACR,IAAD;AAAA,SAA4B,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACnFR,IAAAA,KAAK,CAACS,IAAN,WAAcN,OAAd,aAA+BG,IAA/B,EACGI,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACI,GAAG,CAACL,IAAL,CAAX;AAAA,KADX,WAES,UAAAM,GAAG;AAAA,aAAIJ,MAAM,CAACI,GAAG,CAACC,QAAL,CAAV;AAAA,KAFZ;AAGD,GAJmD,CAA5B;AAAA,CAAjB;AAMP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS;AAAA,SAAM,aAAY,UAACR,OAAD,EAAUC,MAAV,EAAqB;AAC3DR,IAAAA,KAAK,CAACS,IAAN,WAAcN,OAAd,oBAAsC,EAAtC,EAA0C;AACxCa,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEf,MAAM,CAACgB,GAAP,CAAW,IAAX;AAAjB;AAD+B,KAA1C,EAGGR,IAHH,CAGQ,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACI,GAAG,CAACL,IAAL,CAAX;AAAA,KAHX,WAIS,UAAAM,GAAG;AAAA,aAAIJ,MAAM,CAACI,GAAD,CAAV;AAAA,KAJZ;AAKD,GAN2B,CAAN;AAAA,CAAf;AAQP,OAAO,IAAMO,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChCjB,EAAAA,MAAM,CAACkB,MAAP,CAAc,IAAd;AACAlB,EAAAA,MAAM,CAACkB,MAAP,CAAc,KAAd;AACAlB,EAAAA,MAAM,CAACkB,MAAP,CAAc,QAAd;AACAlB,EAAAA,MAAM,CAACkB,MAAP,CAAc,SAAd;AACD,CALM;AAOP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACf,IAAD,EAAyB;AACpD,eAAYA,IAAZ,EACGgB,OADH,CACW,UAAAC,GAAG,EAAI;AACdrB,IAAAA,MAAM,CAACsB,GAAP,CAAWD,GAAX,EAAgBjB,IAAI,CAACiB,GAAD,CAApB;AACD,GAHH;AAID,CALM","sourcesContent":["import axios from 'axios'\r\nimport config from 'next/config'\r\nimport Cookie from 'js-cookie'\r\nimport {\r\n  LoginCredentials,\r\n  RegistrationData,\r\n  LoginResponse\r\n} from '../types/auth.types'\r\n\r\nconst { API_URL } = config().publicRuntimeConfig\r\n\r\nexport const login = (data: LoginCredentials): Promise<LoginResponse> => new Promise((resolve, reject) => {\r\n  axios.post(`${API_URL}/users/login`, data)\r\n    .then(res => resolve(res.data))\r\n    .catch(err => reject(err.response))\r\n})\r\n\r\nexport const register = (data: RegistrationData) => new Promise((resolve, reject) => {\r\n  axios.post(`${API_URL}/users`, data)\r\n    .then(res => resolve(res.data))\r\n    .catch(err => reject(err.response))\r\n})\r\n\r\nexport const logout = () => new Promise((resolve, reject) => {\r\n  axios.post(`${API_URL}/users/logout`, {}, {\r\n    headers: { Authorization: Cookie.get('id') }\r\n  })\r\n    .then(res => resolve(res.data))\r\n    .catch(err => reject(err))\r\n})\r\n\r\nexport const deleteCookie = () => {\r\n  Cookie.remove('id')\r\n  Cookie.remove('ttl')\r\n  Cookie.remove('userId')\r\n  Cookie.remove('created')\r\n}\r\n\r\nexport const saveLoginData = (data: LoginResponse) => {\r\n  Object.keys(data)\r\n    .forEach(key => {\r\n      Cookie.set(key, data[key])\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}