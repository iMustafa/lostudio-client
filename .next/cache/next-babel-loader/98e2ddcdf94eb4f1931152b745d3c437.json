{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\datasources\\\\AddDatasource.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport SearchInput from '../SearchInput';\nimport DBItem from './AddDatasourceItem';\nimport Datasources from './datasources';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport AddMongoDBDataSource from './add/mongodb';\nimport AddPosgreSQLDataSource from './add/postgresql';\nimport AddMsSQLDataSource from './add/mssql';\nimport AddMySQLDataSource from './add/mysql';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      marginTop: '25px'\n    },\n    cardBody: {\n      padding: '10px'\n    },\n    cardTitle: {\n      fontSize: '12px',\n      backgroundColor: '#3F51B5',\n      padding: '3px 3px 3px 6px',\n      color: '#FFF',\n      fontFamily: [\"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"]\n    },\n    gridStyles: {\n      margin: '10px 0 5px 0',\n      width: '100%'\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3)\n    }\n  };\n});\n\nvar AddDatasource = function AddDatasource() {\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState(''),\n      type = _useState2[0],\n      setType = _useState2[1];\n\n  var handleOpen = function handleOpen(type) {\n    setType(type);\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var onClick = function onClick(type, _) {\n    handleOpen(type);\n  };\n\n  var returnDialog = function returnDialog($type) {\n    switch ($type) {\n      case 'mongodb':\n        return __jsx(AddMongoDBDataSource, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n\n      case 'mssql':\n        return __jsx(AddMsSQLDataSource, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n\n      case 'postgresql':\n        return __jsx(AddPosgreSQLDataSource, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n\n      case 'mysql':\n        return __jsx(AddMySQLDataSource, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n    }\n  };\n\n  return __jsx(Card, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Add a New Data Source\"), __jsx(\"div\", {\n    className: classes.cardBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(SearchInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.gridStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, Datasources.map(function (datasource) {\n    return __jsx(Grid, {\n      item: true,\n      xs: 3,\n      key: datasource.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(DBItem, {\n      onClick: onClick,\n      name: datasource.name,\n      type: datasource.type || datasource.name.toLowerCase().replace(/\\s/g, '-'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  })), __jsx(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(Fade, {\n    \"in\": open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, returnDialog(type)))));\n};\n\nexport default AddDatasource;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/datasources/AddDatasource.jsx"],"names":["useState","makeStyles","Card","Grid","SearchInput","DBItem","Datasources","Modal","Backdrop","Fade","AddMongoDBDataSource","AddPosgreSQLDataSource","AddMsSQLDataSource","AddMySQLDataSource","useStyles","theme","root","marginTop","cardBody","padding","cardTitle","fontSize","backgroundColor","color","fontFamily","gridStyles","margin","width","modal","display","alignItems","justifyContent","paper","palette","background","border","boxShadow","shadows","spacing","AddDatasource","classes","open","setOpen","type","setType","handleOpen","handleClose","onClick","_","returnDialog","$type","map","datasource","name","toLowerCase","replace","timeout"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport SearchInput from '../SearchInput'\r\nimport DBItem from './AddDatasourceItem'\r\nimport Datasources from './datasources'\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport AddMongoDBDataSource from './add/mongodb'\r\nimport AddPosgreSQLDataSource from './add/postgresql'\r\nimport AddMsSQLDataSource from './add/mssql'\r\nimport AddMySQLDataSource from './add/mysql'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: '25px'\r\n  },\r\n  cardBody: {\r\n    padding: '10px'\r\n  },\r\n  cardTitle: {\r\n    fontSize: '12px',\r\n    backgroundColor: '#3F51B5',\r\n    padding: '3px 3px 3px 6px',\r\n    color: '#FFF',\r\n    fontFamily: [\"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"]\r\n  },\r\n  gridStyles: {\r\n    margin: '10px 0 5px 0',\r\n    width: '100%'\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst AddDatasource = () => {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = useState(false)\r\n  const [type, setType] = useState('')\r\n\r\n  const handleOpen = (type) => {\r\n    setType(type)\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const onClick = (type, _) => {\r\n    handleOpen(type)\r\n  }\r\n\r\n  const returnDialog = ($type) => {\r\n    switch ($type) {\r\n      case 'mongodb':\r\n        return <AddMongoDBDataSource />\r\n      case 'mssql':\r\n        return <AddMsSQLDataSource />\r\n      case 'postgresql':\r\n        return <AddPosgreSQLDataSource />\r\n      case 'mysql':\r\n        return <AddMySQLDataSource />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.cardTitle}>\r\n        Add a New Data Source\r\n      </div>\r\n      <div className={classes.cardBody}>\r\n        <SearchInput />\r\n        <Grid container spacing={2} className={classes.gridStyles}>\r\n          {Datasources.map(datasource => (\r\n            <Grid item xs={3} key={datasource.name}>\r\n              <DBItem onClick={onClick} name={datasource.name} type={datasource.type || datasource.name.toLowerCase().replace(/\\s/g, '-')} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={open}>\r\n            {returnDialog(type)}\r\n          </Fade>\r\n        </Modal>\r\n\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\n\r\nexport default AddDatasource;"]},"metadata":{},"sourceType":"module"}