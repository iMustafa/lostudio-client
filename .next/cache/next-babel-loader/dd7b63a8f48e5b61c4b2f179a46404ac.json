{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\widgets\\\\html-elements\\\\accordion\\\\accordion-widget.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: '33.33%',\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary\n    }\n  };\n});\n\nvar AccordionWidget = function AccordionWidget(_ref) {\n  var widgetId = _ref.widgetId;\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      widget = _useState4[0],\n      setWidget = _useState4[1];\n\n  var _useState5 = useState({\n    right: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      menuState = _useState6[0],\n      setMenuState = _useState6[1];\n\n  var handleChange = function handleChange(panel) {\n    return function (event, isExpanded) {\n      setExpanded(isExpanded ? panel : false);\n    };\n  };\n\n  useEffect(function () {\n    var getData = function getData() {\n      var $widget;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(WidgetSettingsActions.getWidgetSettingsById(widgetId));\n\n            case 3:\n              $widget = _context.sent;\n              setWidget($widget);\n              return _context.abrupt(\"return\", $widget);\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    };\n\n    getData();\n  }, []);\n\n  var expansionPanelItem = function expansionPanelItem(_ref2) {\n    var id = _ref2.id,\n        title = _ref2.title,\n        description = _ref2.description,\n        innerHTML = _ref2.innerHTML,\n        text = _ref2.text;\n    return __jsx(ExpansionPanel, {\n      expanded: expanded === id,\n      onChange: handleChange(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(ExpansionPanelSummary, {\n      expandIcon: __jsx(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(Typography, {\n      className: classes.heading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, title), __jsx(Typography, {\n      className: classes.secondaryHeading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, description)), __jsx(ExpansionPanelDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, text)));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, expansionPanelItem({\n    id: 1,\n    title: 'Test',\n    description: 'Description',\n    text: \"Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer sit amet egestas eros, vitae egestas augue. Duis vel est augue.\"\n  }));\n};\n\nexport default AccordionWidget;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/widgets/html-elements/accordion/accordion-widget.jsx"],"names":["React","makeStyles","ExpansionPanel","ExpansionPanelDetails","ExpansionPanelSummary","Typography","ExpandMoreIcon","useStyles","theme","root","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","AccordionWidget","widgetId","classes","useState","expanded","setExpanded","widget","setWidget","right","menuState","setMenuState","handleChange","panel","event","isExpanded","useEffect","getData","WidgetSettingsActions","getWidgetSettingsById","$widget","console","log","expansionPanelItem","id","title","description","innerHTML"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}))\r\n\r\nconst AccordionWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [expanded, setExpanded] = useState(false)\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  const expansionPanelItem = ({ id, title, description, innerHTML, text }) => {\r\n    return (\r\n      <ExpansionPanel expanded={expanded === id} onChange={handleChange(id)}>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography className={classes.heading}>{title}</Typography>\r\n          <Typography className={classes.secondaryHeading}>{description}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            {text}\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {expansionPanelItem({\r\n        id: 1,\r\n        title: 'Test',\r\n        description: 'Description',\r\n        text: \"Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer sit amet egestas eros, vitae egestas augue. Duis vel est augue.\"\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccordionWidget"]},"metadata":{},"sourceType":"module"}