{"ast":null,"code":"import grapesjs from 'grapesjs';\nimport loadComponents from './components';\nimport loadBlocks from './blocks';\nimport loadCommands from './commands';\nimport loadPanels from './panels';\nimport parserHtmlCaseSensitive from './ParserHtmlCaseSensitive';\nimport { ChartPluginRef } from './consts';\nexport default function addChartPlugin() {\n  grapesjs.plugins.add(ChartPluginRef, (editor, opts = {}) => {\n    editor.TraitManager.addType('pre', {\n      noLabel: true,\n\n      getInputEl() {\n        const {\n          model\n        } = this;\n        const {\n          text\n        } = model.props();\n        const label = text;\n        const input = `<div type=\"text\" style=\"font-size: 1rem; line-height:30px; margin:10px; word-wrap: break-word; width: 180px;\">${label}</div>`;\n        return input;\n      }\n\n    });\n    let c = opts;\n    let defaults = {\n      blocks: [ChartPluginRef],\n      blockLabel: 'Charts',\n      blockCategory: 'Extra',\n      defaultStyle: true\n    };\n    console.log(defaults);\n\n    for (let name in defaults) {\n      if (!(name in c)) c[name] = defaults[name];\n    }\n\n    loadComponents(editor, c);\n    loadBlocks(editor, c);\n    loadCommands(editor, c);\n    loadPanels(editor, c);\n    const em = editor.getModel();\n    const emConf = em.get('Config');\n    emConf.textTags = ['br', 'b', 'i', 'u', 'a', 'ul', 'ol'];\n    em.get('Parser').parserHtml = parserHtmlCaseSensitive(emConf);\n\n    em.get('Parser').parseHtml = str => {\n      const pHtml = em.get('Parser').parserHtml;\n      pHtml.compTypes = em.get('DomComponents').getTypes();\n      let res = pHtml.parse(str, em.get('Parser').parserCss);\n      return res;\n    };\n\n    editor.on(\"load\", () => {\n      const openBl = editor.Panels.getButton('views', 'open-blocks');\n      openBl && openBl.set('active', 1);\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"module"}