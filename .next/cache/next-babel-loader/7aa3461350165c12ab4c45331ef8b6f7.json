{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/helpers/connection-settings/database-connection.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DataSourceActions from '../../../../actions/datasource.actions';\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    list: {\n      width: 500,\n      paddingLeft: \"15px\",\n      paddingRight: \"15px\",\n      paddingTop: \"15px\"\n    },\n    h2: {\n      width: '100%',\n      textAlign: 'center',\n      borderBottom: '1px solid #000',\n      lineHeight: '0.1em',\n      marginTop: \"20px\",\n      marginBottom: \"20px\",\n      fontFamily: 'Roboto',\n      fontSize: '13px',\n      color: \"#3F51B5\"\n    },\n    span: {\n      background: '#fff',\n      padding: '0 10px'\n    },\n    formControl: {\n      marginTop: \"15px\"\n    }\n  };\n});\n\nvar DatabaseConnection = function DatabaseConnection(_ref) {\n  var isAdding = _ref.isAdding,\n      setDoc = _ref.setDoc,\n      setDatasource = _ref.setDatasource,\n      setFields = _ref.setFields,\n      doc = _ref.doc,\n      datasource = _ref.datasource,\n      fields = _ref.fields;\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      datasources = _useState[0],\n      setDatasources = _useState[1];\n\n  var _useState2 = useState([]),\n      docList = _useState2[0],\n      setDocList = _useState2[1];\n\n  var _useState3 = useState([]),\n      fieldList = _useState3[0],\n      setFieldList = _useState3[1];\n\n  var _useState4 = useState({}),\n      query = _useState4[0],\n      setQuery = _useState4[1];\n\n  console.log(doc, datasource, fields);\n\n  var getDatasources = function getDatasources() {\n    var $datasources, $docList, $fieldList;\n    return _regeneratorRuntime.async(function getDatasources$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(DataSourceActions.getDatasources({}));\n\n          case 3:\n            $datasources = _context.sent;\n\n            if (isAdding) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(DataSourceActions.getDocList(datasource));\n\n          case 7:\n            $docList = _context.sent;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(DataSourceActions.getFieldList(datasource, doc));\n\n          case 10:\n            $fieldList = _context.sent;\n            setDocList($docList);\n            setFieldList($fieldList);\n\n          case 13:\n            setDatasources($datasources);\n            return _context.abrupt(\"return\", $datasources);\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  };\n\n  var getDocList = function getDocList(id) {\n    var $docList;\n    return _regeneratorRuntime.async(function getDocList$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            setDatasource(id);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(DataSourceActions.getDocList(id));\n\n          case 4:\n            $docList = _context2.sent;\n            setDocList($docList);\n            return _context2.abrupt(\"return\", $docList);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var getFieldList = function getFieldList(id, docId) {\n    var $fieldList;\n    return _regeneratorRuntime.async(function getFieldList$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            setDoc(docId);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(DataSourceActions.getFieldList(id, docId));\n\n          case 4:\n            $fieldList = _context3.sent;\n            setFieldList($fieldList);\n            return _context3.abrupt(\"return\", $fieldList);\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var handleDatasourceChange = function handleDatasourceChange(event) {\n    var value;\n    return _regeneratorRuntime.async(function handleDatasourceChange$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            value = event.target.value;\n            setFieldList([]);\n            setFields([]);\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(getDocList(value));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleDocChange = function handleDocChange(event) {\n    var value;\n    return _regeneratorRuntime.async(function handleDocChange$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            value = event.target.value;\n            setFieldList([]);\n            setFields([]);\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(getFieldList(datasource, value));\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleFieldChange = function handleFieldChange(name) {\n    return function (event) {\n      var checked = event.target.checked;\n      checked ? setFields([].concat(_toConsumableArray(fields), [name])) : setFields(fields.filter(function (field) {\n        return field != name;\n      }));\n    };\n  };\n\n  var renderFieldSettings = function renderFieldSettings() {\n    return fieldList.length ? __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 57\n      }\n    }, __jsx(\"h2\", {\n      className: classes.h2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }\n    }, __jsx(\"span\", {\n      className: classes.span,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, \"Fields Settings\")), fieldList.map(function (field) {\n      return __jsx(FormControlLabel, {\n        key: field,\n        control: __jsx(Checkbox, {\n          checked: fields.includes(field),\n          onChange: handleFieldChange(field),\n          value: field,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 9\n          }\n        }),\n        label: field,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 30\n        }\n      });\n    }), __jsx(FormControl, {\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }\n    }, __jsx(InputLabel, {\n      id: \"primary-key\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, \"Primary Key\"), __jsx(Select, {\n      name: \"primaryKey\",\n      labelId: \"primary-key\",\n      value: primaryKey,\n      onChange: function onChange(event) {\n        return setPrimaryKey(event.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, fields.map(function (item) {\n      return __jsx(MenuItem, {\n        key: item,\n        value: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 30\n        }\n      }, item);\n    })))) : __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    });\n  };\n\n  var renderQuerySettings = function renderQuerySettings() {\n    return fields.length ? __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 54\n      }\n    }, __jsx(\"h2\", {\n      className: classes.h2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 5\n      }\n    }, __jsx(\"span\", {\n      className: classes.span,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, \"Query Settings\")), fields.map(function (field) {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 27\n        }\n      });\n    })) : __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    });\n  };\n\n  useEffect(function () {\n    getDatasources();\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \"Connection Settings\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"data-source\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, \"Data Source\"), __jsx(Select, {\n    name: \"datasource\",\n    labelId: \"data-source\",\n    value: datasource,\n    onChange: handleDatasourceChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, datasources.map(function (item) {\n    return __jsx(MenuItem, {\n      key: item.id,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }, item.title);\n  }))), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    disabled: datasource ? false : true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"doc-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, \"Table/Collection\"), __jsx(Select, {\n    name: \"docList\",\n    labelId: \"doc-list\",\n    value: doc,\n    onChange: handleDocChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, docList.map(function (item) {\n    return __jsx(MenuItem, {\n      key: item,\n      value: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 33\n      }\n    }, item);\n  }))), renderFieldSettings(), renderQuerySettings());\n};\n\nexport default DatabaseConnection;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/helpers/connection-settings/database-connection.jsx"],"names":["useState","useEffect","makeStyles","Button","InputLabel","MenuItem","FormControl","Input","Select","FormControlLabel","Checkbox","DataSourceActions","WidgetSettingsActions","useStyles","theme","list","width","paddingLeft","paddingRight","paddingTop","h2","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","formControl","DatabaseConnection","isAdding","setDoc","setDatasource","setFields","doc","datasource","fields","classes","datasources","setDatasources","docList","setDocList","fieldList","setFieldList","query","setQuery","console","log","getDatasources","$datasources","getDocList","$docList","getFieldList","$fieldList","id","docId","handleDatasourceChange","event","value","target","handleDocChange","handleFieldChange","name","checked","filter","field","renderFieldSettings","length","map","includes","primaryKey","setPrimaryKey","item","renderQuerySettings","title"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport Select from '@material-ui/core/Select'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport DataSourceActions from '../../../../actions/datasource.actions'\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}))\n\nconst DatabaseConnection = ({\n  isAdding,\n  setDoc,\n  setDatasource,\n  setFields,\n  doc,\n  datasource,\n  fields\n}) => {\n  const classes = useStyles()\n  const [datasources, setDatasources] = useState([])\n  const [docList, setDocList] = useState([])\n  const [fieldList, setFieldList] = useState([])\n  const [query, setQuery] = useState({})\n\n  console.log(doc, datasource, fields)\n\n  const getDatasources = async () => {\n    try {\n      const $datasources = await DataSourceActions.getDatasources({})\n      if (!isAdding) {\n        const $docList = await DataSourceActions.getDocList(datasource)\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\n        setDocList($docList)\n        setFieldList($fieldList)\n      }\n      setDatasources($datasources)\n      return $datasources\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getDocList = async (id) => {\n    try {\n      setDatasource(id)\n      const $docList = await DataSourceActions.getDocList(id)\n      setDocList($docList)\n      return $docList\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getFieldList = async (id, docId) => {\n    try {\n      setDoc(docId)\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\n      setFieldList($fieldList)\n      return $fieldList\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const handleDatasourceChange = async (event) => {\n    const { value } = event.target\n    setFieldList([])\n    setFields([])\n    await getDocList(value)\n  }\n\n  const handleDocChange = async (event) => {\n    const { value } = event.target\n    setFieldList([])\n    setFields([])\n    await getFieldList(datasource, value)\n  }\n\n  const handleFieldChange = name => event => {\n    const { checked } = event.target\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name))\n  }\n\n  const renderFieldSettings = () => fieldList.length ? (<div>\n    <h2 className={classes.h2}>\n      <span className={classes.span}>Fields Settings</span>\n    </h2>\n\n    {fieldList.map(field => (<FormControlLabel\n      key={field}\n      control={\n        <Checkbox checked={fields.includes(field)} onChange={handleFieldChange(field)} value={field} />\n      }\n      label={field}\n    />))}\n\n    <FormControl fullWidth>\n      <InputLabel id=\"primary-key\">Primary Key</InputLabel>\n      <Select\n        name=\"primaryKey\"\n        labelId=\"primary-key\"\n        value={primaryKey}\n        onChange={event => setPrimaryKey(event.target.value)}\n      >\n        {fields.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\n      </Select>\n    </FormControl>\n  </div>) : <div></div>\n\n  const renderQuerySettings = () => fields.length ? (<div>\n    <h2 className={classes.h2}>\n      <span className={classes.span}>Query Settings</span>\n    </h2>\n\n    {fields.map(field => (<div>\n\n    </div>))}\n  </div>) : <div></div>\n\n  useEffect(() => {\n    getDatasources()\n  }, [])\n\n  return (\n    <div>\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Connection Settings</span>\n      </h2>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel id=\"data-source\">Data Source</InputLabel>\n        <Select\n          name=\"datasource\"\n          labelId=\"data-source\"\n          value={datasource}\n          onChange={handleDatasourceChange}\n        >\n          {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\n        <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\n        <Select\n          name=\"docList\"\n          labelId=\"doc-list\"\n          value={doc}\n          onChange={handleDocChange}\n        >\n          {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\n        </Select>\n      </FormControl>\n\n      {renderFieldSettings()}\n\n      {renderQuerySettings()}\n\n    </div>\n  )\n}\n\nexport default DatabaseConnection"]},"metadata":{},"sourceType":"module"}