{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\widgets\\\\html-elements\\\\accordion\\\\accordion-widget.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst AccordionWidget = ({\n  widgetId\n}) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const [widget, setWidget] = useState(null);\n  const [menuState, setMenuState] = useState({\n    right: false\n  });\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId);\n        setWidget($widget);\n        return $widget;\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getData();\n  }, []);\n\n  const expansionPanelItem = ({\n    id,\n    title,\n    description,\n    innerHTML,\n    text\n  }) => {\n    return __jsx(ExpansionPanel, {\n      expanded: expanded === id,\n      onChange: handleChange(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(ExpansionPanelSummary, {\n      expandIcon: __jsx(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(Typography, {\n      className: classes.heading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, title), __jsx(Typography, {\n      className: classes.secondaryHeading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, description)), __jsx(ExpansionPanelDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, text)));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, expansionPanelItem({\n    id: 1,\n    title: 'Test',\n    description: 'Description',\n    text: \"Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer sit amet egestas eros, vitae egestas augue. Duis vel est augue.\"\n  }));\n};\n\nexport default AccordionWidget;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/widgets/html-elements/accordion/accordion-widget.jsx"],"names":["React","makeStyles","ExpansionPanel","ExpansionPanelDetails","ExpansionPanelSummary","Typography","ExpandMoreIcon","useStyles","theme","root","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","AccordionWidget","widgetId","classes","expanded","setExpanded","useState","widget","setWidget","menuState","setMenuState","right","handleChange","panel","event","isExpanded","useEffect","getData","$widget","WidgetSettingsActions","getWidgetSettingsById","e","console","log","expansionPanelItem","id","title","description","innerHTML"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADiC;AAIvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEJ,KAAK,CAACK,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CADH;AAEPC,IAAAA,SAAS,EAAE,QAFJ;AAGPC,IAAAA,UAAU,EAAE;AAHL,GAJ8B;AASvCC,EAAAA,gBAAgB,EAAE;AAChBL,IAAAA,QAAQ,EAAEJ,KAAK,CAACK,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CADM;AAEhBI,IAAAA,KAAK,EAAEV,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmBC;AAFV;AATqB,CAAZ,CAAD,CAA5B;;AAeA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACxC,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBF,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC;AAAEK,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA1C;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACrDV,IAAAA,WAAW,CAACU,UAAU,GAAGF,KAAH,GAAW,KAAtB,CAAX;AACD,GAFD;;AAIAG,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,OAAO,GAAG,YAAY;AAC1B,UAAI;AACF,cAAMC,OAAO,GAAG,MAAMC,qBAAqB,CAACC,qBAAtB,CAA4ClB,QAA5C,CAAtB;AACAM,QAAAA,SAAS,CAACU,OAAD,CAAT;AACA,eAAOA,OAAP;AACD,OAJD,CAIE,OAAOG,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,KARD;;AASAJ,IAAAA,OAAO;AACR,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMO,kBAAkB,GAAG,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,WAAb;AAA0BC,IAAAA,SAA1B;AAAqC7B,IAAAA;AAArC,GAAD,KAAiD;AAC1E,WACE,MAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEK,QAAQ,KAAKqB,EAAvC;AAA2C,MAAA,QAAQ,EAAEb,YAAY,CAACa,EAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,qBAAD;AAAuB,MAAA,UAAU,EAAE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,MAAA,SAAS,EAAEtB,OAAO,CAACb,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCoC,KAAzC,CADF,EAEE,MAAC,UAAD;AAAY,MAAA,SAAS,EAAEvB,OAAO,CAACP,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkD+B,WAAlD,CAFF,CADF,EAKE,MAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG5B,IADH,CADF,CALF,CADF;AAaD,GAdD;;AAgBA,SACE;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACf,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGoC,kBAAkB,CAAC;AAClBC,IAAAA,EAAE,EAAE,CADc;AAElBC,IAAAA,KAAK,EAAE,MAFW;AAGlBC,IAAAA,WAAW,EAAE,aAHK;AAIlB5B,IAAAA,IAAI,EAAE;AAJY,GAAD,CADrB,CADF;AAUD,CAjDD;;AAmDA,eAAeE,eAAf","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}))\r\n\r\nconst AccordionWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [expanded, setExpanded] = useState(false)\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  const expansionPanelItem = ({ id, title, description, innerHTML, text }) => {\r\n    return (\r\n      <ExpansionPanel expanded={expanded === id} onChange={handleChange(id)}>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography className={classes.heading}>{title}</Typography>\r\n          <Typography className={classes.secondaryHeading}>{description}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            {text}\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {expansionPanelItem({\r\n        id: 1,\r\n        title: 'Test',\r\n        description: 'Description',\r\n        text: \"Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer sit amet egestas eros, vitae egestas augue. Duis vel est augue.\"\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccordionWidget"]},"metadata":{},"sourceType":"module"}