{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/dashboards/list-dashboards.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport DashbordItem from \"./dashboard-item\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddDashboardCard from \"./add-dashboard-card\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: \"25px\"\n  },\n  cardBody: {\n    padding: \"10px\"\n  },\n  cardTitle: {\n    fontSize: \"12px\",\n    backgroundColor: \"#3F51B5\",\n    padding: \"3px 3px 3px 6px\",\n    color: \"#FFF\",\n    fontFamily: [\"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"]\n  },\n  emptyCardBody: {\n    padding: 10,\n    height: 200,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    alignItems: \"center\"\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\"\n    },\n    borderBottom: \"1px solid #DEDEDE\",\n    marginTop: 10,\n    marginBottom: 15\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 200\n    }\n  }\n}));\n\nconst ListDashboards = ({\n  dashboards,\n  title,\n  type,\n  dashboardType,\n  reloadChanges\n}) => {\n  const classes = useStyles();\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState(null);\n  const {\n    0: showAddDashbaord,\n    1: setShowAddDialog\n  } = useState(false);\n\n  const handleChange = event => {\n    setSearchValue(event.target.value);\n  };\n\n  return __jsx(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.cardTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"div\", {\n    className: classes.search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.searchIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), __jsx(InputBase, {\n    fullWidth: true,\n    placeholder: \"Search\\u2026\",\n    onChange: handleChange,\n    classes: {\n      root: classes.inputRoot,\n      input: classes.inputInput\n    },\n    inputProps: {\n      \"aria-label\": \"search\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })), dashboards.length ? __jsx(\"div\", {\n    className: classes.cardBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(AddDashboardCard, {\n    type: dashboardType,\n    reloadChanges: reloadChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  })), dashboards.filter(dashboard => {\n    const regex = new RegExp(searchValue, \"g\");\n    return searchValue ? regex.test(dashboard.title) : true;\n  }).map((dashboard, index) => {\n    const {\n      title,\n      description,\n      id,\n      permissions\n    } = dashboard;\n    const $type = dashboard.type;\n    return __jsx(Grid, {\n      item: true,\n      xs: 3,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, __jsx(DashbordItem, {\n      type: $type,\n      title: title,\n      description: description,\n      id: id,\n      permissions: permissions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }));\n  }))) : showAddDashbaord ? __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, __jsx(AddDashboardCard, {\n    type: dashboardType,\n    reloadChanges: reloadChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }))) : __jsx(\"div\", {\n    className: classes.emptyCardBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, __jsx(DashboardIcon, {\n    style: {\n      color: \"#DDD\",\n      fontSize: 128\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), __jsx(Typography, {\n    style: {\n      color: \"#DDD\",\n      fontSize: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"No dashboards found.\")), __jsx(Typography, {\n    style: {\n      color: \"#DDD\",\n      fontSize: 18\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, type == \"personal\" ? \"Create a new dashboard to be displayed here.\" : \"When a corporation adds you to collaborate on their dashboards, they will appear here.\"), type == \"personal\" && __jsx(\"div\", {\n    style: {\n      marginTop: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: () => {\n      setShowAddDialog(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, \"Get Started\"))));\n};\n\nexport default ListDashboards;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/dashboards/list-dashboards.jsx"],"names":["useState","makeStyles","fade","Grid","Card","Button","DashbordItem","DashboardIcon","Typography","AddDashboardCard","SearchIcon","InputBase","useStyles","theme","root","marginTop","cardBody","padding","cardTitle","fontSize","backgroundColor","color","fontFamily","emptyCardBody","height","display","flexDirection","justifyContent","alignContent","alignItems","search","position","borderRadius","shape","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","borderBottom","marginBottom","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","ListDashboards","dashboards","title","type","dashboardType","reloadChanges","classes","searchValue","setSearchValue","showAddDashbaord","setShowAddDialog","handleChange","event","target","value","input","length","filter","dashboard","regex","RegExp","test","map","index","description","id","permissions","$type"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport DashbordItem from \"./dashboard-item\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddDashboardCard from \"./add-dashboard-card\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"25px\",\n  },\n  cardBody: {\n    padding: \"10px\",\n  },\n  cardTitle: {\n    fontSize: \"12px\",\n    backgroundColor: \"#3F51B5\",\n    padding: \"3px 3px 3px 6px\",\n    color: \"#FFF\",\n    fontFamily: [\"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"],\n  },\n  emptyCardBody: {\n    padding: 10,\n    height: 200,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n    borderBottom: \"1px solid #DEDEDE\",\n    marginTop: 10,\n    marginBottom: 15,\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 200,\n    },\n  },\n}));\n\nconst ListDashboards = ({\n  dashboards,\n  title,\n  type,\n  dashboardType,\n  reloadChanges,\n}) => {\n  const classes = useStyles();\n  const [searchValue, setSearchValue] = useState(null);\n  const [showAddDashbaord, setShowAddDialog] = useState(false);\n\n  const handleChange = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.cardTitle}>{title}</div>\n      <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          fullWidth\n          placeholder=\"Search…\"\n          onChange={handleChange}\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ \"aria-label\": \"search\" }}\n        />\n      </div>\n      {dashboards.length ? (\n        <div className={classes.cardBody}>\n          <Grid container spacing={2}>\n            <Grid item xs={3}>\n              <AddDashboardCard\n                type={dashboardType}\n                reloadChanges={reloadChanges}\n              />\n            </Grid>\n            {dashboards\n              .filter((dashboard) => {\n                const regex = new RegExp(searchValue, \"g\");\n                return searchValue ? regex.test(dashboard.title) : true;\n              })\n              .map((dashboard, index) => {\n                const { title, description, id, permissions } = dashboard;\n                const $type = dashboard.type;\n                return (\n                  <Grid item xs={3} key={index}>\n                    <DashbordItem\n                      type={$type}\n                      title={title}\n                      description={description}\n                      id={id}\n                      permissions={permissions}\n                    />\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </div>\n      ) : showAddDashbaord ? (\n        <Grid container spacing={2}>\n          <Grid item xs={3}>\n            <AddDashboardCard\n              type={dashboardType}\n              reloadChanges={reloadChanges}\n            />\n          </Grid>\n        </Grid>\n      ) : (\n        <div className={classes.emptyCardBody}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <DashboardIcon style={{ color: \"#DDD\", fontSize: 128 }} />\n            <Typography style={{ color: \"#DDD\", fontSize: 32 }}>\n              No dashboards found.\n            </Typography>\n          </div>\n          <Typography style={{ color: \"#DDD\", fontSize: 18 }}>\n            {type == \"personal\"\n              ? \"Create a new dashboard to be displayed here.\"\n              : \"When a corporation adds you to collaborate on their dashboards, they will appear here.\"}\n          </Typography>\n          {type == \"personal\" && (\n            <div style={{ marginTop: 5 }}>\n              <Button onClick={() => {setShowAddDialog(true)}}>Get Started</Button>\n            </div>\n          )}\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default ListDashboards;\n"]},"metadata":{},"sourceType":"module"}