{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nvar _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\pages\\\\datasources\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Cookies from 'next-cookies';\nimport DatasourceActions from '../../actions/datasource.actions';\nimport SideMenu from '../../components/SideMenu';\nvar useStyles = makeStyles(function (theme) {\n  return {};\n});\n\nvar Datasources = function Datasources(_Datasources) {\n  var classes = useStyles();\n\n  var renderDatasource = function renderDatasource() {\n    return _Object$values(_Datasources).map(function (datasource) {});\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(SideMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })) // <div className={'container-fluid'}>\n  //   <AddDataSource />\n  //   <ListDatasource datasources={Datasources} />\n  // </div>\n  ;\n};\n\nDatasources.getInitialProps = function _callee(req) {\n  var Authorization, _Datasources2;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          Authorization = Cookies(req).id;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(DatasourceActions.getDatasources({\n            Authorization: Authorization\n          }));\n\n        case 4:\n          _Datasources2 = _context.sent;\n          return _context.abrupt(\"return\", _Datasources2);\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", []);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexport default Datasources;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/pages/datasources/index.tsx"],"names":["React","makeStyles","Cookies","DatasourceActions","SideMenu","useStyles","theme","Datasources","classes","renderDatasource","map","datasource","getInitialProps","req","Authorization","id","getDatasources"],"mappings":";;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,OAAOC,iBAAP,MAA8B,kCAA9B;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AAIA,IAAMC,SAAS,GAAGJ,UAAU,CAAC,UAAAK,KAAK;AAAA,SAAK,EAAL;AAAA,CAAN,CAA5B;;AAIA,IAAMC,WAAwC,GAAG,qBAACA,YAAD,EAAoC;AACnF,MAAMC,OAAO,GAAGH,SAAS,EAAzB;;AAEA,MAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WAAM,eAAcF,YAAd,EAA2BG,GAA3B,CAA+B,UAAAC,UAAU,EAAI,CAE3E,CAF8B,CAAN;AAAA,GAAzB;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAIE;AACA;AACA;AACA;AAPF;AASD,CAhBD;;AAkBAJ,WAAW,CAACK,eAAZ,GAA8B,iBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEpBC,UAAAA,aAFoB,GAEJZ,OAAO,CAACW,GAAD,CAAP,CAAaE,EAFT;AAAA;AAAA,2CAGAZ,iBAAiB,CAACa,cAAlB,CAAiC;AAAEF,YAAAA,aAAa,EAAbA;AAAF,WAAjC,CAHA;;AAAA;AAGpBP,UAAAA,aAHoB;AAAA,2CAInBA,aAJmB;;AAAA;AAAA;AAAA;AAAA,2CAMnB,EANmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AAUA,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Cookies from 'next-cookies'\r\nimport { NextPage } from 'next';\r\nimport DatasourceActions from '../../actions/datasource.actions'\r\nimport Datasource from '../../types/datasource.types';\r\nimport SideMenu from '../../components/SideMenu'\r\nimport AddDataSource from '../../components/datasources/AddDatasource'\r\nimport ListDatasource from '../../components/datasources/ListDatasources'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}));\r\n\r\nconst Datasources: NextPage<Array<Datasource>> = (Datasources: Array<Datasource>) => {\r\n  const classes = useStyles()\r\n\r\n  const renderDatasource = () => Object.values(Datasources).map(datasource => {\r\n\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <SideMenu />\r\n    </div>\r\n    // <div className={'container-fluid'}>\r\n    //   <AddDataSource />\r\n    //   <ListDatasource datasources={Datasources} />\r\n    // </div>\r\n  )\r\n}\r\n\r\nDatasources.getInitialProps = async (req): Promise<Array<Datasource>> => {\r\n  try {\r\n    const Authorization = Cookies(req).id\r\n    const Datasources = await DatasourceActions.getDatasources({ Authorization })\r\n    return Datasources\r\n  } catch (e) {\r\n    return []\r\n  }\r\n}\r\n\r\nexport default Datasources"]},"metadata":{},"sourceType":"module"}