{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SystemWidgets from './system-widgets';\nimport MyWidgets from './my-widgets';\n\nvar TabPanel = function TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"full-width-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"full-width-tab-\".concat(index)\n  }, other), value === index && __jsx(Box, {\n    p: 3\n  }, children));\n};\n\nvar a11yProps = function a11yProps(index) {\n  return {\n    id: \"full-width-tab-\".concat(index),\n    'aria-controls': \"full-width-tabpanel-\".concat(index)\n  };\n};\n\nvar useStyles = makeStyles(function () {\n  return {};\n});\n\nvar WidgetSidemenu = function WidgetSidemenu(_ref) {\n  var onWidgetClick = _ref.onWidgetClick,\n      widgetSettings = _ref.widgetSettings,\n      addPredefinedWidget = _ref.addPredefinedWidget;\n  var classes = useStyles();\n\n  var _useState = useState(0),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  return __jsx(\"div\", null, __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\"\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    \"aria-label\": \"full width tabs example\"\n  }, __jsx(Tab, _extends({\n    label: \"System Widgets\"\n  }, a11yProps(0))), __jsx(Tab, _extends({\n    label: \"My Widgets\"\n  }, a11yProps(1))))), __jsx(\"div\", {\n    index: value\n  }, __jsx(TabPanel, {\n    value: value,\n    index: 0\n  }, __jsx(SystemWidgets, {\n    onWidgetClick: onWidgetClick\n  })), __jsx(TabPanel, {\n    value: value,\n    index: 1\n  }, __jsx(MyWidgets, {\n    addPredefinedWidget: addPredefinedWidget,\n    widgetSettings: widgetSettings\n  }))));\n};\n\nexport default WidgetSidemenu;","map":null,"metadata":{},"sourceType":"module"}