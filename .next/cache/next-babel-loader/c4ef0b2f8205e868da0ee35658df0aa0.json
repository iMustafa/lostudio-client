{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/grapes/table-widgets/html-table-widget/Material.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\n\nclass Material extends React.Component {\n  render() {\n    console.log(this.props.data); // const keys = [...new Set([].concat.apply([], this.props.data.map(obj => Object.keys(obj))))]\n    // console.log(keys)\n\n    let f = \"\";\n\n    for (let i = 0, j = 0; i < this.props.data.length && j < 10; i++, j++) {\n      const kee = Object.keys(this.props.data[i]);\n      f = kee;\n    }\n\n    return __jsx(\"table\", {\n      cellspacing: \"0\",\n      cellpadding: \"0\",\n      style: {\n        margin: \"20px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        tableLayout: \"fixed\",\n        whiteSpace: \"normal\",\n        borderRadius: \"15px\",\n        overflow: \"hidden\",\n        boxShadow: \"0 0px 40px 0px rgba(0, 0, 0, 0.15)\",\n        fontSize: \"15px\",\n        color: \"#808080\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, __jsx(\"tr\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"#6c7ae0\",\n        boxShadow: \"0px 0px 9px 0px rgba(0,0,0,0.1)\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, f.map(k => {\n      console.log(f.length);\n      return __jsx(\"th\", {\n        style: {\n          width: `${100 / f.length}%`,\n          padding: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, k);\n    }))), __jsx(\"tbody\", {\n      class: \"Tbody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, this.props.data.map(d => {\n      const values = [];\n      f.forEach(key => {\n        if (typeof d[key] === \"object\" || typeof d[key] === \"undefined\") {\n          d[key] = \"----------\";\n        } else if (d[key] === true) {\n          d[key] = \"true\";\n        } else if (d[key] === false) {\n          d[key] = \"false\";\n        } else if (d[key].length < 1) {\n          d[key] = \"----------\";\n        }\n\n        values.push(d[key]);\n      });\n      console.log(values); // values.map(str => {\n      //     if (typeof str === \"object\") {\n      //         let st = JSON.stringify(str)\n      //         values[1] = st;\n      //     } else if (typeof str === Boolean) {\n      //         return str.toString()\n      //     }\n      //})\n\n      return __jsx(\"tr\", {\n        class: \"Tr-body\",\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-around\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }, values.map(di => {\n        return __jsx(\"td\", {\n          style: {\n            width: `${100 / f.length}%`,\n            wordWrap: \"break-word\",\n            padding: \"10px 0\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }\n        }, di);\n      }));\n    })));\n  }\n\n}\n\nexport default Material;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/grapes/table-widgets/html-table-widget/Material.js"],"names":["React","Material","Component","render","console","log","props","data","f","i","j","length","kee","Object","keys","margin","display","flexDirection","textAlign","tableLayout","whiteSpace","borderRadius","overflow","boxShadow","fontSize","color","justifyContent","backgroundColor","map","k","width","padding","d","values","forEach","key","push","alignItems","di","wordWrap"],"mappings":"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","sourcesContent":["import React from \"react\";\nclass Material extends React.Component {\n  render() {\n    console.log(this.props.data);\n    // const keys = [...new Set([].concat.apply([], this.props.data.map(obj => Object.keys(obj))))]\n    // console.log(keys)\n    let f = \"\";\n    for (let i = 0, j = 0; i < this.props.data.length && j < 10; i++, j++) {\n      const kee = Object.keys(this.props.data[i]);\n      f = kee;\n    }\n    return (\n      <table\n        cellspacing=\"0\"\n        cellpadding=\"0\"\n        style={{\n          margin: \"20px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          textAlign: \"center\",\n          tableLayout: \"fixed\",\n          whiteSpace: \"normal\",\n          borderRadius: \"15px\",\n          overflow: \"hidden\",\n          boxShadow: \"0 0px 40px 0px rgba(0, 0, 0, 0.15)\",\n          fontSize: \"15px\",\n          color: \"#808080\",\n        }}\n      >\n        <thead>\n          <tr\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              backgroundColor: \"#6c7ae0\",\n              boxShadow: \"0px 0px 9px 0px rgba(0,0,0,0.1)\",\n              color: \"white\",\n            }}\n          >\n            {f.map((k) => {\n              console.log(f.length);\n\n              return (\n                <th\n                  style={{\n                    width: `${100 / f.length}%`,\n                    padding: \"15px\",\n                  }}\n                >\n                  {k}\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n        <tbody class=\"Tbody\">\n          {this.props.data.map((d) => {\n            const values = [];\n            f.forEach((key) => {\n              if (typeof d[key] === \"object\" || typeof d[key] === \"undefined\") {\n                d[key] = \"----------\";\n              } else if (d[key] === true) {\n                d[key] = \"true\";\n              } else if (d[key] === false) {\n                d[key] = \"false\";\n              } else if (d[key].length < 1) {\n                d[key] = \"----------\";\n              }\n\n              values.push(d[key]);\n            });\n            console.log(values);\n            // values.map(str => {\n            //     if (typeof str === \"object\") {\n            //         let st = JSON.stringify(str)\n            //         values[1] = st;\n            //     } else if (typeof str === Boolean) {\n            //         return str.toString()\n\n            //     }\n            //})\n            return (\n              <tr\n                class=\"Tr-body\"\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-around\",\n                  alignItems: \"center\",\n                }}\n              >\n                {values.map((di) => {\n                  return (\n                    <td\n                      style={{\n                        width: `${100 / f.length}%`,\n                        wordWrap: \"break-word\",\n                        padding: \"10px 0\",\n                      }}\n                    >\n                      {di}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default Material;\n"]},"metadata":{},"sourceType":"module"}