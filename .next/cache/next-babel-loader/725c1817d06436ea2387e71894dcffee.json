{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport NotificationsActions from '../../actions/notifications.actions';\nimport Typography from '@material-ui/core/Typography';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nconst useStyles = makeStyles(theme => ({\n  gridItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center'\n  },\n  message: {\n    alignSelf: 'flex-start',\n    justifySelf: 'flex-start',\n    fontSize: 14\n  },\n  date: {\n    alignSelf: 'flex-start',\n    fontSize: 12,\n    color: \"#555\"\n  }\n}));\n\nconst NotificationItem = ({\n  notification\n}) => {\n  const classes = useStyles();\n  const {\n    0: isSeen,\n    1: setIsSeen\n  } = useState(notification.seen);\n\n  const decideNotificationIcon = () => {\n    switch (notification.type) {\n      case \"Dashboard Collaboration\":\n        return __jsx(DashboardIcon, null);\n    }\n  };\n\n  const markSeen = async () => {\n    if (!notification.seen) {\n      try {\n        await NotificationsActions.markAsSeen({\n          id: notification.id\n        });\n        setIsSeen(true);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  return __jsx(Card, {\n    onClick: markSeen\n  }, __jsx(Grid, {\n    spacing: 0,\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.gridItem\n  }, decideNotificationIcon()), __jsx(Grid, {\n    item: true,\n    xs: 8,\n    className: classes.gridItem\n  }, __jsx(Typography, {\n    className: classes.message\n  }, notification.message), __jsx(Typography, {\n    className: classes.date\n  }, moment(notification.createdAt).format('YYYY/MM/DD HH:mm'))), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.gridItem\n  }, __jsx(IconButton, {\n    style: {\n      outline: 'none'\n    }\n  }, __jsx(RadioButtonUncheckedIcon, {\n    fontSize: \"small\",\n    style: {\n      color: \"#3F51B5\"\n    }\n  })))));\n};\n\nexport default NotificationItem;","map":null,"metadata":{},"sourceType":"module"}