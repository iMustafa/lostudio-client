{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-widget-settings-panel.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DataSourceActions from '../../../actions/datasource.actions';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}));\n\nconst TableWidgetSettingsPanel = ({\n  widget,\n  handleSettingsClose,\n  isAdding,\n  onWidgetAdd\n}) => {\n  const classes = useStyles();\n  const {\n    0: datasources,\n    1: setDatasources\n  } = useState([]);\n  const {\n    0: datasource,\n    1: setDatasource\n  } = useState(!isAdding ? widget.dataSourceId : '');\n  const {\n    0: docList,\n    1: setDocList\n  } = useState([]);\n  const {\n    0: doc,\n    1: setDoc\n  } = useState(!isAdding ? widget.config.docId : '');\n  const {\n    0: fieldList,\n    1: setFieldList\n  } = useState([]);\n  const {\n    0: fields,\n    1: setFields\n  } = useState(!isAdding ? widget.config.fields : []);\n  const {\n    0: query,\n    1: setQuery\n  } = useState({});\n  const {\n    0: isEditable,\n    1: setIsEditable\n  } = useState(isAdding ? false : widget.config.isEditable);\n  const {\n    0: isDeletable,\n    1: setIsDeletable\n  } = useState(isAdding ? false : widget.config.isDeletable);\n  const {\n    0: isAddable,\n    1: setIsAddable\n  } = useState(isAdding ? false : widget.config.isAddable);\n  const {\n    0: primaryKey,\n    1: setPrimaryKey\n  } = useState(isAdding ? null : widget.config.primaryKey);\n\n  const getDatasources = async () => {\n    try {\n      const $datasources = await DataSourceActions.getDatasources({});\n\n      if (!isAdding) {\n        const $docList = await DataSourceActions.getDocList(datasource);\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc);\n        setDocList($docList);\n        setFieldList($fieldList);\n      }\n\n      setDatasources($datasources);\n      return $datasources;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getDocList = async id => {\n    try {\n      setDatasource(id);\n      const $docList = await DataSourceActions.getDocList(id);\n      setDocList($docList);\n      return $docList;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getFieldList = async (id, docId) => {\n    try {\n      setDoc(docId);\n      const $fieldList = await DataSourceActions.getFieldList(id, docId);\n      setFieldList($fieldList);\n      return $fieldList;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleDatasourceChange = async event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFieldList([]);\n    setFields([]);\n    await getDocList(value);\n  };\n\n  const handleDocChange = async event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFieldList([]);\n    setFields([]);\n    await getFieldList(datasource, value);\n  };\n\n  const handleFieldChange = name => event => {\n    const {\n      checked\n    } = event.target;\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name));\n  };\n\n  const renderFieldSettings = () => fieldList.length ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 57\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"Fields Settings\")), fieldList.map(field => __jsx(FormControlLabel, {\n    key: field,\n    control: __jsx(Checkbox, {\n      checked: fields.includes(field),\n      onChange: handleFieldChange(field),\n      value: field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }),\n    label: field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 30\n    }\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, __jsx(InputLabel, {\n    id: \"primary-key\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"Primary Key\"), __jsx(Select, {\n    name: \"primaryKey\",\n    labelId: \"primary-key\",\n    value: primaryKey,\n    onChange: event => setPrimaryKey(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, fields.map(item => __jsx(MenuItem, {\n    key: item,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 30\n    }\n  }, item))))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  });\n\n  const renderQuerySettings = () => fields.length ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 54\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, \"Query Settings\")), fields.map(field => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 27\n    }\n  }))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  });\n\n  const saveConfigSettings = async () => {\n    try {\n      const data = {\n        dataSourceId: datasource,\n        config: {\n          docId: doc,\n          fields,\n          type: 'simple',\n          func: 'find',\n          query: {},\n          isEditable,\n          isDeletable,\n          isAddable,\n          primaryKey\n        },\n        type: 'Table'\n      };\n\n      if (isAdding) {\n        onWidgetAdd(data);\n      } else {\n        const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data);\n        handleSettingsClose(update);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getDatasources();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, \"Widget Properties\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, \"Title\"), __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: isEditable,\n      onChange: event => {\n        setIsEditable(event.target.checked);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }),\n    label: \"Allow Edit?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: isDeletable,\n      onChange: event => {\n        setIsDeletable(event.target.checked);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }),\n    label: \"Allow Delete?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: isAddable,\n      onChange: event => {\n        setIsAddable(event.target.checked);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }),\n    label: \"Allow Add?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  })), __jsx(\"h2\", {\n    className: classes.h2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, \"Connection Settings\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"data-source\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, \"Data Source\"), __jsx(Select, {\n    name: \"datasource\",\n    labelId: \"data-source\",\n    value: datasource,\n    onChange: handleDatasourceChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, datasources.map(item => __jsx(MenuItem, {\n    key: item.id,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 37\n    }\n  }, item.title)))), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    disabled: datasource ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"doc-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, \"Table/Collection\"), __jsx(Select, {\n    name: \"docList\",\n    labelId: \"doc-list\",\n    value: doc,\n    onChange: handleDocChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, docList.map(item => __jsx(MenuItem, {\n    key: item,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }, item)))), renderFieldSettings(), renderQuerySettings(), __jsx(Button, {\n    fullWidth: true,\n    onClick: saveConfigSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }, isAdding ? 'Add' : 'Save'));\n};\n\nexport default TableWidgetSettingsPanel;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-widget-settings-panel.jsx"],"names":["useState","useEffect","makeStyles","Button","InputLabel","MenuItem","FormControl","Input","Select","FormControlLabel","Checkbox","DataSourceActions","WidgetSettingsActions","useStyles","theme","list","width","paddingLeft","paddingRight","paddingTop","h2","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","formControl","TableWidgetSettingsPanel","widget","handleSettingsClose","isAdding","onWidgetAdd","classes","datasources","setDatasources","datasource","setDatasource","dataSourceId","docList","setDocList","doc","setDoc","config","docId","fieldList","setFieldList","fields","setFields","query","setQuery","isEditable","setIsEditable","isDeletable","setIsDeletable","isAddable","setIsAddable","primaryKey","setPrimaryKey","getDatasources","$datasources","$docList","getDocList","$fieldList","getFieldList","e","console","log","id","handleDatasourceChange","event","name","value","target","handleDocChange","handleFieldChange","checked","filter","field","renderFieldSettings","length","map","includes","item","renderQuerySettings","saveConfigSettings","data","type","func","update","updateWidgetSettings","title"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport Select from '@material-ui/core/Select'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport DataSourceActions from '../../../actions/datasource.actions'\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}))\n\nconst TableWidgetSettingsPanel = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\n  const classes = useStyles()\n  const [datasources, setDatasources] = useState([])\n  const [datasource, setDatasource] = useState(!isAdding ? widget.dataSourceId : '')\n  const [docList, setDocList] = useState([])\n  const [doc, setDoc] = useState(!isAdding ? widget.config.docId : '')\n  const [fieldList, setFieldList] = useState([])\n  const [fields, setFields] = useState(!isAdding ? widget.config.fields : [])\n  const [query, setQuery] = useState({})\n  const [isEditable, setIsEditable] = useState(isAdding ? false : widget.config.isEditable)\n  const [isDeletable, setIsDeletable] = useState(isAdding ? false : widget.config.isDeletable)\n  const [isAddable, setIsAddable] = useState(isAdding ? false : widget.config.isAddable)\n  const [primaryKey, setPrimaryKey] = useState(isAdding ? null : widget.config.primaryKey)\n\n  const getDatasources = async () => {\n    try {\n      const $datasources = await DataSourceActions.getDatasources({})\n      if (!isAdding) {\n        const $docList = await DataSourceActions.getDocList(datasource)\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\n        setDocList($docList)\n        setFieldList($fieldList)\n      }\n      setDatasources($datasources)\n      return $datasources\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getDocList = async (id) => {\n    try {\n      setDatasource(id)\n      const $docList = await DataSourceActions.getDocList(id)\n      setDocList($docList)\n      return $docList\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getFieldList = async (id, docId) => {\n    try {\n      setDoc(docId)\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\n      setFieldList($fieldList)\n      return $fieldList\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const handleDatasourceChange = async (event) => {\n    const { name, value } = event.target\n    setFieldList([])\n    setFields([])\n    await getDocList(value)\n  }\n\n  const handleDocChange = async (event) => {\n    const { name, value } = event.target\n    setFieldList([])\n    setFields([])\n    await getFieldList(datasource, value)\n  }\n\n  const handleFieldChange = name => event => {\n    const { checked } = event.target\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name))\n  }\n\n  const renderFieldSettings = () => fieldList.length ? (<div>\n    <h2 className={classes.h2}>\n      <span className={classes.span}>Fields Settings</span>\n    </h2>\n\n    {fieldList.map(field => (<FormControlLabel\n      key={field}\n      control={\n        <Checkbox checked={fields.includes(field)} onChange={handleFieldChange(field)} value={field} />\n      }\n      label={field}\n    />))}\n\n    <FormControl fullWidth>\n      <InputLabel id=\"primary-key\">Primary Key</InputLabel>\n      <Select\n        name=\"primaryKey\"\n        labelId=\"primary-key\"\n        value={primaryKey}\n        onChange={event => setPrimaryKey(event.target.value)}\n      >\n        {fields.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\n      </Select>\n    </FormControl>\n  </div>) : <div></div>\n\n  const renderQuerySettings = () => fields.length ? (<div>\n    <h2 className={classes.h2}>\n      <span className={classes.span}>Query Settings</span>\n    </h2>\n\n    {fields.map(field => (<div>\n\n    </div>))}\n  </div>) : <div></div>\n\n  const saveConfigSettings = async () => {\n    try {\n      const data = {\n        dataSourceId: datasource,\n        config: {\n          docId: doc,\n          fields,\n          type: 'simple',\n          func: 'find',\n          query: {},\n          isEditable,\n          isDeletable,\n          isAddable,\n          primaryKey\n        },\n        type: 'Table'\n      }\n      if (isAdding) {\n        onWidgetAdd(data)\n      } else {\n        const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data)\n        handleSettingsClose(update)\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  useEffect(() => {\n    getDatasources()\n  }, [])\n\n  return (\n    <div>\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Widget Properties</span>\n      </h2>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel id='title'>Title</InputLabel>\n        <Input />\n      </FormControl>\n      <div style={{ marginTop: 20 }}>\n        <FormControlLabel\n          control={\n            <Checkbox checked={isEditable} onChange={event => { setIsEditable(event.target.checked) }} />\n          }\n          label=\"Allow Edit?\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox checked={isDeletable} onChange={event => { setIsDeletable(event.target.checked) }} />\n          }\n          label=\"Allow Delete?\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox checked={isAddable} onChange={event => { setIsAddable(event.target.checked) }} />\n          }\n          label=\"Allow Add?\"\n        />\n      </div>\n\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Connection Settings</span>\n      </h2>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel id=\"data-source\">Data Source</InputLabel>\n        <Select\n          name=\"datasource\"\n          labelId=\"data-source\"\n          value={datasource}\n          onChange={handleDatasourceChange}\n        >\n          {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\n        <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\n        <Select\n          name=\"docList\"\n          labelId=\"doc-list\"\n          value={doc}\n          onChange={handleDocChange}\n        >\n          {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\n        </Select>\n      </FormControl>\n\n      {renderFieldSettings()}\n\n      {renderQuerySettings()}\n\n      <Button fullWidth onClick={saveConfigSettings}>{isAdding ? 'Add' : 'Save'}</Button>\n    </div>\n  )\n}\n\nexport default TableWidgetSettingsPanel"]},"metadata":{},"sourceType":"module"}