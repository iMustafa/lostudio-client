{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-measure-conditions.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nvar useStyles = makeStyles({});\n\nvar TableMeasureConditions = function TableMeasureConditions(_ref) {\n  var widget = _ref.widget,\n      handleSettingsClose = _ref.handleSettingsClose,\n      isAdding = _ref.isAdding,\n      onWidgetAdd = _ref.onWidgetAdd;\n  var classes = useStyles();\n\n  var _useState = useState({\n    expression: null,\n    minValue: null,\n    maxValue: null,\n    field: null\n  }),\n      measureConditionsFields = _useState[0],\n      updateMeasureConditionsFields = _useState[1];\n\n  var _useState2 = useState(widget.config.fields),\n      fields = _useState2[0],\n      setFields = _useState2[1];\n\n  var _useState3 = useState([]),\n      measureConditions = _useState3[0],\n      setMeasureConditions = _useState3[1];\n\n  var widgetId = widget.id;\n  useEffect(function () {\n    var getMeasureConditions = function getMeasureConditions() {\n      var $measureConditions;\n      return _regeneratorRuntime.async(function getMeasureConditions$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(WidgetSettingsActions.getWidgetSettingsMeasureConditions(widgetId));\n\n            case 3:\n              $measureConditions = _context.sent;\n              console.log($measureConditions);\n              setMeasureConditions($measureConditions);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    getMeasureConditions();\n    console.log(fields);\n  }, []);\n\n  var addMeasureCondition = function addMeasureCondition() {\n    var measureCondition;\n    return _regeneratorRuntime.async(function addMeasureCondition$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.createWidgetSettingsMeasureConditions(widgetId, {}));\n\n          case 3:\n            measureCondition = _context2.sent;\n            console.log(measureCondition);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var removeMeasureCondition = function removeMeasureCondition(measureConditionId) {\n    var measureCondition;\n    return _regeneratorRuntime.async(function removeMeasureCondition$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.deleteWidgetSettingsMeasureConditions(widgetId, measureConditionId));\n\n          case 3:\n            measureCondition = _context3.sent;\n            console.log(measureCondition);\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default TableMeasureConditions;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-measure-conditions.jsx"],"names":["useState","useEffect","makeStyles","Button","InputLabel","Select","MenuItem","FormControl","FormControlLabel","WidgetSettingsActions","useStyles","TableMeasureConditions","widget","handleSettingsClose","isAdding","onWidgetAdd","classes","expression","minValue","maxValue","field","measureConditionsFields","updateMeasureConditionsFields","config","fields","setFields","measureConditions","setMeasureConditions","widgetId","id","getMeasureConditions","getWidgetSettingsMeasureConditions","$measureConditions","console","log","addMeasureCondition","createWidgetSettingsMeasureConditions","measureCondition","removeMeasureCondition","measureConditionId","deleteWidgetSettingsMeasureConditions"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\n\nconst useStyles = makeStyles({\n\n})\n\nconst TableMeasureConditions = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\n  const classes = useStyles()\n  const [measureConditionsFields, updateMeasureConditionsFields] = useState({\n    expression: null, minValue: null, maxValue: null, field: null\n  })\n  const [fields, setFields] = useState(widget.config.fields)\n  const [measureConditions, setMeasureConditions] = useState([])\n  const widgetId = widget.id\n\n  useEffect(() => {\n    const getMeasureConditions = async () => {\n      try {\n        const $measureConditions = await WidgetSettingsActions.getWidgetSettingsMeasureConditions(widgetId)\n        console.log($measureConditions)\n        setMeasureConditions($measureConditions)\n      } catch(e) {\n        console.log(e)\n      }\n    }\n    getMeasureConditions()\n    console.log(fields)\n  }, [])\n\n  const addMeasureCondition = async () => {\n    try {\n      const measureCondition = await WidgetSettingsActions.createWidgetSettingsMeasureConditions(\n        widgetId,\n        {}\n      )\n      console.log(measureCondition)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const removeMeasureCondition = async (measureConditionId) => {\n    try {\n      const measureCondition = await WidgetSettingsActions.deleteWidgetSettingsMeasureConditions(widgetId, measureConditionId)\n      console.log(measureCondition)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  return (\n    <div>\n\n    </div>\n  )\n}\n\nexport default TableMeasureConditions"]},"metadata":{},"sourceType":"module"}