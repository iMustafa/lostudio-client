{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport config from 'next/config';\nimport Cookie from 'js-cookie';\nconst {\n  API_URL\n} = config().publicRuntimeConfig;\nexport default class DatasourceActions {\n  static async createDatasource(data) {\n    return axios.post(`${API_URL}/DataSources`, data, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err);\n  }\n\n  static async updateDatasource(id, data) {\n    return axios.patch(`${API_URL}/DataSources/${id}`, data, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getDatasources({\n    Authorization,\n    query\n  }) {\n    return axios.get(`${API_URL}/DataSources`, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err);\n  }\n\n  static async getUserDatasources(id, query) {\n    return axios.get(`${API_URL}/users/${id}/dataSrouces`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      },\n      params: _objectSpread({}, query)\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getDatasourceById(id) {\n    return axios.get(`${API_URL}/DataSources/${id}`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async removeDatasource(id) {\n    return axios.delete(`${API_URL}/DataSources/${id}`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getDocList(id) {\n    return axios.get(`${API_URL}/DataSources/${id}/doc-list`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getFieldList(id, docId) {\n    return axios.get(`${API_URL}/DataSources/${id}/field-list`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      },\n      params: {\n        docId\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async queryDatasource(query) {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}