{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\dashboards\\\\widgets-menu.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SystemWidgets from './system-widgets';\nimport MyWidgets from './my-widgets';\n\nconst TabPanel = props => {\n  const {\n    children,\n    value,\n    index\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `full-width-tabpanel-${index}`,\n    \"aria-labelledby\": `full-width-tab-${index}`\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), value === index && __jsx(Box, {\n    p: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, children));\n};\n\nconst a11yProps = index => {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`\n  };\n};\n\nconst useStyles = makeStyles(() => ({}));\n\nconst WidgetSidemenu = ({\n  onWidgetClick,\n  widgetSettings,\n  addPredefinedWidget\n}) => {\n  const classes = useStyles();\n  const {\n    0: value,\n    1: setValue\n  } = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setValue(index);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    \"aria-label\": \"full width tabs example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Tab, _extends({\n    label: \"System Widgets\"\n  }, a11yProps(0), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), __jsx(Tab, _extends({\n    label: \"My Widgets\"\n  }, a11yProps(1), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    index: value,\n    onChangeIndex: handleChangeIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(TabPanel, {\n    value: value,\n    index: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(SystemWidgets, {\n    onWidgetClick: onWidgetClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), __jsx(TabPanel, {\n    value: value,\n    index: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(MyWidgets, {\n    addPredefinedWidget: addPredefinedWidget,\n    widgetSettings: widgetSettings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))));\n};\n\nexport default WidgetSidemenu;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/dashboards/widgets-menu.jsx"],"names":["useState","useEffect","makeStyles","AppBar","Tabs","Tab","Typography","Box","SystemWidgets","MyWidgets","TabPanel","props","children","value","index","other","a11yProps","id","useStyles","WidgetSidemenu","onWidgetClick","widgetSettings","addPredefinedWidget","classes","setValue","handleChange","event","newValue","handleChangeIndex"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Box from '@material-ui/core/Box'\r\nimport SystemWidgets from './system-widgets'\r\nimport MyWidgets from './my-widgets'\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nconst a11yProps = (index) => {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n}))\r\n\r\nconst WidgetSidemenu = ({ onWidgetClick, widgetSettings, addPredefinedWidget }) => {\r\n  const classes = useStyles()\r\n  const [value, setValue] = useState(0)\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  const handleChangeIndex = index => {\r\n    setValue(index)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"System Widgets\" {...a11yProps(0)} />\r\n          <Tab label=\"My Widgets\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <div\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0}>\r\n          <SystemWidgets onWidgetClick={onWidgetClick} />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <MyWidgets addPredefinedWidget={addPredefinedWidget} widgetSettings={widgetSettings} />\r\n        </TabPanel>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WidgetSidemenu"]},"metadata":{},"sourceType":"module"}