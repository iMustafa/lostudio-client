{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { gantt } from 'dhtmlx-gantt';\n\nvar Gantt = /*#__PURE__*/function (_Component) {\n  _inherits(Gantt, _Component);\n\n  var _super = _createSuper(Gantt);\n\n  function Gantt() {\n    _classCallCheck(this, Gantt);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Gantt, [{\n    key: \"setZoom\",\n    value: function setZoom(value) {\n      switch (value) {\n        case 'Hours':\n          gantt.config.scale_unit = 'day';\n          gantt.config.date_scale = '%d %M';\n          gantt.config.scale_height = 60;\n          gantt.config.min_column_width = 30;\n          gantt.config.subscales = [{\n            unit: 'hour',\n            step: 1,\n            date: '%H'\n          }];\n          break;\n\n        case 'Days':\n          gantt.config.min_column_width = 70;\n          gantt.config.scale_unit = 'week';\n          gantt.config.date_scale = '#%W';\n          gantt.config.subscales = [{\n            unit: 'day',\n            step: 1,\n            date: '%d %M'\n          }];\n          gantt.config.scale_height = 60;\n          break;\n\n        case 'Months':\n          gantt.config.min_column_width = 70;\n          gantt.config.scale_unit = 'month';\n          gantt.config.date_scale = '%F';\n          gantt.config.scale_height = 60;\n          gantt.config.subscales = [{\n            unit: 'week',\n            step: 1,\n            date: '#%W'\n          }];\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.zoom !== nextProps.zoom;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      gantt.render();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n      var tasks = this.props.tasks;\n      gantt.init(this.ganttContainer);\n      console.log(tasks);\n      gantt.parse(tasks);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var zoom = this.props.zoom;\n      this.setZoom(zoom);\n      return __jsx(\"div\", {\n        ref: function ref(input) {\n          _this.ganttContainer = input;\n        },\n        style: {\n          width: '100%',\n          height: '90vh'\n        }\n      });\n    }\n  }]);\n\n  return Gantt;\n}(Component);\n\nexport { Gantt as default };","map":null,"metadata":{},"sourceType":"module"}