{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\dashboards\\\\settings\\\\privacy-settings.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DashboardActions from '../../../actions/dashboard.actions';\nimport CollaboratorCard from './collaborator-card';\nimport AddCollaboratorCard from './add-new-collaborator';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(() => ({\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  }\n}));\n\nconst PrivacySettings = ({\n  id\n}) => {\n  const classes = useStyles();\n  const {\n    0: collaborators,\n    1: setCollaborators\n  } = useState([]);\n  const {\n    0: isAddingCollaborator,\n    1: setIsAddingCollaborator\n  } = useState(false);\n  useEffect(() => {\n    const getInitialProps = async () => {\n      try {\n        const $collaborators = await DashboardActions.getCollaborators({\n          id\n        });\n        console.log($collaborators);\n        setCollaborators($collaborators);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getInitialProps();\n  }, []);\n\n  const renderButtonOrAdd = () => {\n    isAddingCollaborator ? __jsx(AddCollaboratorCard, {\n      cancel: () => setIsAddingCollaborator(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : __jsx(Button, {\n      fullWidth: true,\n      style: {\n        marginBottom: 10\n      },\n      onClick: () => setIsAddingCollaborator(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Add New Collaborator\");\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Collaborators\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, renderButtonOrAdd(), collaborators.map(collaborator => __jsx(CollaboratorCard, {\n    key: collaborator.id,\n    collaborator: collaborator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))));\n};\n\nexport default PrivacySettings;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/dashboards/settings/privacy-settings.jsx"],"names":["useState","useEffect","makeStyles","DashboardActions","CollaboratorCard","AddCollaboratorCard","Button","useStyles","h2","width","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","PrivacySettings","id","classes","collaborators","setCollaborators","isAddingCollaborator","setIsAddingCollaborator","getInitialProps","$collaborators","getCollaborators","console","log","e","renderButtonOrAdd","map","collaborator"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC,OAAO;AAClCM,EAAAA,EAAE,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,SAAS,EAAE,QAFT;AAGFC,IAAAA,YAAY,EAAE,gBAHZ;AAIFC,IAAAA,UAAU,EAAE,OAJV;AAKFC,IAAAA,SAAS,EAAE,MALT;AAMFC,IAAAA,YAAY,EAAE,MANZ;AAOFC,IAAAA,UAAU,EAAE,QAPV;AAQFC,IAAAA,QAAQ,EAAE,MARR;AASFC,IAAAA,KAAK,EAAE;AATL,GAD8B;AAYlCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,MADR;AAEJC,IAAAA,OAAO,EAAE;AAFL;AAZ4B,CAAP,CAAD,CAA5B;;AAkBA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAClC,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAM;AAAA,OAACiB,aAAD;AAAA,OAAgBC;AAAhB,MAAoCzB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAA,OAAC0B,oBAAD;AAAA,OAAuBC;AAAvB,MAAkD3B,QAAQ,CAAC,KAAD,CAAhE;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2B,eAAe,GAAG,YAAY;AAClC,UAAI;AACF,cAAMC,cAAc,GAAG,MAAM1B,gBAAgB,CAAC2B,gBAAjB,CAAkC;AAAER,UAAAA;AAAF,SAAlC,CAA7B;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACAJ,QAAAA,gBAAgB,CAACI,cAAD,CAAhB;AACD,OAJD,CAIE,OAAOI,CAAP,EAAU;AACVF,QAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD;AACF,KARD;;AASAL,IAAAA,eAAe;AAChB,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMM,iBAAiB,GAAG,MAAM;AAC9BR,IAAAA,oBAAoB,GAAG,MAAC,mBAAD;AAAqB,MAAA,MAAM,EAAE,MAAMC,uBAAuB,CAAC,KAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAClB,MAAC,MAAD;AAAQ,MAAA,SAAS,MAAjB;AAAkB,MAAA,KAAK,EAAE;AAAEb,QAAAA,YAAY,EAAE;AAAhB,OAAzB;AAA+C,MAAA,OAAO,EAAE,MAAMa,uBAAuB,CAAC,KAAD,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF;AAED,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEJ,OAAO,CAACf,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAEe,OAAO,CAACL,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgB,iBAAiB,EADpB,EAEGV,aAAa,CAACW,GAAd,CAAkBC,YAAY,IAAI,MAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEA,YAAY,CAACd,EAApC;AAAwC,IAAA,YAAY,EAAEc,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlC,CAFH,CAJF,CADF;AAWD,CAlCD;;AAoCA,eAAef,eAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport DashboardActions from '../../../actions/dashboard.actions'\r\nimport CollaboratorCard from './collaborator-card'\r\nimport AddCollaboratorCard from './add-new-collaborator'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  }\r\n}))\r\n\r\nconst PrivacySettings = ({ id }) => {\r\n  const classes = useStyles()\r\n  const [collaborators, setCollaborators] = useState([])\r\n  const [isAddingCollaborator, setIsAddingCollaborator] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const getInitialProps = async () => {\r\n      try {\r\n        const $collaborators = await DashboardActions.getCollaborators({ id })\r\n        console.log($collaborators)\r\n        setCollaborators($collaborators)\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getInitialProps()\r\n  }, [])\r\n\r\n  const renderButtonOrAdd = () => {\r\n    isAddingCollaborator ? <AddCollaboratorCard cancel={() => setIsAddingCollaborator(false)} /> :\r\n      <Button fullWidth style={{ marginBottom: 10 }} onClick={() => setIsAddingCollaborator(false)}>Add New Collaborator</Button>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Collaborators</span>\r\n      </h2>\r\n      <div>\r\n        {renderButtonOrAdd()}\r\n        {collaborators.map(collaborator => <CollaboratorCard key={collaborator.id} collaborator={collaborator} />)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PrivacySettings"]},"metadata":{},"sourceType":"module"}