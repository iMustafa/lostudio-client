{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-measure-conditions.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nimport { conditionCases } from '../../../helpers/measure-conditions';\nvar useStyles = makeStyles({\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  measureConditionFieldTitle: {\n    fontSize: 12,\n    fontWeight: 'bold'\n  }\n});\n\nvar TableMeasureConditions = function TableMeasureConditions(_ref) {\n  var widget = _ref.widget,\n      handleSettingsClose = _ref.handleSettingsClose,\n      isAdding = _ref.isAdding,\n      onWidgetAdd = _ref.onWidgetAdd;\n  var classes = useStyles();\n\n  var _useState = useState({}),\n      measureConditionsFields = _useState[0],\n      updateMeasureConditionsFields = _useState[1];\n\n  var _useState2 = useState(false),\n      isAddingMeasureCondition = _useState2[0],\n      setIsAddingMeasureCondition = _useState2[1];\n\n  var _useState3 = useState(widget.config.fields),\n      fields = _useState3[0],\n      setFields = _useState3[1];\n\n  var _useState4 = useState([]),\n      measureConditions = _useState4[0],\n      setMeasureConditions = _useState4[1];\n\n  var widgetId = widget.id;\n  useEffect(function () {\n    var getMeasureConditions = function getMeasureConditions() {\n      var $measureConditions;\n      return _regeneratorRuntime.async(function getMeasureConditions$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(WidgetSettingsActions.getWidgetSettingsMeasureConditions(widgetId));\n\n            case 3:\n              $measureConditions = _context.sent;\n              console.log($measureConditions);\n              setMeasureConditions($measureConditions);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    getMeasureConditions();\n    console.log(fields);\n  }, []);\n\n  var addMeasureCondition = function addMeasureCondition() {\n    var measureCondition;\n    return _regeneratorRuntime.async(function addMeasureCondition$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.createWidgetSettingsMeasureConditions(widgetId, {}));\n\n          case 3:\n            measureCondition = _context2.sent;\n            console.log(measureCondition);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var removeMeasureCondition = function removeMeasureCondition(measureConditionId) {\n    var measureCondition;\n    return _regeneratorRuntime.async(function removeMeasureCondition$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.deleteWidgetSettingsMeasureConditions(widgetId, measureConditionId));\n\n          case 3:\n            measureCondition = _context3.sent;\n            console.log(measureCondition);\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var handleChange = function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    updateMeasureConditionsFields(_objectSpread({}, measureConditionsFields, _defineProperty({}, name, value)));\n  };\n\n  var renderAddMeasureCondition = function renderAddMeasureCondition() {\n    return isAddingMeasureCondition ? __jsx(Card, {\n      style: {\n        padding: 15,\n        marginBottom: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 4,\n      style: {\n        paddingLeft: 5,\n        paddingRight: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, __jsx(FormControl, {\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, __jsx(InputLabel, {\n      id: \"field-select-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \"Field\"), __jsx(Select, {\n      fullWidth: true,\n      labelId: \"field-select-label\",\n      value: measureConditionsFields.field,\n      onChange: handleChange,\n      name: \"field\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, fields.map(function (field) {\n      return __jsx(MenuItem, {\n        key: field,\n        value: field,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 36\n        }\n      }, field);\n    })))), __jsx(Grid, {\n      item: true,\n      xs: 4,\n      style: {\n        paddingLeft: 5,\n        paddingRight: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, __jsx(FormControl, {\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, __jsx(InputLabel, {\n      id: \"expression-select-label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Expression\"), __jsx(Select, {\n      fullWidth: true,\n      labelId: \"expression-select-label\",\n      value: measureConditionsFields.expression,\n      onChange: handleChange,\n      name: \"field\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, conditionCases.map(function (conditionCase) {\n      return __jsx(MenuItem, {\n        key: conditionCase.title,\n        value: conditionCase.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 52\n        }\n      }, conditionCase.friendlyName);\n    })))), __jsx(Grid, {\n      item: true,\n      xs: 4,\n      style: {\n        paddingLeft: 5,\n        paddingRight: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, __jsx(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"Color Select\"))), __jsx(Grid, {\n      container: true,\n      spacing: 0,\n      style: {\n        marginTop: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      style: {\n        paddingLeft: 5,\n        paddingRight: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, __jsx(TextField, {\n      fullWidth: true,\n      type: \"number\",\n      label: \"Minimum Value\",\n      onChange: handleChange,\n      name: \"minValue\",\n      value: measureConditionsFields.minValue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    })), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      style: {\n        paddingLeft: 5,\n        paddingRight: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, __jsx(TextField, {\n      fullWidth: true,\n      type: \"number\",\n      name: \"minValue\",\n      onChange: handleChange,\n      label: \"Maximum Value\",\n      value: measureConditionsFields.maxValue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }))), __jsx(Grid, {\n      container: true,\n      spacing: 0,\n      style: {\n        marginTop: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      fullWidth: true,\n      onClick: function onClick() {\n        setIsAddingMeasureCondition(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, __jsx(CancelIcon, {\n      style: {\n        color: '#F00'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }), __jsx(Typography, {\n      style: {\n        marginLeft: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, __jsx(SaveIcon, {\n      style: {\n        color: '#3F51B5'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }), __jsx(Typography, {\n      style: {\n        marginLeft: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, \"Save\"))))) : __jsx(Button, {\n      fullWidth: true,\n      style: {\n        marginBottom: 15\n      },\n      onClick: function onClick() {\n        setIsAddingMeasureCondition(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    }, \"Add Measure Condition\");\n  };\n\n  var renderMeasureCondition = function renderMeasureCondition(measureCondition) {\n    return __jsx(Card, {\n      style: {\n        padding: 15,\n        marginBottom: 15\n      },\n      key: measureCondition.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, __jsx(Typography, {\n      className: classes.measureConditionFieldTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, \"Field\"), __jsx(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, measureCondition.field)), __jsx(Grid, {\n      item: true,\n      xs: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, __jsx(Typography, {\n      className: classes.measureConditionFieldTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, \"Expression\"), __jsx(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, measureCondition.expression)), __jsx(Grid, {\n      item: true,\n      xs: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, __jsx(Typography, {\n      className: classes.measureConditionFieldTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, \"Color\"), __jsx(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, measureCondition.color))), __jsx(Grid, {\n      container: true,\n      spacing: 0,\n      style: {\n        marginTop: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, __jsx(ArrowUpwardIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, measureCondition.minValue)), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, __jsx(ArrowDownwardIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, measureCondition.maxValue))), __jsx(Grid, {\n      container: true,\n      spacing: 0,\n      style: {\n        marginTop: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }, __jsx(DeleteIcon, {\n      style: {\n        color: '#F00'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }), __jsx(Typography, {\n      style: {\n        marginLeft: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, \"Delete\"))), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, __jsx(EditIcon, {\n      style: {\n        color: '#3F51B5'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }), __jsx(Typography, {\n      style: {\n        marginLeft: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, \"Edit\")))));\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, \"Measure Conditions\")), renderAddMeasureCondition(), measureConditions.map(function (measureCondition) {\n    return renderMeasureCondition(measureCondition);\n  }));\n};\n\nexport default TableMeasureConditions;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-measure-conditions.jsx"],"names":["useState","useEffect","makeStyles","Grid","Card","Button","InputLabel","Select","MenuItem","FormControl","TextField","Typography","ArrowUpwardIcon","ArrowDownwardIcon","EditIcon","DeleteIcon","SaveIcon","CancelIcon","WidgetSettingsActions","conditionCases","useStyles","h2","width","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","measureConditionFieldTitle","fontWeight","TableMeasureConditions","widget","handleSettingsClose","isAdding","onWidgetAdd","classes","measureConditionsFields","updateMeasureConditionsFields","isAddingMeasureCondition","setIsAddingMeasureCondition","config","fields","setFields","measureConditions","setMeasureConditions","widgetId","id","getMeasureConditions","getWidgetSettingsMeasureConditions","$measureConditions","console","log","addMeasureCondition","createWidgetSettingsMeasureConditions","measureCondition","removeMeasureCondition","measureConditionId","deleteWidgetSettingsMeasureConditions","handleChange","event","target","name","value","renderAddMeasureCondition","paddingLeft","paddingRight","field","map","expression","conditionCase","title","friendlyName","minValue","maxValue","marginLeft","renderMeasureCondition","display","justifyContent","alignContent","alignItems"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport Button from '@material-ui/core/Button'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport EditIcon from '@material-ui/icons/Edit'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\nimport { conditionCases } from '../../../helpers/measure-conditions'\n\nconst useStyles = makeStyles({\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  measureConditionFieldTitle: {\n    fontSize: 12,\n    fontWeight: 'bold'\n  }\n})\n\nconst TableMeasureConditions = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\n  const classes = useStyles()\n  const [measureConditionsFields, updateMeasureConditionsFields] = useState({})\n  const [isAddingMeasureCondition, setIsAddingMeasureCondition] = useState(false)\n  const [fields, setFields] = useState(widget.config.fields)\n  const [measureConditions, setMeasureConditions] = useState([])\n  const widgetId = widget.id\n\n  useEffect(() => {\n    const getMeasureConditions = async () => {\n      try {\n        const $measureConditions = await WidgetSettingsActions.getWidgetSettingsMeasureConditions(widgetId)\n        console.log($measureConditions)\n        setMeasureConditions($measureConditions)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    getMeasureConditions()\n    console.log(fields)\n  }, [])\n\n  const addMeasureCondition = async () => {\n    try {\n      const measureCondition = await WidgetSettingsActions.createWidgetSettingsMeasureConditions(\n        widgetId,\n        {}\n      )\n      console.log(measureCondition)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const removeMeasureCondition = async (measureConditionId) => {\n    try {\n      const measureCondition = await WidgetSettingsActions.deleteWidgetSettingsMeasureConditions(widgetId, measureConditionId)\n      console.log(measureCondition)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    updateMeasureConditionsFields({ ...measureConditionsFields, [name]: value })\n  }\n\n  const renderAddMeasureCondition = () => isAddingMeasureCondition ? (\n    <Card style={{ padding: 15, marginBottom: 15 }}>\n      <Grid container spacing={0}>\n        <Grid item xs={4} style={{ paddingLeft: 5, paddingRight: 5 }}>\n          <FormControl fullWidth>\n            <InputLabel id=\"field-select-label\">Field</InputLabel>\n            <Select\n              fullWidth\n              labelId=\"field-select-label\"\n              value={measureConditionsFields.field}\n              onChange={handleChange}\n              name=\"field\"\n            >\n              {fields.map(field => <MenuItem key={field} value={field}>{field}</MenuItem>)}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={4} style={{ paddingLeft: 5, paddingRight: 5 }}>\n          <FormControl fullWidth>\n            <InputLabel id=\"expression-select-label\">Expression</InputLabel>\n            <Select\n              fullWidth\n              labelId=\"expression-select-label\"\n              value={measureConditionsFields.expression}\n              onChange={handleChange}\n              name=\"field\"\n            >\n              {conditionCases.map(conditionCase => <MenuItem key={conditionCase.title} value={conditionCase.title}>{conditionCase.friendlyName}</MenuItem>)}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={4} style={{ paddingLeft: 5, paddingRight: 5 }}>\n          <Typography>Color Select</Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={0} style={{ marginTop: 15 }}>\n        <Grid item xs={6} style={{ paddingLeft: 5, paddingRight: 5 }}>\n          <TextField\n            fullWidth\n            type=\"number\"\n            label=\"Minimum Value\"\n            onChange={handleChange}\n            name=\"minValue\"\n            value={measureConditionsFields.minValue}\n          />\n        </Grid>\n        <Grid item xs={6} style={{ paddingLeft: 5, paddingRight: 5 }}>\n          <TextField\n            fullWidth\n            type=\"number\"\n            name=\"minValue\"\n            onChange={handleChange}\n            label=\"Maximum Value\"\n            value={measureConditionsFields.maxValue}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={0} style={{ marginTop: 15 }}>\n        <Grid item xs={6}>\n          <Button fullWidth onClick={() => { setIsAddingMeasureCondition(false) }}>\n            <CancelIcon style={{ color: '#F00' }} />\n            <Typography style={{ marginLeft: 10 }}>Cancel</Typography>\n          </Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Button fullWidth>\n            <SaveIcon style={{ color: '#3F51B5' }} />\n            <Typography style={{ marginLeft: 10 }}>Save</Typography>\n          </Button>\n        </Grid>\n      </Grid>\n    </Card>\n  ) : (\n      <Button fullWidth style={{ marginBottom: 15 }} onClick={() => { setIsAddingMeasureCondition(true) }}>Add Measure Condition</Button>\n    )\n\n  const renderMeasureCondition = (measureCondition) => (\n    <Card style={{ padding: 15, marginBottom: 15 }} key={measureCondition.id}>\n      <Grid container spacing={0}>\n        <Grid item xs={4}>\n          <Typography className={classes.measureConditionFieldTitle}>Field</Typography>\n          <Typography>{measureCondition.field}</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography className={classes.measureConditionFieldTitle}>Expression</Typography>\n          <Typography>{measureCondition.expression}</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography className={classes.measureConditionFieldTitle}>Color</Typography>\n          <Typography>{measureCondition.color}</Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={0} style={{ marginTop: 15 }}>\n        <Grid item xs={6} style={{ display: 'flex', justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\n          <ArrowUpwardIcon />\n          <span>{measureCondition.minValue}</span>\n        </Grid>\n        <Grid item xs={6} style={{ display: 'flex', justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\n          <ArrowDownwardIcon />\n          <span>{measureCondition.maxValue}</span>\n        </Grid>\n      </Grid>\n      <Grid container spacing={0} style={{ marginTop: 15 }}>\n        <Grid item xs={6}>\n          <Button fullWidth>\n            <DeleteIcon style={{ color: '#F00' }} />\n            <Typography style={{ marginLeft: 10 }}>Delete</Typography>\n          </Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Button fullWidth>\n            <EditIcon style={{ color: '#3F51B5' }} />\n            <Typography style={{ marginLeft: 10 }}>Edit</Typography>\n          </Button>\n        </Grid>\n      </Grid>\n    </Card>\n  )\n\n  return (\n    <div>\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Measure Conditions</span>\n      </h2>\n      {renderAddMeasureCondition()}\n      {\n        measureConditions.map(measureCondition => renderMeasureCondition(measureCondition))\n      }\n    </div>\n  )\n}\n\nexport default TableMeasureConditions"]},"metadata":{},"sourceType":"module"}