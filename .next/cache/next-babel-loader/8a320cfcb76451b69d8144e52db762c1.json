{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\dashboards\\\\widgets-sidemenu.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    padding: '0 15px'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    margin: '10px 0 20px',\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\",\n    marginTop: '30px'\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  }\n}));\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `full-width-tabpanel-${index}`,\n    \"aria-labelledby\": `full-width-tab-${index}`\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), value === index && __jsx(Box, {\n    p: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, children));\n}\n\nexport default function WidgetSidemenu() {\n  const classes = useStyles();\n  const {\n    0: value,\n    1: setValue\n  } = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setValue(index);\n  };\n\n  return __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(Tab, {\n    label: \"System Widgets\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), __jsx(Tab, {\n    label: \"My Widgets\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(TabPanel, {\n    value: value,\n    index: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Item One\"), __jsx(TabPanel, {\n    value: value,\n    index: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Item Two\"));\n}","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/dashboards/widgets-sidemenu.jsx"],"names":["useState","makeStyles","Tabs","Tab","Typography","Box","useStyles","theme","root","width","padding","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","h2","textAlign","borderBottom","lineHeight","margin","fontFamily","color","marginTop","span","background","TabPanel","props","children","value","index","other","WidgetSidemenu","classes","setValue","handleChange","event","newValue","handleChangeIndex"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Box from '@material-ui/core/Box'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    padding: '0 15px'\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    margin: '10px 0 20px',\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\",\r\n    marginTop: '30px'\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  }\r\n}))\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default function WidgetSidemenu() {\r\n  const classes = useStyles()\r\n  const [value, setValue] = useState(0)\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n  const handleChangeIndex = index => {\r\n    setValue(index)\r\n  }\r\n\r\n  return (\r\n    <Tabs\r\n      value={value}\r\n      onChange={handleChange}\r\n      indicatorColor=\"primary\"\r\n      textColor=\"primary\"\r\n      centered\r\n    >\r\n      <Tab label=\"System Widgets\" />\r\n      <Tab label=\"My Widgets\" />\r\n\r\n      <TabPanel value={value} index={0}>\r\n        Item One\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        Item Two\r\n      </TabPanel>\r\n\r\n    </Tabs>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}