{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport WidgetIcon from '../widgets/widget-icon';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport PieChartIcon from '@material-ui/icons/PieChart';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nconst useStyles = makeStyles(() => ({}));\n\nconst MyWidgets = ({\n  addPredefinedWidget,\n  widgetSettings\n}) => {\n  const classes = useStyles();\n  const TableWidgets = [{\n    title: 'Table',\n    icon: __jsx(TableChartIcon, null)\n  }];\n  const ChartWidgets = [{\n    title: 'Line Chart',\n    icon: __jsx(TimelineIcon, null)\n  }, {\n    title: 'Bar Chart',\n    icon: __jsx(BarChartIcon, null)\n  }, {\n    title: 'Bubble Chart',\n    icon: __jsx(BubbleChartIcon, null)\n  }, {\n    title: 'Pie Chart',\n    icon: __jsx(PieChartIcon, null)\n  }, {\n    title: 'Donut Chart',\n    icon: __jsx(DonutLargeIcon, null)\n  }, {\n    title: 'Gantt Chart',\n    icon: __jsx(ListAltIcon, null)\n  }];\n  const MyTableWidgets = widgetSettings.filter(widget => widget.type.indexOf('Table') > -1).map(widget => _objectSpread({}, widget, {\n    icon: TableWidgets.find($ => $.title == widget.type).icon\n  }));\n  const MyChartWidgets = widgetSettings.filter(widget => widget.type.indexOf('Chart') > -1).map(widget => _objectSpread({}, widget, {\n    icon: ChartWidgets.find($ => $.title == widget.type).icon\n  }));\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(ExpansionPanel, null, __jsx(ExpansionPanelSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null)\n  }, __jsx(Typography, {\n    className: classes.heading\n  }, \"Tables\")), __jsx(ExpansionPanelDetails, null, __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, MyTableWidgets.map(widget => __jsx(Grid, {\n    item: true,\n    xs: 4,\n    key: widget.id\n  }, __jsx(WidgetIcon, {\n    widget: widget,\n    addPredefinedWidget: addPredefinedWidget,\n    icon: widget.icon,\n    title: widget.title\n  })))))), __jsx(ExpansionPanel, null, __jsx(ExpansionPanelSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null)\n  }, __jsx(Typography, {\n    className: classes.heading\n  }, \"Charts\")), __jsx(ExpansionPanelDetails, null, __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, MyChartWidgets.map(widget => __jsx(Grid, {\n    item: true,\n    xs: 4,\n    key: widget.id\n  }, __jsx(WidgetIcon, {\n    widget: widget,\n    addPredefinedWidget: addPredefinedWidget,\n    icon: widget.icon,\n    title: widget.title\n  })))))));\n};\n\nexport default MyWidgets;","map":null,"metadata":{},"sourceType":"module"}