{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport NotificationsActions from '../../actions/notifications.actions';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport NotificationItem from './NotificationsItem';\n\nvar NotificationMenu = function NotificationMenu(_ref) {\n  var anchorEl = _ref.anchorEl,\n      style = _ref.style,\n      open = _ref.open,\n      onClose = _ref.onClose;\n\n  var _useState = useState([]),\n      notifications = _useState[0],\n      setNotifications = _useState[1];\n\n  useEffect(function () {\n    var $getNotifications = function $getNotifications() {\n      var $notifications;\n      return _regeneratorRuntime.async(function $getNotifications$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(NotificationsActions.getMyNotifications({}));\n\n            case 3:\n              $notifications = _context.sent;\n              setNotifications(_toConsumableArray($notifications));\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    $getNotifications();\n  }, []);\n\n  var renderNotificationItem = function renderNotificationItem(notification) {\n    return __jsx(MenuItem, {\n      key: notification.id,\n      style: {\n        padding: 0,\n        marginBottom: 10\n      }\n    }, __jsx(NotificationItem, {\n      notification: notification\n    }));\n  };\n\n  return __jsx(Menu, {\n    anchorEl: anchorEl,\n    keepMounted: true,\n    style: style,\n    open: open,\n    onClose: onClose\n  }, notifications.map(function (notification) {\n    return renderNotificationItem(notification);\n  }));\n};\n\nexport default NotificationMenu;","map":null,"metadata":{},"sourceType":"module"}