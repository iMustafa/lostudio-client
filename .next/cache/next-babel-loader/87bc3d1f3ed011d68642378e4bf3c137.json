{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/helpers/connection-settings/database-connection.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DataSourceActions from '../../../../actions/datasource.actions';\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions';\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}));\n\nconst DatabaseConnection = ({\n  isAdding,\n  setDoc,\n  setDatasource,\n  setFields,\n  doc,\n  datasource,\n  fields,\n  primaryKey,\n  setPrimaryKey\n}) => {\n  const classes = useStyles();\n  const {\n    0: datasources,\n    1: setDatasources\n  } = useState([]);\n  const {\n    0: docList,\n    1: setDocList\n  } = useState([]);\n  const {\n    0: fieldList,\n    1: setFieldList\n  } = useState([]);\n  const {\n    0: query,\n    1: setQuery\n  } = useState({});\n\n  const getDatasources = async () => {\n    try {\n      const $datasources = await DataSourceActions.getDatasources({});\n\n      if (!isAdding) {\n        const $docList = await DataSourceActions.getDocList(datasource);\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc);\n        setDocList($docList);\n        setFieldList($fieldList);\n      }\n\n      setDatasources($datasources);\n      return $datasources;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getDocList = async id => {\n    try {\n      setDatasource(id);\n      const $docList = await DataSourceActions.getDocList(id);\n      setDocList($docList);\n      return $docList;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getFieldList = async (id, docId) => {\n    try {\n      setDoc(docId);\n      const $fieldList = await DataSourceActions.getFieldList(id, docId);\n      setFieldList($fieldList);\n      return $fieldList;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleDatasourceChange = async event => {\n    const {\n      value\n    } = event.target;\n    setFieldList([]);\n    setFields([]);\n    await getDocList(value);\n  };\n\n  const handleDocChange = async event => {\n    const {\n      value\n    } = event.target;\n    setFieldList([]);\n    setFields([]);\n    await getFieldList(datasource, value);\n  };\n\n  const handleFieldChange = name => event => {\n    const {\n      checked\n    } = event.target;\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name));\n  };\n\n  const renderFieldSettings = () => fieldList.length ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 57\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"Fields Settings\")), fieldList.map(field => __jsx(FormControlLabel, {\n    key: field,\n    control: __jsx(Checkbox, {\n      checked: fields.includes(field),\n      onChange: handleFieldChange(field),\n      value: field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }),\n    label: field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 30\n    }\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, __jsx(InputLabel, {\n    id: \"primary-key\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, \"Primary Key\"), __jsx(Select, {\n    name: \"primaryKey\",\n    labelId: \"primary-key\",\n    value: primaryKey,\n    onChange: event => setPrimaryKey(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, fields.map(item => __jsx(MenuItem, {\n    key: item,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 30\n    }\n  }, item))))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  });\n\n  const renderQuerySettings = () => fields.length ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 54\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, \"Query Settings\")), fields.map(field => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 27\n    }\n  }))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  });\n\n  useEffect(() => {\n    getDatasources();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"data-source\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \"Data Source\"), __jsx(Select, {\n    name: \"datasource\",\n    labelId: \"data-source\",\n    value: datasource,\n    onChange: handleDatasourceChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, datasources.map(item => __jsx(MenuItem, {\n    key: item.id,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 37\n    }\n  }, item.title)))), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    disabled: datasource ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"doc-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \"Table/Collection\"), __jsx(Select, {\n    name: \"docList\",\n    labelId: \"doc-list\",\n    value: doc,\n    onChange: handleDocChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, docList.map(item => __jsx(MenuItem, {\n    key: item,\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, item)))), renderFieldSettings(), renderQuerySettings());\n};\n\nexport default DatabaseConnection;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/helpers/connection-settings/database-connection.jsx"],"names":["useState","useEffect","makeStyles","Button","InputLabel","MenuItem","FormControl","Input","Select","FormControlLabel","Checkbox","DataSourceActions","WidgetSettingsActions","useStyles","theme","list","width","paddingLeft","paddingRight","paddingTop","h2","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","formControl","DatabaseConnection","isAdding","setDoc","setDatasource","setFields","doc","datasource","fields","primaryKey","setPrimaryKey","classes","datasources","setDatasources","docList","setDocList","fieldList","setFieldList","query","setQuery","getDatasources","$datasources","$docList","getDocList","$fieldList","getFieldList","e","console","log","id","docId","handleDatasourceChange","event","value","target","handleDocChange","handleFieldChange","name","checked","filter","field","renderFieldSettings","length","map","includes","item","renderQuerySettings","title"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport Select from '@material-ui/core/Select'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport DataSourceActions from '../../../../actions/datasource.actions'\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}))\n\nconst DatabaseConnection = ({\n  isAdding,\n  setDoc,\n  setDatasource,\n  setFields,\n  doc,\n  datasource,\n  fields,\n  primaryKey,\n  setPrimaryKey\n}) => {\n  const classes = useStyles()\n  const [datasources, setDatasources] = useState([])\n  const [docList, setDocList] = useState([])\n  const [fieldList, setFieldList] = useState([])\n  const [query, setQuery] = useState({})\n\n  const getDatasources = async () => {\n    try {\n      const $datasources = await DataSourceActions.getDatasources({})\n      if (!isAdding) {\n        const $docList = await DataSourceActions.getDocList(datasource)\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\n        setDocList($docList)\n        setFieldList($fieldList)\n      }\n      setDatasources($datasources)\n      return $datasources\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getDocList = async (id) => {\n    try {\n      setDatasource(id)\n      const $docList = await DataSourceActions.getDocList(id)\n      setDocList($docList)\n      return $docList\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getFieldList = async (id, docId) => {\n    try {\n      setDoc(docId)\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\n      setFieldList($fieldList)\n      return $fieldList\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const handleDatasourceChange = async (event) => {\n    const { value } = event.target\n    setFieldList([])\n    setFields([])\n    await getDocList(value)\n  }\n\n  const handleDocChange = async (event) => {\n    const { value } = event.target\n    setFieldList([])\n    setFields([])\n    await getFieldList(datasource, value)\n  }\n\n  const handleFieldChange = name => event => {\n    const { checked } = event.target\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name))\n  }\n\n  const renderFieldSettings = () => fieldList.length ? (<div>\n    <h2 className={classes.h2}>\n      <span className={classes.span}>Fields Settings</span>\n    </h2>\n\n    {fieldList.map(field => (<FormControlLabel\n      key={field}\n      control={\n        <Checkbox checked={fields.includes(field)} onChange={handleFieldChange(field)} value={field} />\n      }\n      label={field}\n    />))}\n\n    <FormControl fullWidth>\n      <InputLabel id=\"primary-key\">Primary Key</InputLabel>\n      <Select\n        name=\"primaryKey\"\n        labelId=\"primary-key\"\n        value={primaryKey}\n        onChange={event => setPrimaryKey(event.target.value)}\n      >\n        {fields.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\n      </Select>\n    </FormControl>\n  </div>) : <div></div>\n\n  const renderQuerySettings = () => fields.length ? (<div>\n    <h2 className={classes.h2}>\n      <span className={classes.span}>Query Settings</span>\n    </h2>\n\n    {fields.map(field => (<div>\n\n    </div>))}\n  </div>) : <div></div>\n\n  useEffect(() => {\n    getDatasources()\n  }, [])\n\n  return (\n    <div>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel id=\"data-source\">Data Source</InputLabel>\n        <Select\n          name=\"datasource\"\n          labelId=\"data-source\"\n          value={datasource}\n          onChange={handleDatasourceChange}\n        >\n          {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\n        <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\n        <Select\n          name=\"docList\"\n          labelId=\"doc-list\"\n          value={doc}\n          onChange={handleDocChange}\n        >\n          {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\n        </Select>\n      </FormControl>\n\n      {renderFieldSettings()}\n\n      {renderQuerySettings()}\n\n    </div>\n  )\n}\n\nexport default DatabaseConnection"]},"metadata":{},"sourceType":"module"}