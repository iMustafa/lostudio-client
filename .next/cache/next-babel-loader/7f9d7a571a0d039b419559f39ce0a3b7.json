{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\datasources\\\\add\\\\mongodb.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { Button } from '@material-ui/core';\nimport DatasourceActions from '../../../actions/datasource.actions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: '30px 15px 15px 15px'\n    },\n    cardBody: {\n      padding: '10px'\n    },\n    cardTitle: {\n      fontSize: '12px',\n      backgroundColor: '#3F51B5',\n      padding: '3px 3px 3px 6px',\n      color: '#FFF',\n      fontFamily: \"Roboto\"\n    },\n    gridStyles: {\n      margin: '10px 0 5px 0',\n      width: '100%'\n    },\n    h2: {\n      width: '100%',\n      textAlign: 'center',\n      borderBottom: '1px solid #000',\n      lineHeight: '0.1em',\n      margin: '10px 0 20px',\n      fontFamily: 'Roboto',\n      fontSize: '13px',\n      color: \"#3F51B5\"\n    },\n    span: {\n      background: '#fff',\n      padding: '0 10px'\n    },\n    card: {\n      padding: '10px 15px 20px 15px',\n      marginBottom: '20px'\n    }\n  };\n});\n\nvar AddMongoDBDataSource = function AddMongoDBDataSource() {\n  var classes = useStyles();\n\n  var _useState = useState({\n    showPassword: false,\n    useAuth: 0,\n    isLoading: false\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var _useState2 = useState(0),\n      attempts = _useState2[0],\n      setAttempts = _useState2[1];\n\n  var _useState3 = useState({\n    title: '',\n    type: 'mongodb',\n    force: false,\n    description: '',\n    config: {\n      port: 27017,\n      server: '',\n      db: '',\n      user: '',\n      password: ''\n    }\n  }),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var handleClickShowPassword = function handleClickShowPassword() {\n    setValues(_objectSpread({}, values, {\n      showPassword: !values.showPassword\n    }));\n  };\n\n  var handleMouseDownPassword = function handleMouseDownPassword(event) {\n    event.preventDefault();\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var _event$target = event.target,\n        value = _event$target.value,\n        name = _event$target.name;\n    setState(_objectSpread({}, state, _defineProperty({}, name, value)));\n    setAttempts(0);\n  };\n\n  var handleAuthChange = function handleAuthChange(event) {\n    var _event$target2 = event.target,\n        value = _event$target2.value,\n        name = _event$target2.name;\n    setState(_objectSpread({}, state, {\n      config: _objectSpread({}, state.config, _defineProperty({}, name, value))\n    }));\n  };\n\n  var renderSubmitButtons = function renderSubmitButtons() {\n    return values.isLoading ? __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })) : attempts >= 1 ? __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"alert alert-info\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      style: {\n        fontFamily: 'Roboto',\n        margin: '0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Connection failed to this database, would you like to save it anyway?\")), __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Cancel\"), __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Save\"))) : __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Cancel\"), __jsx(Button, {\n      onClick: handleSubmitData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Save\"));\n  };\n\n  var handleSubmitData = function handleSubmitData() {\n    return _regeneratorRuntime.async(function handleSubmitData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setValues(_objectSpread({}, values, {\n              isLoading: true\n            }));\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(DatasourceActions.createDatasource(state));\n\n          case 4:\n            setValues(_objectSpread({}, values, {\n              isLoading: false\n            }));\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n\n            if (_context.t0.error.message == 'Connection Failed') {\n              setState(_objectSpread({}, state, {\n                force: true\n              }));\n              setAttempts(1);\n            }\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]]);\n  };\n\n  var renderAuth = function renderAuth() {\n    return values.useAuth ? __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, __jsx(TextField, {\n      fullWidth: true,\n      onChange: handleAuthChange.bind(_this),\n      required: true,\n      value: state.config.user,\n      name: \"user\",\n      label: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, __jsx(FormControl, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, __jsx(InputLabel, {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Password\"), __jsx(Input, {\n      required: true,\n      name: \"password\",\n      type: values.showPassword ? 'text' : 'password',\n      onChange: handleAuthChange.bind(_this),\n      value: state.config.password,\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, __jsx(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPassword,\n        onMouseDown: handleMouseDownPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, values.showPassword ? __jsx(Visibility, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }) : __jsx(VisibilityOff, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })))) : __jsx(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    });\n  };\n\n  return __jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Add a New Data Source - MongoDB\"), __jsx(Card, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Properties\")), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, __jsx(TextField, {\n    onChange: handleInputChange.bind(_this),\n    fullWidth: true,\n    required: true,\n    value: state.title,\n    name: \"title\",\n    label: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, __jsx(TextField, {\n    onChange: handleInputChange.bind(_this),\n    fullWidth: true,\n    id: \"description\",\n    value: state.description,\n    name: \"description\",\n    label: \"Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })))), __jsx(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Database Properties\")), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    onChange: handleAuthChange.bind(_this),\n    required: true,\n    value: state.config.server,\n    name: \"server\",\n    label: \"Server\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    onChange: handleAuthChange.bind(_this),\n    required: true,\n    value: state.config.port,\n    name: \"port\",\n    label: \"Port\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    onChange: handleAuthChange.bind(_this),\n    required: true,\n    value: state.config.db,\n    name: \"db\",\n    label: \"Database\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  })))), __jsx(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Authentication\")), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    id: \"mechanism\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"Mechanism\"), __jsx(Select, {\n    labelId: \"mechanism\",\n    onChange: function onChange(e) {\n      setValues(_objectSpread({}, values, {\n        useAuth: e.target.value\n      }));\n    },\n    value: values.useAuth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, __jsx(MenuItem, {\n    value: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, \"No Authentication\"), __jsx(MenuItem, {\n    value: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"Username and Password\")))), renderAuth())), __jsx(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Miscellaneous\")), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, __jsx(TextField, {\n    fullWidth: true,\n    id: \"timeout\",\n    name: \"timeout\",\n    label: \"Query Timeout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  })))), renderSubmitButtons()));\n};\n\nexport default AddMongoDBDataSource;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/datasources/add/mongodb.tsx"],"names":["useState","makeStyles","Card","Grid","TextField","Input","IconButton","InputAdornment","InputLabel","MenuItem","FormControl","Select","Visibility","VisibilityOff","Button","DatasourceActions","CircularProgress","useStyles","theme","root","padding","cardBody","cardTitle","fontSize","backgroundColor","color","fontFamily","gridStyles","margin","width","h2","textAlign","borderBottom","lineHeight","span","background","card","marginBottom","AddMongoDBDataSource","classes","showPassword","useAuth","isLoading","values","setValues","attempts","setAttempts","title","type","force","description","config","port","server","db","user","password","state","setState","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","handleInputChange","target","value","name","handleAuthChange","renderSubmitButtons","display","justifyContent","handleSubmitData","createDatasource","error","message","renderAuth","bind","e"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Input from '@material-ui/core/Input'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport Visibility from '@material-ui/icons/Visibility'\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\r\nimport { Button } from '@material-ui/core'\r\nimport DatasourceActions from '../../../actions/datasource.actions'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: '30px 15px 15px 15px',\r\n  },\r\n  cardBody: {\r\n    padding: '10px'\r\n  },\r\n  cardTitle: {\r\n    fontSize: '12px',\r\n    backgroundColor: '#3F51B5',\r\n    padding: '3px 3px 3px 6px',\r\n    color: '#FFF',\r\n    fontFamily: \"Roboto\"\r\n  },\r\n  gridStyles: {\r\n    margin: '10px 0 5px 0',\r\n    width: '100%'\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    margin: '10px 0 20px',\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  card: {\r\n    padding: '10px 15px 20px 15px',\r\n    marginBottom: '20px'\r\n  }\r\n}))\r\n\r\nconst AddMongoDBDataSource = () => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({ showPassword: false, useAuth: 0, isLoading: false })\r\n  const [attempts, setAttempts] = useState(0)\r\n  const [state, setState] = useState({\r\n    title: '',\r\n    type: 'mongodb',\r\n    force: false,\r\n    description: '',\r\n    config: {\r\n      port: 27017,\r\n      server: '',\r\n      db: '',\r\n      user: '',\r\n      password: ''\r\n    }\r\n  })\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  }\r\n\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  const handleInputChange = (event) => {\r\n    const { value, name } = event.target\r\n    setState({ ...state, [name]: value })\r\n    setAttempts(0)\r\n  }\r\n\r\n  const handleAuthChange = (event) => {\r\n    const { value, name } = event.target\r\n    setState({ ...state, config: { ...state.config, [name]: value } })\r\n  }\r\n\r\n  const renderSubmitButtons = () => {\r\n    return values.isLoading ? (\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <CircularProgress />\r\n      </div>\r\n    ) : attempts >= 1 ? (\r\n      <div>\r\n        <div className=\"alert alert-info\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <p style={{ fontFamily: 'Roboto', margin: '0' }}>Connection failed to this database, would you like to save it anyway?</p>\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <Button>Cancel</Button>\r\n          <Button>Save</Button>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <Button>Cancel</Button>\r\n            <Button onClick={handleSubmitData}>Save</Button>\r\n          </div>\r\n        )\r\n  }\r\n\r\n  const handleSubmitData = async () => {\r\n    try {\r\n      setValues({ ...values, isLoading: true })\r\n      await DatasourceActions.createDatasource(state)\r\n      setValues({ ...values, isLoading: false })\r\n    } catch (e) {\r\n      if (e.error.message == 'Connection Failed') {\r\n        setState({ ...state, force: true })\r\n        setAttempts(1)\r\n      }\r\n    }\r\n  }\r\n\r\n  const renderAuth = () => {\r\n    return values.useAuth ? (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <TextField fullWidth onChange={handleAuthChange.bind(this)} required value={state.config.user} name=\"user\" label=\"Username\" />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n            <Input\r\n              required\r\n              name=\"password\"\r\n              type={values.showPassword ? 'text' : 'password'}\r\n              onChange={handleAuthChange.bind(this)}\r\n              value={state.config.password}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                  >\r\n                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    ) : <Grid container spacing={2}></Grid>\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <div className={classes.cardTitle}>\r\n        Add a New Data Source - MongoDB\r\n      </div>\r\n      <Card className={classes.root}>\r\n\r\n        <Card className={classes.card}>\r\n          <h2 className={classes.h2}>\r\n            <span className={classes.span}>Properties</span>\r\n          </h2>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField onChange={handleInputChange.bind(this)} fullWidth required value={state.title} name=\"title\" label=\"Name\" />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField onChange={handleInputChange.bind(this)} fullWidth id=\"description\" value={state.description} name=\"description\" label=\"Description\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n\r\n        <Card className={classes.card}>\r\n          <h2 className={classes.h2}>\r\n            <span className={classes.span}>Database Properties</span>\r\n          </h2>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={8}>\r\n              <TextField fullWidth onChange={handleAuthChange.bind(this)} required value={state.config.server} name=\"server\" label=\"Server\" />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField fullWidth onChange={handleAuthChange.bind(this)} required value={state.config.port} name=\"port\" label=\"Port\" />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField fullWidth onChange={handleAuthChange.bind(this)} required value={state.config.db} name=\"db\" label=\"Database\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n\r\n        <Card className={classes.card}>\r\n          <h2 className={classes.h2}>\r\n            <span className={classes.span}>Authentication</span>\r\n          </h2>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"mechanism\">Mechanism</InputLabel>\r\n                <Select\r\n                  labelId=\"mechanism\"\r\n                  onChange={(e) => { setValues({ ...values, useAuth: e.target.value as number }) }}\r\n                  value={values.useAuth}\r\n                >\r\n                  <MenuItem value={0}>No Authentication</MenuItem>\r\n                  <MenuItem value={1}>Username and Password</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            {renderAuth()}\r\n          </Grid>\r\n        </Card>\r\n\r\n        <Card className={classes.card}>\r\n          <h2 className={classes.h2}>\r\n            <span className={classes.span}>Miscellaneous</span>\r\n          </h2>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextField fullWidth id=\"timeout\" name=\"timeout\" label=\"Query Timeout\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n\r\n        {renderSubmitButtons()}\r\n\r\n      </Card>\r\n    </Card>\r\n  )\r\n};\r\n\r\n\r\nexport default AddMongoDBDataSource;"]},"metadata":{},"sourceType":"module"}