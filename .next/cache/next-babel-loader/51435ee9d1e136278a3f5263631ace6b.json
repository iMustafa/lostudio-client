{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/form-controls/select/select-widget-settings.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Select from '@material-ui/core/Select';\nimport DataSourceActions from '../../../../actions/datasource.actions';\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions';\nimport Swal from 'sweetalert2';\nimport { Typography } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    list: {\n      width: 500,\n      paddingLeft: \"15px\",\n      paddingRight: \"15px\",\n      paddingTop: \"15px\"\n    },\n    h2: {\n      width: '100%',\n      textAlign: 'center',\n      borderBottom: '1px solid #000',\n      lineHeight: '0.1em',\n      marginTop: \"20px\",\n      marginBottom: \"20px\",\n      fontFamily: 'Roboto',\n      fontSize: '13px',\n      color: \"#3F51B5\"\n    },\n    span: {\n      background: '#fff',\n      padding: '0 10px'\n    },\n    formControl: {\n      marginTop: \"15px\"\n    }\n  };\n});\n\nvar SelectWidgetSettings = function SelectWidgetSettings(_ref) {\n  var widget = _ref.widget,\n      handleSettingsClose = _ref.handleSettingsClose,\n      isAdding = _ref.isAdding,\n      onWidgetAdd = _ref.onWidgetAdd;\n  var classes = useStyles();\n\n  var _useState = useState({\n    label: '',\n    id: '',\n    name: '',\n    className: ''\n  }),\n      properties = _useState[0],\n      setProperties = _useState[1];\n\n  var _useState2 = useState('datasource'),\n      selectionOption = _useState2[0],\n      setSelectionOption = _useState2[1];\n\n  var _useState3 = useState([]),\n      datasources = _useState3[0],\n      setDatasources = _useState3[1];\n\n  var _useState4 = useState(!isAdding ? widget.dataSourceId : ''),\n      datasource = _useState4[0],\n      setDatasource = _useState4[1];\n\n  var _useState5 = useState([]),\n      docList = _useState5[0],\n      setDocList = _useState5[1];\n\n  var _useState6 = useState(!isAdding ? widget.config.docId : ''),\n      doc = _useState6[0],\n      setDoc = _useState6[1];\n\n  var _useState7 = useState([]),\n      fieldList = _useState7[0],\n      setFieldList = _useState7[1];\n\n  var _useState8 = useState(!isAdding ? widget.config.fields : ''),\n      fields = _useState8[0],\n      setFields = _useState8[1];\n\n  var _useState9 = useState(false),\n      linkToFormGroup = _useState9[0],\n      setLinkToFormGroup = _useState9[1];\n\n  var _useState10 = useState([]),\n      formGroups = _useState10[0],\n      setFormGroups = _useState10[1];\n\n  var _useState11 = useState(null),\n      selectedFormGroup = _useState11[0],\n      setSelectedFormGroup = _useState11[1];\n\n  var getDatasources = function getDatasources() {\n    var $datasources, $docList, $fieldList;\n    return _regeneratorRuntime.async(function getDatasources$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(DataSourceActions.getDatasources({}));\n\n          case 3:\n            $datasources = _context.sent;\n\n            if (isAdding) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(DataSourceActions.getDocList(datasource));\n\n          case 7:\n            $docList = _context.sent;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(DataSourceActions.getFieldList(datasource, doc));\n\n          case 10:\n            $fieldList = _context.sent;\n            setDocList($docList);\n            setFieldList($fieldList);\n\n          case 13:\n            setDatasources($datasources);\n            return _context.abrupt(\"return\", $datasources);\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  };\n\n  var getDocList = function getDocList(id) {\n    var $docList;\n    return _regeneratorRuntime.async(function getDocList$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            setDatasource(id);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(DataSourceActions.getDocList(id));\n\n          case 4:\n            $docList = _context2.sent;\n            setDocList($docList);\n            return _context2.abrupt(\"return\", $docList);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var getFieldList = function getFieldList(id, docId) {\n    var $fieldList;\n    return _regeneratorRuntime.async(function getFieldList$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            setDoc(docId);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(DataSourceActions.getFieldList(id, docId));\n\n          case 4:\n            $fieldList = _context3.sent;\n            setFieldList($fieldList);\n            return _context3.abrupt(\"return\", $fieldList);\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var handleDatasourceChange = function handleDatasourceChange(event) {\n    var _event$target, name, value;\n\n    return _regeneratorRuntime.async(function handleDatasourceChange$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _event$target = event.target, name = _event$target.name, value = _event$target.value;\n            setFieldList([]);\n            setFields([]);\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(getDocList(value));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleDocChange = function handleDocChange(event) {\n    var _event$target2, name, value;\n\n    return _regeneratorRuntime.async(function handleDocChange$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _event$target2 = event.target, name = _event$target2.name, value = _event$target2.value;\n            setFieldList([]);\n            setFields([]);\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(getFieldList(datasource, value));\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleFieldChange = function handleFieldChange(event) {\n    var value = event.target.value;\n    setFields(value);\n  };\n\n  var handlePropertiesChange = function handlePropertiesChange(event) {\n    var _event$target3 = event.target,\n        name = _event$target3.name,\n        value = _event$target3.value;\n    setProperties(_objectSpread({}, properties, _defineProperty({}, name, value)));\n  };\n\n  useEffect(function () {\n    getDatasources();\n  }, []);\n\n  var handleSourceChange = function handleSourceChange(event) {\n    var value = event.target.value;\n    setSelectionOption(value);\n  };\n\n  useEffect(function () {\n    var getFormGroups = function getFormGroups() {\n      var $formGroups;\n      return _regeneratorRuntime.async(function getFormGroups$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return _regeneratorRuntime.awrap(WidgetSettingsActions.getFormGroupWidgets());\n\n            case 3:\n              $formGroups = _context6.sent;\n              setFormGroups($formGroups);\n              _context6.next = 10;\n              break;\n\n            case 7:\n              _context6.prev = 7;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.log(_context6.t0);\n\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    getFormGroups();\n  }, []);\n\n  var handleSelectFormGroup = function handleSelectFormGroup(event) {\n    var value = event.target.value;\n    setSelectedFormGroup(value);\n  };\n\n  var handleLinkToFormGroup = function handleLinkToFormGroup(event) {\n    var checked = event.target.checked;\n    if (!checked) setSelectedFormGroup(null);\n    setLinkToFormGroup(checked);\n  };\n\n  var renderFormGroupSelection = function renderFormGroupSelection(_) {\n    return linkToFormGroup ? __jsx(FormControl, {\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }\n    }, __jsx(InputLabel, {\n      id: \"form-group-title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, \"Form Group\"), __jsx(Select, {\n      fullWidth: true,\n      labelId: \"form-group-title\",\n      value: selectedFormGroup,\n      onChange: handleSelectFormGroup,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, formGroups.map(function (formGroup) {\n      return __jsx(MenuItem, {\n        value: formGroup.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, formGroup.properties.name);\n    }))) : __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var renderFieldSettings = function renderFieldSettings() {\n    return fieldList.length ? __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }\n    }, __jsx(\"h2\", {\n      className: classes.h2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      className: classes.span,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, \"Fields Settings\")), __jsx(RadioGroup, {\n      onChange: handleFieldChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, fieldList.map(function (field) {\n      return __jsx(FormControlLabel, {\n        key: field,\n        control: __jsx(Radio, {\n          value: field,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 26\n          }\n        }),\n        label: field,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }\n      });\n    })), __jsx(Typography, {\n      style: {\n        fontSize: 12,\n        color: '#F00',\n        marginTop: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }, \"* You can only select one field in a select field.\")) : __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var saveConfigData = function saveConfigData() {\n    var data, update;\n    return _regeneratorRuntime.async(function saveConfigData$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            data = {\n              dataSourceId: datasource,\n              config: {\n                docId: doc,\n                fields: [fields],\n                type: selectionOption == 'datasource' ? 'simple' : 'constant',\n                func: 'find',\n                query: {},\n                values: selectionOption == 'datasource' ? [] : []\n              },\n              properties: properties,\n              type: 'Select'\n            };\n\n            if (!isAdding) {\n              _context7.next = 6;\n              break;\n            }\n\n            onWidgetAdd(data);\n            _context7.next = 10;\n            break;\n\n          case 6:\n            _context7.next = 8;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.updateWidgetSettings(widget.id, data));\n\n          case 8:\n            update = _context7.sent;\n            handleSettingsClose(update);\n\n          case 10:\n            _context7.next = 15;\n            break;\n\n          case 12:\n            _context7.prev = 12;\n            _context7.t0 = _context7[\"catch\"](0);\n            console.log(_context7.t0);\n\n          case 15:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, \"Widget Info\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, \"Title\"), __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  })), __jsx(\"h2\", {\n    className: classes.h2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, \"Widget Properties\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, \"Label\"), __jsx(Input, {\n    name: \"label\",\n    onChange: handlePropertiesChange,\n    value: properties.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, \"ID\"), __jsx(Input, {\n    name: \"id\",\n    onChange: handlePropertiesChange,\n    value: properties.id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, \"Name\"), __jsx(Input, {\n    name: \"name\",\n    onChange: handlePropertiesChange,\n    value: properties.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, \"Class name\"), __jsx(Input, {\n    name: \"className\",\n    onChange: handlePropertiesChange,\n    value: properties.className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: linkToFormGroup,\n      onChange: handleLinkToFormGroup,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 20\n      }\n    }),\n    label: \"Link To Form Group?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  })), renderFormGroupSelection(), __jsx(\"h2\", {\n    className: classes.h2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, \"Unique Properties\")), __jsx(FormGroup, {\n    row: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }, __jsx(RadioGroup, {\n    onChange: handleSourceChange,\n    value: selectionOption,\n    style: {\n      justifyContent: 'space-evenly',\n      width: '100%',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }, __jsx(FormControlLabel, {\n    value: \"datasource\",\n    control: __jsx(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 57\n      }\n    }),\n    label: \"From Data Source\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"fixed\",\n    control: __jsx(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 52\n      }\n    }),\n    label: \"Fixed Values\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }))), selectionOption == 'datasource' ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, __jsx(InputLabel, {\n    id: \"data-source\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  }, \"Data Source\"), __jsx(Select, {\n    name: \"datasource\",\n    labelId: \"data-source\",\n    value: datasource,\n    onChange: handleDatasourceChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  }, datasources.map(function (item) {\n    return __jsx(MenuItem, {\n      key: item.id,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 43\n      }\n    }, item.title);\n  }))), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    disabled: datasource ? false : true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, __jsx(InputLabel, {\n    id: \"doc-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }\n  }, \"Table/Collection\"), __jsx(Select, {\n    name: \"docList\",\n    labelId: \"doc-list\",\n    value: doc,\n    onChange: handleDocChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }, docList.map(function (item) {\n    return __jsx(MenuItem, {\n      key: item,\n      value: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 39\n      }\n    }, item);\n  }))), renderFieldSettings()) : __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    onClick: saveConfigData,\n    fullWidth: true,\n    color: \"primary\",\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  }, \"Save\"));\n};\n\nexport default SelectWidgetSettings;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/form-controls/select/select-widget-settings.jsx"],"names":["useState","useEffect","makeStyles","Button","MenuItem","Input","InputLabel","FormControl","FormGroup","FormControlLabel","Radio","Checkbox","RadioGroup","Select","DataSourceActions","WidgetSettingsActions","Swal","Typography","useStyles","theme","list","width","paddingLeft","paddingRight","paddingTop","h2","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","formControl","SelectWidgetSettings","widget","handleSettingsClose","isAdding","onWidgetAdd","classes","label","id","name","className","properties","setProperties","selectionOption","setSelectionOption","datasources","setDatasources","dataSourceId","datasource","setDatasource","docList","setDocList","config","docId","doc","setDoc","fieldList","setFieldList","fields","setFields","linkToFormGroup","setLinkToFormGroup","formGroups","setFormGroups","selectedFormGroup","setSelectedFormGroup","getDatasources","$datasources","getDocList","$docList","getFieldList","$fieldList","console","log","handleDatasourceChange","event","target","value","handleDocChange","handleFieldChange","handlePropertiesChange","handleSourceChange","getFormGroups","getFormGroupWidgets","$formGroups","handleSelectFormGroup","handleLinkToFormGroup","checked","renderFormGroupSelection","_","map","formGroup","renderFieldSettings","length","field","saveConfigData","data","type","func","query","values","updateWidgetSettings","update","justifyContent","flexDirection","item","title"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Select from '@material-ui/core/Select'\nimport DataSourceActions from '../../../../actions/datasource.actions'\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\nimport Swal from 'sweetalert2'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}))\n\nconst SelectWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\n  const classes = useStyles()\n  const [properties, setProperties] = useState({\n    label: '', id: '', name: '', className: ''\n  })\n  const [selectionOption, setSelectionOption] = useState('datasource')\n  const [datasources, setDatasources] = useState([])\n  const [datasource, setDatasource] = useState(!isAdding ? widget.dataSourceId : '')\n  const [docList, setDocList] = useState([])\n  const [doc, setDoc] = useState(!isAdding ? widget.config.docId : '')\n  const [fieldList, setFieldList] = useState([])\n  const [fields, setFields] = useState(!isAdding ? widget.config.fields : '')\n  const [linkToFormGroup, setLinkToFormGroup] = useState(false)\n  const [formGroups, setFormGroups] = useState([])\n  const [selectedFormGroup, setSelectedFormGroup] = useState(null)\n\n  const getDatasources = async () => {\n    try {\n      const $datasources = await DataSourceActions.getDatasources({})\n      if (!isAdding) {\n        const $docList = await DataSourceActions.getDocList(datasource)\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\n        setDocList($docList)\n        setFieldList($fieldList)\n      }\n      setDatasources($datasources)\n      return $datasources\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getDocList = async (id) => {\n    try {\n      setDatasource(id)\n      const $docList = await DataSourceActions.getDocList(id)\n      setDocList($docList)\n      return $docList\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getFieldList = async (id, docId) => {\n    try {\n      setDoc(docId)\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\n      setFieldList($fieldList)\n      return $fieldList\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const handleDatasourceChange = async (event) => {\n    const { name, value } = event.target\n    setFieldList([])\n    setFields([])\n    await getDocList(value)\n  }\n\n  const handleDocChange = async (event) => {\n    const { name, value } = event.target\n    setFieldList([])\n    setFields([])\n    await getFieldList(datasource, value)\n  }\n\n  const handleFieldChange = event => {\n    const { value } = event.target\n    setFields(value)\n  }\n\n  const handlePropertiesChange = (event) => {\n    const { name, value } = event.target\n    setProperties({ ...properties, [name]: value })\n  }\n\n  useEffect(() => {\n    getDatasources()\n  }, [])\n\n  const handleSourceChange = (event) => {\n    const { value } = event.target\n    setSelectionOption(value)\n  }\n\n  useEffect(() => {\n    const getFormGroups = async () => {\n      try {\n        const $formGroups = await WidgetSettingsActions.getFormGroupWidgets()\n        setFormGroups($formGroups)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    getFormGroups()\n  }, [])\n\n  const handleSelectFormGroup = event => {\n    const { value } = event.target\n    setSelectedFormGroup(value)\n  }\n\n  const handleLinkToFormGroup = event => {\n    const { checked } = event.target\n    if (!checked)\n      setSelectedFormGroup(null)\n    setLinkToFormGroup(checked)\n  }\n\n  const renderFormGroupSelection = _ => linkToFormGroup ? (\n    <FormControl fullWidth>\n      <InputLabel id=\"form-group-title\">Form Group</InputLabel>\n      <Select\n        fullWidth\n        labelId=\"form-group-title\"\n        value={selectedFormGroup}\n        onChange={handleSelectFormGroup}\n      >\n        {\n          formGroups.map(formGroup => (\n            <MenuItem value={formGroup.id}>{formGroup.properties.name}</MenuItem>\n          ))\n        }\n      </Select>\n    </FormControl>\n  ) : (\n      <div></div>\n    )\n\n  const renderFieldSettings = () => fieldList.length ?\n    (\n      <div>\n        <h2 className={classes.h2}>\n          <span className={classes.span}>Fields Settings</span>\n        </h2>\n        <RadioGroup onChange={handleFieldChange}>\n          {\n            fieldList.map(field => (\n              <FormControlLabel\n                key={field}\n                control={<Radio value={field} />}\n                label={field}\n              />))\n          }\n        </RadioGroup>\n        <Typography style={{ fontSize: 12, color: '#F00', marginTop: 10 }}>\n          * You can only select one field in a select field.\n    </Typography>\n      </div>\n    ) : (\n      <div>\n        \n      </div>\n    )\n\n    const saveConfigData = async () => {\n      try {\n        const data = {\n          dataSourceId: datasource,\n          config: {\n            docId: doc,\n            fields: [fields],\n            type: selectionOption == 'datasource' ? 'simple' : 'constant',\n            func: 'find',\n            query: {},\n            values: selectionOption == 'datasource' ? [] : []\n          },\n          properties,\n          type: 'Select'\n        }\n        if (isAdding) {\n          onWidgetAdd(data)\n        } else {\n          const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data)\n          handleSettingsClose(update)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n\n  return (\n    <div className={classes.list} role=\"presentation\">\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Widget Info</span>\n      </h2>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Title</InputLabel>\n        <Input />\n      </FormControl>\n\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Widget Properties</span>\n      </h2>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Label</InputLabel>\n        <Input name='label' onChange={handlePropertiesChange} value={properties.label} />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>ID</InputLabel>\n        <Input name='id' onChange={handlePropertiesChange} value={properties.id} />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Name</InputLabel>\n        <Input name='name' onChange={handlePropertiesChange} value={properties.name} />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Class name</InputLabel>\n        <Input name='className' onChange={handlePropertiesChange} value={properties.className} />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <FormControlLabel\n          control={<Checkbox checked={linkToFormGroup} onChange={handleLinkToFormGroup} />}\n          label=\"Link To Form Group?\"\n        />\n      </FormControl>\n\n      {renderFormGroupSelection()}\n\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Unique Properties</span>\n      </h2>\n      <FormGroup row>\n        <RadioGroup onChange={handleSourceChange} value={selectionOption} style={{ justifyContent: 'space-evenly', width: '100%', flexDirection: 'row' }}>\n          <FormControlLabel value=\"datasource\" control={<Radio />} label=\"From Data Source\" />\n          <FormControlLabel value=\"fixed\" control={<Radio />} label=\"Fixed Values\" />\n        </RadioGroup>\n      </FormGroup>\n      {\n        selectionOption == 'datasource' ? (\n          <div>\n            <FormControl fullWidth className={classes.formControl}>\n              <InputLabel id=\"data-source\">Data Source</InputLabel>\n              <Select\n                name=\"datasource\"\n                labelId=\"data-source\"\n                value={datasource}\n                onChange={handleDatasourceChange}\n              >\n                {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\n              </Select>\n            </FormControl>\n\n            <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\n              <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\n              <Select\n                name=\"docList\"\n                labelId=\"doc-list\"\n                value={doc}\n                onChange={handleDocChange}\n              >\n                {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\n              </Select>\n            </FormControl>\n            {renderFieldSettings()}\n          </div>\n        ) : (\n            <div>\n\n            </div>\n          )\n      }\n\n      <Button onClick={saveConfigData} fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\n    </div>\n  )\n}\n\nexport default SelectWidgetSettings"]},"metadata":{},"sourceType":"module"}