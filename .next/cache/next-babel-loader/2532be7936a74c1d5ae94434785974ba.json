{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/form-controls/autocomplete/autocomplete-widget-settings.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Select from '@material-ui/core/Select';\nimport DataSourceActions from '../../../../actions/datasource.actions';\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions';\nimport Swal from 'sweetalert2';\nimport { Typography } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    list: {\n      width: 500,\n      paddingLeft: \"15px\",\n      paddingRight: \"15px\",\n      paddingTop: \"15px\"\n    },\n    h2: {\n      width: '100%',\n      textAlign: 'center',\n      borderBottom: '1px solid #000',\n      lineHeight: '0.1em',\n      marginTop: \"20px\",\n      marginBottom: \"20px\",\n      fontFamily: 'Roboto',\n      fontSize: '13px',\n      color: \"#3F51B5\"\n    },\n    span: {\n      background: '#fff',\n      padding: '0 10px'\n    },\n    formControl: {\n      marginTop: \"15px\"\n    }\n  };\n});\n\nvar AutoCompleteWidgetSettings = function AutoCompleteWidgetSettings(_ref) {\n  var widget = _ref.widget,\n      handleSettingsClose = _ref.handleSettingsClose,\n      isAdding = _ref.isAdding,\n      onWidgetAdd = _ref.onWidgetAdd;\n  var classes = useStyles();\n\n  var _useState = useState('datasource'),\n      selectionOption = _useState[0],\n      setSelectionOption = _useState[1];\n\n  var _useState2 = useState([]),\n      datasources = _useState2[0],\n      setDatasources = _useState2[1];\n\n  var _useState3 = useState(!isAdding ? widget.dataSourceId : ''),\n      datasource = _useState3[0],\n      setDatasource = _useState3[1];\n\n  var _useState4 = useState([]),\n      docList = _useState4[0],\n      setDocList = _useState4[1];\n\n  var _useState5 = useState(!isAdding ? widget.config.docId : ''),\n      doc = _useState5[0],\n      setDoc = _useState5[1];\n\n  var _useState6 = useState([]),\n      fieldList = _useState6[0],\n      setFieldList = _useState6[1];\n\n  var _useState7 = useState(!isAdding ? widget.config.fields : ''),\n      fields = _useState7[0],\n      setFields = _useState7[1];\n\n  var getDatasources = function getDatasources() {\n    var $datasources, $docList, $fieldList;\n    return _regeneratorRuntime.async(function getDatasources$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(DataSourceActions.getDatasources({}));\n\n          case 3:\n            $datasources = _context.sent;\n\n            if (isAdding) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(DataSourceActions.getDocList(datasource));\n\n          case 7:\n            $docList = _context.sent;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(DataSourceActions.getFieldList(datasource, doc));\n\n          case 10:\n            $fieldList = _context.sent;\n            setDocList($docList);\n            setFieldList($fieldList);\n\n          case 13:\n            setDatasources($datasources);\n            return _context.abrupt(\"return\", $datasources);\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 17]]);\n  };\n\n  var getDocList = function getDocList(id) {\n    var $docList;\n    return _regeneratorRuntime.async(function getDocList$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            setDatasource(id);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(DataSourceActions.getDocList(id));\n\n          case 4:\n            $docList = _context2.sent;\n            setDocList($docList);\n            return _context2.abrupt(\"return\", $docList);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  };\n\n  var getFieldList = function getFieldList(id, docId) {\n    var $fieldList;\n    return _regeneratorRuntime.async(function getFieldList$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            setDoc(docId);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(DataSourceActions.getFieldList(id, docId));\n\n          case 4:\n            $fieldList = _context3.sent;\n            setFieldList($fieldList);\n            return _context3.abrupt(\"return\", $fieldList);\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  };\n\n  var handleDatasourceChange = function handleDatasourceChange(event) {\n    var _event$target, name, value;\n\n    return _regeneratorRuntime.async(function handleDatasourceChange$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _event$target = event.target, name = _event$target.name, value = _event$target.value;\n            setFieldList([]);\n            setFields([]);\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(getDocList(value));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  };\n\n  var handleDocChange = function handleDocChange(event) {\n    var _event$target2, name, value;\n\n    return _regeneratorRuntime.async(function handleDocChange$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _event$target2 = event.target, name = _event$target2.name, value = _event$target2.value;\n            setFieldList([]);\n            setFields([]);\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(getFieldList(datasource, value));\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  };\n\n  var handleFieldChange = function handleFieldChange(event) {\n    var value = event.target.value;\n    console.log(value);\n    setFields(value);\n  };\n\n  useEffect(function () {\n    getDatasources();\n  }, []);\n\n  var handleSourceChange = function handleSourceChange(event) {\n    var value = event.target.value;\n    setSelectionOption(value);\n  };\n\n  var renderFieldSettings = function renderFieldSettings() {\n    return fieldList.length ? __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      className: classes.h2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: classes.span,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Fields Settings\")), __jsx(RadioGroup, {\n      onChange: handleFieldChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, fieldList.map(function (field) {\n      return __jsx(FormControlLabel, {\n        key: field,\n        control: __jsx(Radio, {\n          value: field,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }),\n        label: field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      });\n    })), __jsx(Typography, {\n      style: {\n        fontSize: 12,\n        color: '#F00',\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"* You can only select one field in an autocomplete textfield.\")) : __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Widget Info\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Title\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })), __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Widget Properties\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Label\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"ID\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Name\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Placeholder\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Class name\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Value\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })), __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Unique Properties\")), __jsx(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, __jsx(RadioGroup, {\n    onChange: handleSourceChange,\n    value: selectionOption,\n    style: {\n      justifyContent: 'space-evenly',\n      width: '100%',\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, __jsx(FormControlLabel, {\n    value: \"datasource\",\n    control: __jsx(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }),\n    label: \"From Data Source\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }), __jsx(FormControlLabel, {\n    value: \"fixed\",\n    control: __jsx(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }),\n    label: \"Fixed Values\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }))), selectionOption == 'datasource' ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    id: \"data-source\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Data Source\"), __jsx(Select, {\n    name: \"datasource\",\n    labelId: \"data-source\",\n    value: datasource,\n    onChange: handleDatasourceChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, datasources.map(function (item) {\n    return __jsx(MenuItem, {\n      key: item.id,\n      value: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, item.title);\n  }))), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    disabled: datasource ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    id: \"doc-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Table/Collection\"), __jsx(Select, {\n    name: \"docList\",\n    labelId: \"doc-list\",\n    value: doc,\n    onChange: handleDocChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, docList.map(function (item) {\n    return __jsx(MenuItem, {\n      key: item,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, item);\n  }))), renderFieldSettings()) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }), __jsx(Button, {\n    fullWidth: true,\n    color: \"primary\",\n    className: classes.formControl,\n    style: {\n      marginBottom: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"Save\"));\n};\n\nexport default AutoCompleteWidgetSettings;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/form-controls/autocomplete/autocomplete-widget-settings.jsx"],"names":["useState","useEffect","makeStyles","Button","MenuItem","Input","InputLabel","FormControl","FormGroup","FormControlLabel","Radio","Checkbox","RadioGroup","Select","DataSourceActions","WidgetSettingsActions","Swal","Typography","useStyles","theme","list","width","paddingLeft","paddingRight","paddingTop","h2","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","formControl","AutoCompleteWidgetSettings","widget","handleSettingsClose","isAdding","onWidgetAdd","classes","selectionOption","setSelectionOption","datasources","setDatasources","dataSourceId","datasource","setDatasource","docList","setDocList","config","docId","doc","setDoc","fieldList","setFieldList","fields","setFields","getDatasources","$datasources","getDocList","$docList","getFieldList","$fieldList","console","log","id","handleDatasourceChange","event","target","name","value","handleDocChange","handleFieldChange","handleSourceChange","renderFieldSettings","length","map","field","justifyContent","flexDirection","item","title"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Select from '@material-ui/core/Select'\nimport DataSourceActions from '../../../../actions/datasource.actions'\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\nimport Swal from 'sweetalert2'\nimport { Typography } from '@material-ui/core'\n\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}))\n\nconst AutoCompleteWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\n  const classes = useStyles()\n  const [selectionOption, setSelectionOption] = useState('datasource')\n  const [datasources, setDatasources] = useState([])\n  const [datasource, setDatasource] = useState(!isAdding ? widget.dataSourceId : '')\n  const [docList, setDocList] = useState([])\n  const [doc, setDoc] = useState(!isAdding ? widget.config.docId : '')\n  const [fieldList, setFieldList] = useState([])\n  const [fields, setFields] = useState(!isAdding ? widget.config.fields : '')\n\n  const getDatasources = async () => {\n    try {\n      const $datasources = await DataSourceActions.getDatasources({})\n      if (!isAdding) {\n        const $docList = await DataSourceActions.getDocList(datasource)\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\n        setDocList($docList)\n        setFieldList($fieldList)\n      }\n      setDatasources($datasources)\n      return $datasources\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getDocList = async (id) => {\n    try {\n      setDatasource(id)\n      const $docList = await DataSourceActions.getDocList(id)\n      setDocList($docList)\n      return $docList\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getFieldList = async (id, docId) => {\n    try {\n      setDoc(docId)\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\n      setFieldList($fieldList)\n      return $fieldList\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const handleDatasourceChange = async (event) => {\n    const { name, value } = event.target\n    setFieldList([])\n    setFields([])\n    await getDocList(value)\n  }\n\n  const handleDocChange = async (event) => {\n    const { name, value } = event.target\n    setFieldList([])\n    setFields([])\n    await getFieldList(datasource, value)\n  }\n\n  const handleFieldChange = event => {\n    const { value } = event.target\n    console.log(value)\n    setFields(value)\n  }\n\n  useEffect(() => {\n    getDatasources()\n  }, [])\n\n  const handleSourceChange = (event) => {\n    const { value } = event.target\n    setSelectionOption(value)\n  }\n\n  const renderFieldSettings = () => fieldList.length ?\n    (\n      <div>\n        <h2 className={classes.h2}>\n          <span className={classes.span}>Fields Settings</span>\n        </h2>\n        <RadioGroup onChange={handleFieldChange}>\n          {\n            fieldList.map(field => (\n              <FormControlLabel\n                key={field}\n                control={<Radio value={field} />}\n                label={field}\n              />))\n          }\n        </RadioGroup>\n        <Typography style={{ fontSize: 12, color: '#F00', marginTop: 10 }}>\n          * You can only select one field in an autocomplete textfield.\n    </Typography>\n      </div>\n    ) : (\n      <div>\n\n      </div>\n    )\n\n  return (\n    <div className={classes.list} role=\"presentation\">\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Widget Info</span>\n      </h2>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Title</InputLabel>\n        <Input />\n      </FormControl>\n\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Widget Properties</span>\n      </h2>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Label</InputLabel>\n        <Input />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>ID</InputLabel>\n        <Input />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Name</InputLabel>\n        <Input />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Placeholder</InputLabel>\n        <Input />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Class name</InputLabel>\n        <Input />\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel>Value</InputLabel>\n        <Input />\n      </FormControl>\n\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Unique Properties</span>\n      </h2>\n      <FormGroup row>\n        <RadioGroup onChange={handleSourceChange} value={selectionOption} style={{ justifyContent: 'space-evenly', width: '100%', flexDirection: 'row' }}>\n          <FormControlLabel value=\"datasource\" control={<Radio />} label=\"From Data Source\" />\n          <FormControlLabel value=\"fixed\" control={<Radio />} label=\"Fixed Values\" />\n        </RadioGroup>\n      </FormGroup>\n      {\n        selectionOption == 'datasource' ? (\n          <div>\n            <FormControl fullWidth className={classes.formControl}>\n              <InputLabel id=\"data-source\">Data Source</InputLabel>\n              <Select\n                name=\"datasource\"\n                labelId=\"data-source\"\n                value={datasource}\n                onChange={handleDatasourceChange}\n              >\n                {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\n              </Select>\n            </FormControl>\n\n            <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\n              <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\n              <Select\n                name=\"docList\"\n                labelId=\"doc-list\"\n                value={doc}\n                onChange={handleDocChange}\n              >\n                {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\n              </Select>\n            </FormControl>\n            {renderFieldSettings()}\n          </div>\n        ) : (\n            <div>\n\n            </div>\n          )\n      }\n      <Button fullWidth color=\"primary\" className={classes.formControl} style={{ marginBottom: 10 }}>Save</Button>\n    </div>\n  )\n}\n\nexport default AutoCompleteWidgetSettings"]},"metadata":{},"sourceType":"module"}