{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/form-controls/autocomplete/autocomplete-widget.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions';\nvar useStyles = makeStyles(function (theme) {\n  return {};\n});\n\nvar AutoCompleteWidget = function AutoCompleteWidget(_ref) {\n  var widgetId = _ref.widgetId;\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      widget = _useState[0],\n      setWidget = _useState[1];\n\n  var _useState2 = useState({\n    right: false\n  }),\n      menuState = _useState2[0],\n      setMenuState = _useState2[1];\n\n  useEffect(function () {\n    var getData = function getData() {\n      var $widget;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(WidgetSettingsActions.getWidgetSettingsById(widgetId));\n\n            case 3:\n              $widget = _context.sent;\n              console.log($widget);\n              setWidget($widget);\n              return _context.abrupt(\"return\", $widget);\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    };\n\n    getData();\n  }, []);\n  return __jsx(Autocomplete, {\n    id: widget.properties.id,\n    placeholder: widget.properties.placeholder,\n    className: widget.properties.className,\n    value: widget.properties.value,\n    options: top100Films,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.title;\n    },\n    style: {\n      width: 300\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({\n        name: widget.properties.name\n      }, params, {\n        label: widget.properties.label,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n};\n\nexport default AutoCompleteWidget;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/form-controls/autocomplete/autocomplete-widget.jsx"],"names":["useState","useEffect","makeStyles","TextField","Autocomplete","WidgetSettingsActions","useStyles","theme","AutoCompleteWidget","widgetId","classes","widget","setWidget","right","menuState","setMenuState","getData","getWidgetSettingsById","$widget","console","log","properties","id","placeholder","className","value","top100Films","option","title","width","params","name","label"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,qBAAP,MAAkC,4CAAlC;AAEA,IAAMC,SAAS,GAAGJ,UAAU,CAAC,UAAAK,KAAK;AAAA,SAAK,EAAL;AAAA,CAAN,CAA5B;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC3C,MAAMC,OAAO,GAAGJ,SAAS,EAAzB;;AAD2C,kBAEfN,QAAQ,CAAC,IAAD,CAFO;AAAA,MAEpCW,MAFoC;AAAA,MAE5BC,SAF4B;;AAAA,mBAGTZ,QAAQ,CAAC;AAAEa,IAAAA,KAAK,EAAE;AAAT,GAAD,CAHC;AAAA,MAGpCC,SAHoC;AAAA,MAGzBC,YAHyB;;AAK3Cd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMe,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEUX,qBAAqB,CAACY,qBAAtB,CAA4CR,QAA5C,CAFV;;AAAA;AAENS,cAAAA,OAFM;AAGZC,cAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAN,cAAAA,SAAS,CAACM,OAAD,CAAT;AAJY,+CAKLA,OALK;;AAAA;AAAA;AAAA;AAOZC,cAAAA,OAAO,CAACC,GAAR;;AAPY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAUAJ,IAAAA,OAAO;AACR,GAZQ,EAYN,EAZM,CAAT;AAcA,SACE,MAAC,YAAD;AACE,IAAA,EAAE,EAAEL,MAAM,CAACU,UAAP,CAAkBC,EADxB;AAEE,IAAA,WAAW,EAAEX,MAAM,CAACU,UAAP,CAAkBE,WAFjC;AAGE,IAAA,SAAS,EAAEZ,MAAM,CAACU,UAAP,CAAkBG,SAH/B;AAIE,IAAA,KAAK,EAAEb,MAAM,CAACU,UAAP,CAAkBI,KAJ3B;AAKE,IAAA,OAAO,EAAEC,WALX;AAME,IAAA,cAAc,EAAE,wBAACC,MAAD;AAAA,aAAYA,MAAM,CAACC,KAAnB;AAAA,KANlB;AAOE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAPT;AAQE,IAAA,WAAW,EAAE,qBAACC,MAAD;AAAA,aAAY,MAAC,SAAD;AAAW,QAAA,IAAI,EAAEnB,MAAM,CAACU,UAAP,CAAkBU;AAAnC,SAA6CD,MAA7C;AAAqD,QAAA,KAAK,EAAEnB,MAAM,CAACU,UAAP,CAAkBW,KAA9E;AAAqF,QAAA,OAAO,EAAC,UAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;AAAA,KARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAYD,CA/BD;;AAiCA,eAAexB,kBAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\n\nconst useStyles = makeStyles(theme => ({\n\n}))\n\nconst AutoCompleteWidget = ({ widgetId }) => {\n  const classes = useStyles()\n  const [widget, setWidget] = useState(null)\n  const [menuState, setMenuState] = useState({ right: false })\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\n        console.log($widget)\n        setWidget($widget)\n        return $widget\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    getData()\n  }, [])\n\n  return (\n    <Autocomplete\n      id={widget.properties.id}\n      placeholder={widget.properties.placeholder}\n      className={widget.properties.className}\n      value={widget.properties.value}\n      options={top100Films}\n      getOptionLabel={(option) => option.title}\n      style={{ width: 300 }}\n      renderInput={(params) => <TextField name={widget.properties.name} {...params} label={widget.properties.label} variant=\"outlined\" />}\n    />\n  )\n}\n\nexport default AutoCompleteWidget"]},"metadata":{},"sourceType":"module"}