{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridLayout from 'react-grid-layout';\nimport Cookies from 'next-cookies';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport ArrowLeft from '@material-ui/icons/ArrowLeft';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport Drawer from '@material-ui/core/Drawer';\nimport DashboardActions from '../../../actions/dashboard.actions';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nimport WidgetSidemenu from '../../../components/dashboards/widgets-menu';\nimport { TableWidget, LineChartWidget, PieChartWidget, DonutChartWidget, BarChartWidget, AreaChartWidget } from '../../../components/widgets';\nimport { useRouter } from 'next/router';\nvar useStyles = makeStyles({\n  list: {\n    width: 500\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\n\nvar EditDashboard = function EditDashboard(WidgetSettings) {\n  var classes = useStyles();\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useState = useState({\n    right: false\n  }),\n      menuState = _useState[0],\n      setMenuState = _useState[1];\n\n  var _useState2 = useState(Object.values(WidgetSettings)),\n      layout = _useState2[0],\n      setLayout = _useState2[1];\n\n  var onLayoutChange = function onLayoutChange($event) {\n    var layouts;\n    return _regeneratorRuntime.async(function onLayoutChange$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            layouts = layout.map(function (item) {\n              var $eventItem = $event.filter(function ($item) {\n                return $item.i == item.layout.i;\n              })[0];\n              return _objectSpread({}, item, {\n                layout: $eventItem\n              });\n            });\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Promise.all(layouts.map(function (item) {\n              return WidgetSettingsActions.updateWidgetSettings(item.id, item);\n            })));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var toggleDrawer = function toggleDrawer(side, open) {\n    return function (event) {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) return;\n      setMenuState(_objectSpread({}, menuState, _defineProperty({}, side, open)));\n    };\n  };\n\n  var decideWidget = function decideWidget(widget) {\n    switch (widget.type) {\n      case 'Table':\n        return __jsx(TableWidget, {\n          widgetId: widget.id\n        });\n\n      case 'Line Chart':\n        return __jsx(LineChartWidget, null);\n\n      case 'Bar Chart':\n        return __jsx(BarChartWidget, null);\n\n      case 'Pie Chart':\n        return __jsx(PieChartWidget, null);\n\n      case 'Donut Chart':\n        return __jsx(DonutChartWidget, null);\n\n      case 'Area Chart':\n        return __jsx(AreaChartWidget, null);\n    }\n  };\n\n  var addWidget = function addWidget(title, _) {\n    var layoutItem, saveWidget;\n    return _regeneratorRuntime.async(function addWidget$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            layoutItem = {\n              layout: {\n                i: uuidv4(),\n                x: 0,\n                y: 0,\n                w: 6,\n                h: 11,\n                maxW: 16,\n                isDraggable: true,\n                isResizable: true\n              },\n              type: title\n            };\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.createWidgetSettings(layoutItem));\n\n          case 4:\n            saveWidget = _context2.sent;\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(DashboardActions.addWidgetToDashboard(id, saveWidget.id));\n\n          case 7:\n            layoutItem.id = saveWidget.id;\n            setLayout([].concat(_toConsumableArray(layout), [layoutItem]));\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  var sideList = function sideList() {\n    return __jsx(\"div\", {\n      className: classes.list,\n      role: \"presentation\"\n    }, __jsx(WidgetSidemenu, {\n      onWidgetClick: addWidget,\n      widgetSettings: Object.values(WidgetSettings)\n    }));\n  };\n\n  var renderWidgets = function renderWidgets() {\n    return layout.map(function (item, i) {\n      return __jsx(\"div\", {\n        key: item.layout.i\n      }, decideWidget(item));\n    });\n  };\n\n  return __jsx(\"div\", null, __jsx(Drawer, {\n    anchor: \"right\",\n    open: menuState.right,\n    onClose: toggleDrawer('right', false)\n  }, sideList('right')), __jsx(Card, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      justifySelf: 'flex-start',\n      display: 'flex',\n      flex: 1\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"back\",\n    size: \"medium\",\n    style: {\n      outline: 'none'\n    }\n  }, __jsx(ArrowLeft, {\n    fontSize: \"default\"\n  }))), __jsx(\"div\", {\n    style: {\n      justifySelf: 'flex-end',\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'flex-end',\n      paddingRight: '10px'\n    }\n  }, __jsx(Button, {\n    style: {\n      outline: 'none'\n    },\n    size: \"small\",\n    startIcon: __jsx(SaveIcon, null)\n  }, \"Save\"), __jsx(Button, {\n    style: {\n      marginLeft: '10px',\n      outline: 'none'\n    },\n    size: \"small\",\n    onClick: toggleDrawer('right', true),\n    startIcon: __jsx(DashboardIcon, null)\n  }, \"Widgets\"))), __jsx(GridLayout, {\n    className: \"layout\",\n    cols: 16,\n    rowHeight: 30,\n    width: 1920,\n    layout: layout.map(function (item) {\n      return item.layout;\n    }),\n    onLayoutChange: onLayoutChange\n  }, renderWidgets()));\n};\n\nEditDashboard.getInitialProps = function _callee(req) {\n  var Authorization, WidgetSettings;\n  return _regeneratorRuntime.async(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          Authorization = Cookies(req).id;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(DashboardActions.getWidgetSettings({\n            Authorization: Authorization,\n            id: \"5e413f33f6af6d17b44df269\"\n          }));\n\n        case 3:\n          WidgetSettings = _context3.sent;\n          return _context3.abrupt(\"return\", WidgetSettings);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default EditDashboard;","map":null,"metadata":{},"sourceType":"module"}