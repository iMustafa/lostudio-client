{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/dashboards/add-dashboard-card.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport DashboardActions from \"../../actions/dashboard.actions\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    height: 258,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    paddingTop: 15\n  },\n  media: {\n    height: 140\n  },\n  title: {\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    color: \"#3F51B5\"\n  }\n}));\n\nconst AddDashboardCard = ({\n  type\n}) => {\n  const classes = useStyles();\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    title: \"\",\n    type,\n    description: \"\"\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState(_objectSpread({}, state, {\n      [name]: value\n    }));\n  };\n\n  const createProject = async () => {\n    if (state.title && state.description) {\n      try {\n        const {\n          title,\n          description,\n          type\n        } = state;\n        const project = await DashboardActions.createDashboard({\n          dashboard: {\n            title,\n            description,\n            type\n          }\n        });\n        console.log(project);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  return __jsx(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(Typography, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Create new project\"), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(TextField, {\n    fullWidth: true,\n    name: \"title\",\n    label: \"Title\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), __jsx(TextField, {\n    fullWidth: true,\n    multiline: true,\n    name: \"description\",\n    label: \"Description\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), __jsx(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    fullWidth: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Create\")));\n};\n\nexport default AddDashboardCard;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/dashboards/add-dashboard-card.jsx"],"names":["useState","useEffect","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","FormGroup","FormControl","TextField","InputLabel","DashboardActions","useStyles","theme","card","height","display","flexDirection","justifyContent","paddingTop","media","title","textAlign","textTransform","color","AddDashboardCard","type","classes","state","setState","description","handleChange","event","name","value","target","createProject","project","createDashboard","dashboard","console","log","e"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport DashboardActions from \"../../actions/dashboard.actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: 258,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    paddingTop: 15,\n  },\n  media: {\n    height: 140,\n  },\n  title: {\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    color: \"#3F51B5\",\n  },\n}));\n\nconst AddDashboardCard = ({ type }) => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    title: \"\",\n    type,\n    description: \"\",\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const createProject = async () => {\n    if (state.title && state.description) {\n      try {\n        const { title, description, type } = state;\n        const project = await DashboardActions.createDashboard({\n          dashboard: { title, description, type },\n        });\n        console.log(project)\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  return (\n    <Card className={classes.card}>\n      <Typography className={classes.title}>Create new project</Typography>\n\n      <CardContent>\n        <TextField\n          fullWidth\n          name=\"title\"\n          label=\"Title\"\n          onChange={handleChange}\n        />\n        <TextField\n          fullWidth\n          multiline\n          name=\"description\"\n          label=\"Description\"\n          onChange={handleChange}\n        />\n      </CardContent>\n\n      <CardActions>\n        <Button fullWidth color=\"primary\">\n          Create\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default AddDashboardCard;\n"]},"metadata":{},"sourceType":"module"}