{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/charts/bar-chart/bar-chart-widget.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, BarSeries, Title, ArgumentAxis, ValueAxis } from '@devexpress/dx-react-chart-material-ui';\nimport { Animation } from '@devexpress/dx-react-chart';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Drawer from '@material-ui/core/Drawer';\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions';\nimport BarChartWidgetSettings from './bar-chart-widget-settings';\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500\n  },\n  widgetActions: {\n    display: 'flex',\n    backgroundColor: \"#3F51B5\",\n    borderTopRightRadius: \"5px\",\n    borderTopLeftRadius: \"5px\"\n  },\n  widgetTitle: {\n    flex: 1,\n    display: 'flex',\n    alignContent: 'center',\n    alignItems: 'center',\n    paddingLeft: \"10px\"\n  },\n  actionButtons: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst BarChartWidget = ({\n  widgetId\n}) => {\n  const classes = useStyles();\n  const {\n    0: widget,\n    1: setWidget\n  } = useState(null);\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: isLoadingData,\n    1: setIsLoadingData\n  } = useState(false);\n  const {\n    0: refresh,\n    1: setRefresh\n  } = useState(0);\n  const {\n    0: menuState,\n    1: setMenuState\n  } = useState({\n    right: false\n  });\n\n  const getWidgetData = async () => {\n    try {\n      const $data = await WidgetSettingsActions.executeWidgetQuery(widgetId);\n      console.log($data, $data);\n      setData($data);\n      return $data;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getWidget = async () => {\n    try {\n      const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId);\n      console.log('$widget', $widget);\n      setWidget($widget);\n      return $widget;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getWidget();\n    getWidgetData();\n  }, [refresh]);\n\n  const refreshData = async () => {\n    setIsLoadingData(true);\n    getWidget();\n    getWidgetData();\n    setIsLoadingData(false);\n  };\n\n  const handleSettingsClose = () => {\n    setRefresh(refresh + 1);\n    toggleDrawer('right', false);\n  };\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) return;\n    setMenuState(_objectSpread({}, menuState, {\n      [side]: open\n    }));\n  };\n\n  const renderChart = () => {\n    return isLoadingData || !widget ? __jsx(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }) : __jsx(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(Chart, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(ArgumentAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), __jsx(ValueAxis, {\n      max: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), __jsx(BarSeries, {\n      valueField: \"total\",\n      argumentField: \"month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), __jsx(Title, {\n      text: \"World population\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), __jsx(Animation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })));\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.widgetActions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.widgetTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(Typography, {\n    style: {\n      color: \"#FFF\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Widget Title\")), __jsx(\"div\", {\n    className: classes.actionButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: toggleDrawer('right', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, __jsx(SettingsIcon, {\n    style: {\n      color: \"#FFF\"\n    },\n    fontSize: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), __jsx(IconButton, {\n    onClick: refreshData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(RefreshIcon, {\n    style: {\n      color: \"#FFF\"\n    },\n    fontSize: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, renderChart()), __jsx(Drawer, {\n    anchor: \"right\",\n    open: menuState.right,\n    onClose: toggleDrawer('right', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(BarChartWidgetSettings, {\n    widget: widget,\n    handleSettingsClose: handleSettingsClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })));\n};\n\nexport default BarChartWidget;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/charts/bar-chart/bar-chart-widget.jsx"],"names":["useState","useEffect","makeStyles","Paper","Chart","BarSeries","Title","ArgumentAxis","ValueAxis","Animation","Typography","CircularProgress","IconButton","RefreshIcon","SettingsIcon","Drawer","WidgetSettingsActions","BarChartWidgetSettings","useStyles","theme","list","width","widgetActions","display","backgroundColor","borderTopRightRadius","borderTopLeftRadius","widgetTitle","flex","alignContent","alignItems","paddingLeft","actionButtons","justifyContent","BarChartWidget","widgetId","classes","widget","setWidget","data","setData","isLoadingData","setIsLoadingData","refresh","setRefresh","menuState","setMenuState","right","getWidgetData","$data","executeWidgetQuery","console","log","e","getWidget","$widget","getWidgetSettingsById","refreshData","handleSettingsClose","toggleDrawer","side","open","event","type","key","renderChart","color"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport {\n  Chart,\n  BarSeries,\n  Title,\n  ArgumentAxis,\n  ValueAxis,\n} from '@devexpress/dx-react-chart-material-ui'\nimport { Animation } from '@devexpress/dx-react-chart'\nimport Typography from '@material-ui/core/Typography'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport IconButton from '@material-ui/core/IconButton'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport Drawer from '@material-ui/core/Drawer'\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\nimport BarChartWidgetSettings from './bar-chart-widget-settings'\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500\n  },\n  widgetActions: {\n    display: 'flex',\n    backgroundColor: \"#3F51B5\",\n    borderTopRightRadius: \"5px\",\n    borderTopLeftRadius: \"5px\",\n  },\n  widgetTitle: {\n    flex: 1,\n    display: 'flex',\n    alignContent: 'center',\n    alignItems: 'center',\n    paddingLeft: \"10px\"\n  },\n  actionButtons: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'flex-end'\n  }\n}))\n\nconst BarChartWidget = ({ widgetId }) => {\n  const classes = useStyles()\n  const [widget, setWidget] = useState(null)\n  const [data, setData] = useState([])\n  const [isLoadingData, setIsLoadingData] = useState(false)\n  const [refresh, setRefresh] = useState(0)\n  const [menuState, setMenuState] = useState({ right: false })\n\n  const getWidgetData = async () => {\n    try {\n      const $data = await WidgetSettingsActions.executeWidgetQuery(widgetId)\n      console.log($data, $data)\n      setData($data)\n      return $data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getWidget = async () => {\n    try {\n      const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\n      console.log('$widget', $widget)\n      setWidget($widget)\n      return $widget\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  useEffect(() => {\n    getWidget()\n    getWidgetData()\n  }, [refresh])\n\n  const refreshData = async () => {\n    setIsLoadingData(true)\n    getWidget()\n    getWidgetData()\n    setIsLoadingData(false)\n  }\n\n  const handleSettingsClose = () => {\n    setRefresh(refresh + 1)\n    toggleDrawer('right', false)\n  }\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift'))\n      return\n    setMenuState({ ...menuState, [side]: open })\n  }\n\n  const renderChart = () => {\n    return isLoadingData || !widget ? (<CircularProgress />) : (\n      <Paper>\n        <Chart\n          data={data}\n        >\n          <ArgumentAxis />\n          <ValueAxis max={7} />\n\n          <BarSeries\n            valueField=\"total\"\n            argumentField=\"month\"\n          />\n          <Title text=\"World population\" />\n          <Animation />\n        </Chart>\n      </Paper>\n    )\n  }\n\n  return (\n    <div>\n      <div className={classes.widgetActions}>\n        <div className={classes.widgetTitle}>\n          <Typography style={{ color: \"#FFF\" }}>Widget Title</Typography>\n        </div>\n        <div className={classes.actionButtons}>\n          <IconButton onClick={toggleDrawer('right', true)}>\n            <SettingsIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\n          </IconButton>\n          <IconButton onClick={refreshData}>\n            <RefreshIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\n          </IconButton>\n        </div>\n      </div>\n      <div>\n        {renderChart()}\n      </div>\n      <Drawer anchor=\"right\" open={menuState.right} onClose={toggleDrawer('right', false)}>\n        <BarChartWidgetSettings widget={widget} handleSettingsClose={handleSettingsClose} />\n      </Drawer>\n    </div>\n  )\n}\n\nexport default BarChartWidget"]},"metadata":{},"sourceType":"module"}