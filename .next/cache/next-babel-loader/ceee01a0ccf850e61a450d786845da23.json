{"ast":null,"code":"import axios from 'axios';\nimport config from 'next/config';\nimport Cookie from 'js-cookie';\nconst {\n  API_URL\n} = config().publicRuntimeConfig;\nexport default class NotificationsActions {\n  static async getMyNotificationsCount({\n    Authorization,\n    userId\n  }) {\n    return axios.get(`${API_URL}/users/${userId || Cookie.get('userId')}/notifications/count`, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      },\n      params: {\n        filter: {\n          where: {\n            seen: false\n          }\n        }\n      }\n    }).then(res => res.data).catch(err => err);\n  }\n\n  static async getMyNotifications({\n    Authorization,\n    userId\n  }) {\n    return axios.get(`${API_URL}/users/${userId || Cookie.get('userId')}/notifications`, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err);\n  }\n\n  static async markAsSeen({\n    Authorization,\n    id\n  }) {\n    return axios.patch(`${API_URL}/Notifications/${id}`, {\n      seen: true\n    }, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err);\n  }\n\n}","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/actions/notifications.actions.ts"],"names":["axios","config","Cookie","API_URL","publicRuntimeConfig","NotificationsActions","getMyNotificationsCount","Authorization","userId","get","headers","params","filter","where","seen","then","res","data","catch","err","getMyNotifications","markAsSeen","id","patch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAGA,MAAM;AAAEC,EAAAA;AAAF,IAAcF,MAAM,GAAGG,mBAA7B;AAEA,eAAe,MAAMC,oBAAN,CAA2B;AAExC,eAAoBC,uBAApB,CAA4C;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,GAA5C,EAAgJ;AAC9I,WAAOR,KAAK,CACTS,GADI,CAEF,GAAEN,OAAQ,UAASK,MAAM,IAAIN,MAAM,CAACO,GAAP,CAAW,QAAX,CAAqB,sBAFhD,EAGH;AACEC,MAAAA,OAAO,EAAE;AAAEH,QAAAA,aAAa,EAAEA,aAAa,IAAIL,MAAM,CAACO,GAAP,CAAW,IAAX;AAAlC,OADX;AAEEE,MAAAA,MAAM,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR;AAAT;AAAV;AAFV,KAHG,EAOJC,IAPI,CAOCC,GAAG,IAAIA,GAAG,CAACC,IAPZ,EAQJC,KARI,CAQEC,GAAG,IAAIA,GART,CAAP;AASD;;AAED,eAAoBC,kBAApB,CAAuC;AAAEb,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,GAAvC,EAA6I;AAC3I,WAAOR,KAAK,CACTS,GADI,CACC,GAAEN,OAAQ,UAASK,MAAM,IAAIN,MAAM,CAACO,GAAP,CAAW,QAAX,CAAqB,gBADnD,EACoE;AAAEC,MAAAA,OAAO,EAAE;AAAEH,QAAAA,aAAa,EAAEA,aAAa,IAAIL,MAAM,CAACO,GAAP,CAAW,IAAX;AAAlC;AAAX,KADpE,EAEJM,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,IAFZ,EAGJC,KAHI,CAGEC,GAAG,IAAIA,GAHT,CAAP;AAID;;AAED,eAAoBE,UAApB,CAA+B;AAAEd,IAAAA,aAAF;AAAiBe,IAAAA;AAAjB,GAA/B,EAAqH;AACnH,WAAOtB,KAAK,CACTuB,KADI,CACG,GAAEpB,OAAQ,kBAAiBmB,EAAG,EADjC,EACoC;AAAER,MAAAA,IAAI,EAAE;AAAR,KADpC,EACoD;AAAEJ,MAAAA,OAAO,EAAE;AAAEH,QAAAA,aAAa,EAAEA,aAAa,IAAIL,MAAM,CAACO,GAAP,CAAW,IAAX;AAAlC;AAAX,KADpD,EAEJM,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACC,IAFZ,EAGJC,KAHI,CAGEC,GAAG,IAAIA,GAHT,CAAP;AAID;;AA1BuC","sourcesContent":["import axios from 'axios'\nimport config from 'next/config'\nimport Cookie from 'js-cookie'\nimport Notification from '../types/notification.types'\n\nconst { API_URL } = config().publicRuntimeConfig\n\nexport default class NotificationsActions {\n\n  public static async getMyNotificationsCount({ Authorization, userId }: { Authorization?: string, userId?: string }): Promise<{ count: Number }> {\n    return axios\n      .get(\n        `${API_URL}/users/${userId || Cookie.get('userId')}/notifications/count`,\n        {\n          headers: { Authorization: Authorization || Cookie.get('id') },\n          params: { filter: { where: { seen: false } } }\n        })\n      .then(res => res.data)\n      .catch(err => err)\n  }\n\n  public static async getMyNotifications({ Authorization, userId }: { Authorization?: string, userId?: string }): Promise<Array<Notification>> {\n    return axios\n      .get(`${API_URL}/users/${userId || Cookie.get('userId')}/notifications`, { headers: { Authorization: Authorization || Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err)\n  }\n\n  public static async markAsSeen({ Authorization, id }: { Authorization?: string, id: string }): Promise<Notification> {\n    return axios\n      .patch(`${API_URL}/Notifications/${id}`, { seen: true }, { headers: { Authorization: Authorization || Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err)\n  }\n\n}"]},"metadata":{},"sourceType":"module"}