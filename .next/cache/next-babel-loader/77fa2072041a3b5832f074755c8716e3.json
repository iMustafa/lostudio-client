{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\pages\\\\dashboards\\\\[id]\\\\edit.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridLayout from 'react-grid-layout';\nimport Cookies from 'next-cookies';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport ArrowLeft from '@material-ui/icons/ArrowLeft';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport Drawer from '@material-ui/core/Drawer';\nimport DashboardActions from '../../../actions/dashboard.actions';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nimport WidgetSidemenu from '../../../components/dashboards/widgets-menu';\nimport { TableWidget, LineChartWidget, PieChartWidget, DonutChartWidget, BarChartWidget, AreaChartWidget, TableWidgetSettings, LineChartWidgetSettings, PieChartWidgetSettings, DonutChartWidgetSettings, BarChartWidgetSettings, AreaChartWidgetSettings } from '../../../components/widgets';\nimport { useRouter } from 'next/router';\nconst useStyles = makeStyles({\n  list: {\n    width: 500\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\n\nconst EditDashboard = WidgetSettings => {\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    0: menuState,\n    1: setMenuState\n  } = useState({\n    right: false,\n    addWidget: false\n  });\n  const {\n    0: layout,\n    1: setLayout\n  } = useState(Object.values(WidgetSettings));\n  const {\n    0: addType,\n    1: setAddType\n  } = useState(null);\n\n  const onLayoutChange = async $event => {\n    try {\n      const layouts = layout.map(item => {\n        const $eventItem = $event.filter($item => $item.i == item.layout.i)[0];\n        return _objectSpread({}, item, {\n          layout: $eventItem\n        });\n      });\n      await Promise.all(layouts.map(item => WidgetSettingsActions.updateWidgetSettings(item.id, item)));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) return;\n    setMenuState(_objectSpread({}, menuState, {\n      [side]: open\n    }));\n  };\n\n  const decideWidget = widget => {\n    switch (widget.type) {\n      case 'Table':\n        return __jsx(TableWidget, {\n          widgetId: widget.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n\n      case 'Line Chart':\n        return __jsx(LineChartWidget, {\n          widgetId: widget.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n\n      case 'Bar Chart':\n        return __jsx(BarChartWidget, {\n          widgetId: widget.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n\n      case 'Pie Chart':\n        return __jsx(PieChartWidget, {\n          widgetId: widget.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n\n      case 'Donut Chart':\n        return __jsx(DonutChartWidget, {\n          widgetId: widget.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        });\n\n      case 'Area Chart':\n        return __jsx(AreaChartWidget, {\n          widgetId: widget.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n    }\n  };\n\n  const decideWidgetSettings = addType => {\n    console.log(addType);\n\n    switch (addType) {\n      case 'Table':\n        return __jsx(TableWidgetSettings, {\n          isAdding: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        });\n\n      case 'Line Chart':\n        return __jsx(LineChartWidgetSettings, {\n          isAdding: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n\n      case 'Bar Chart':\n        return __jsx(BarChartWidgetSettings, {\n          isAdding: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        });\n\n      case 'Pie Chart':\n        return __jsx(PieChartWidgetSettings, {\n          isAdding: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        });\n\n      case 'Donut Chart':\n        return __jsx(DonutChartWidgetSettings, {\n          isAdding: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        });\n\n      case 'Area Chart':\n        return __jsx(AreaChartWidgetSettings, {\n          isAdding: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n\n      default:\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        });\n    }\n  };\n\n  const addPredefinedWidget = async (widget, _) => {\n    try {\n      const $widget = _objectSpread({}, widget);\n\n      delete $widget.id;\n      delete $widget.icon;\n      $widget.layout.i = uuidv4();\n      const saveWidget = await WidgetSettingsActions.createWidgetSettings($widget);\n      await DashboardActions.addWidgetToDashboard(id, saveWidget.id);\n      setLayout([...layout, {\n        layout: $widget.layout,\n        type: $widget.type\n      }]);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const addWidget = async (type, _) => {\n    console.log(type);\n    setAddType(type);\n    setMenuState(_objectSpread({}, menuState, {\n      addWidget: true,\n      right: false\n    })); // try {\n    //   const layoutItem = {\n    //     layout: { i: uuidv4(), x: 0, y: 0, w: 6, h: 11, maxW: 16, isDraggable: true, isResizable: true },\n    //     type\n    //   }\n    //   const saveWidget = await WidgetSettingsActions.createWidgetSettings(layoutItem)\n    //   await DashboardActions.addWidgetToDashboard(id, saveWidget.id)\n    //   layoutItem.id = saveWidget.id\n    //   setLayout([...layout, layoutItem])\n    // } catch (e) {\n    //   console.log(e)\n    // }\n  };\n\n  const sideList = () => __jsx(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(WidgetSidemenu, {\n    onWidgetClick: addWidget,\n    addPredefinedWidget: addPredefinedWidget,\n    widgetSettings: Object.values(WidgetSettings),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }));\n\n  const renderWidgets = () => layout.map((item, i) => __jsx(\"div\", {\n    key: item.layout.i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, decideWidget(item)));\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(Drawer, {\n    anchor: \"right\",\n    open: menuState.right,\n    onClose: toggleDrawer('right', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, sideList()), __jsx(Drawer, {\n    anchor: \"right\",\n    open: menuState.addWidget,\n    onClose: toggleDrawer('addWidget', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, decideWidgetSettings()), __jsx(Card, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      justifySelf: 'flex-start',\n      display: 'flex',\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    \"aria-label\": \"back\",\n    size: \"medium\",\n    style: {\n      outline: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(ArrowLeft, {\n    fontSize: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    style: {\n      justifySelf: 'flex-end',\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'flex-end',\n      paddingRight: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(Button, {\n    style: {\n      outline: 'none'\n    },\n    size: \"small\",\n    startIcon: __jsx(SaveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Save\"), __jsx(Button, {\n    style: {\n      marginLeft: '10px',\n      outline: 'none'\n    },\n    size: \"small\",\n    onClick: toggleDrawer('right', true),\n    startIcon: __jsx(DashboardIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Widgets\"))), __jsx(GridLayout, {\n    className: \"layout\",\n    cols: 16,\n    rowHeight: 30,\n    width: 1920,\n    layout: layout.map(item => item.layout),\n    onLayoutChange: onLayoutChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, renderWidgets()));\n};\n\nEditDashboard.getInitialProps = async req => {\n  const Authorization = Cookies(req).id;\n  const WidgetSettings = await DashboardActions.getWidgetSettings({\n    Authorization,\n    id: \"5e413f33f6af6d17b44df269\"\n  });\n  return WidgetSettings;\n};\n\nexport default EditDashboard;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/pages/dashboards/[id]/edit.jsx"],"names":["useState","v4","uuidv4","makeStyles","GridLayout","Cookies","IconButton","Button","Card","ArrowLeft","SaveIcon","DashboardIcon","Drawer","DashboardActions","WidgetSettingsActions","WidgetSidemenu","TableWidget","LineChartWidget","PieChartWidget","DonutChartWidget","BarChartWidget","AreaChartWidget","TableWidgetSettings","LineChartWidgetSettings","PieChartWidgetSettings","DonutChartWidgetSettings","BarChartWidgetSettings","AreaChartWidgetSettings","useRouter","useStyles","list","width","fullList","EditDashboard","WidgetSettings","classes","router","id","query","menuState","setMenuState","right","addWidget","layout","setLayout","Object","values","addType","setAddType","onLayoutChange","$event","layouts","map","item","$eventItem","filter","$item","i","Promise","all","updateWidgetSettings","err","console","log","toggleDrawer","side","open","event","type","key","decideWidget","widget","decideWidgetSettings","addPredefinedWidget","_","$widget","icon","saveWidget","createWidgetSettings","addWidgetToDashboard","e","sideList","renderWidgets","display","flexDirection","justifySelf","flex","outline","justifyContent","paddingRight","marginLeft","getInitialProps","req","Authorization","getWidgetSettings"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport GridLayout from 'react-grid-layout'\r\nimport Cookies from 'next-cookies'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Button from '@material-ui/core/Button'\r\nimport Card from '@material-ui/core/Card'\r\nimport ArrowLeft from '@material-ui/icons/ArrowLeft'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport DashboardIcon from '@material-ui/icons/Dashboard'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport DashboardActions from '../../../actions/dashboard.actions'\r\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\r\nimport WidgetSidemenu from '../../../components/dashboards/widgets-menu'\r\nimport {\r\n  TableWidget,\r\n  LineChartWidget,\r\n  PieChartWidget,\r\n  DonutChartWidget,\r\n  BarChartWidget,\r\n  AreaChartWidget,\r\n  TableWidgetSettings,\r\n  LineChartWidgetSettings,\r\n  PieChartWidgetSettings,\r\n  DonutChartWidgetSettings,\r\n  BarChartWidgetSettings,\r\n  AreaChartWidgetSettings\r\n} from '../../../components/widgets'\r\nimport { useRouter } from 'next/router'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 500\r\n  },\r\n  fullList: {\r\n    width: 'auto'\r\n  }\r\n})\r\n\r\nconst EditDashboard = (WidgetSettings) => {\r\n  const classes = useStyles()\r\n  const router = useRouter()\r\n  const { id } = router.query\r\n  const [menuState, setMenuState] = useState({ right: false, addWidget: false })\r\n  const [layout, setLayout] = useState(Object.values(WidgetSettings))\r\n  const [addType, setAddType] = useState(null)\r\n\r\n  const onLayoutChange = async ($event) => {\r\n    try {\r\n      const layouts = layout.map(item => {\r\n        const $eventItem = $event.filter($item => $item.i == item.layout.i)[0]\r\n        return { ...item, layout: $eventItem }\r\n      })\r\n      await Promise.all(layouts.map(item => WidgetSettingsActions.updateWidgetSettings(item.id, item)))\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift'))\r\n      return\r\n\r\n    setMenuState({ ...menuState, [side]: open })\r\n  }\r\n\r\n  const decideWidget = (widget) => {\r\n    switch (widget.type) {\r\n      case 'Table':\r\n        return <TableWidget widgetId={widget.id} />\r\n      case 'Line Chart':\r\n        return <LineChartWidget widgetId={widget.id} />\r\n      case 'Bar Chart':\r\n        return <BarChartWidget widgetId={widget.id} />\r\n      case 'Pie Chart':\r\n        return <PieChartWidget widgetId={widget.id} />\r\n      case 'Donut Chart':\r\n        return <DonutChartWidget widgetId={widget.id} />\r\n      case 'Area Chart':\r\n        return <AreaChartWidget widgetId={widget.id} />\r\n    }\r\n  }\r\n\r\n  const decideWidgetSettings = (addType) => {\r\n    console.log(addType)\r\n    switch (addType) {\r\n      case 'Table':\r\n        return <TableWidgetSettings isAdding={true} />\r\n      case 'Line Chart':\r\n        return <LineChartWidgetSettings isAdding={true} />\r\n      case 'Bar Chart':\r\n        return <BarChartWidgetSettings isAdding={true} />\r\n      case 'Pie Chart':\r\n        return <PieChartWidgetSettings isAdding={true} />\r\n      case 'Donut Chart':\r\n        return <DonutChartWidgetSettings isAdding={true} />\r\n      case 'Area Chart':\r\n        return <AreaChartWidgetSettings isAdding={true} />\r\n      default:\r\n        return <div></div>\r\n    }\r\n  }\r\n\r\n  const addPredefinedWidget = async (widget, _) => {\r\n    try {\r\n      const $widget = { ...widget }\r\n      delete $widget.id; delete $widget.icon\r\n      $widget.layout.i = uuidv4()\r\n      const saveWidget = await WidgetSettingsActions.createWidgetSettings($widget)\r\n      await DashboardActions.addWidgetToDashboard(id, saveWidget.id)\r\n      setLayout([...layout, { layout: $widget.layout, type: $widget.type }])\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const addWidget = async (type, _) => {\r\n    console.log(type)\r\n    setAddType(type)\r\n    setMenuState({ ...menuState, addWidget: true, right: false })\r\n    // try {\r\n    //   const layoutItem = {\r\n    //     layout: { i: uuidv4(), x: 0, y: 0, w: 6, h: 11, maxW: 16, isDraggable: true, isResizable: true },\r\n    //     type\r\n    //   }\r\n    //   const saveWidget = await WidgetSettingsActions.createWidgetSettings(layoutItem)\r\n    //   await DashboardActions.addWidgetToDashboard(id, saveWidget.id)\r\n    //   layoutItem.id = saveWidget.id\r\n    //   setLayout([...layout, layoutItem])\r\n    // } catch (e) {\r\n    //   console.log(e)\r\n    // }\r\n  }\r\n\r\n  const sideList = () => (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <WidgetSidemenu onWidgetClick={addWidget} addPredefinedWidget={addPredefinedWidget} widgetSettings={Object.values(WidgetSettings)} />\r\n    </div>\r\n  )\r\n\r\n  const renderWidgets = () => layout.map((item, i) => (\r\n    <div key={item.layout.i}>\r\n      {decideWidget(item)}\r\n    </div>\r\n  ))\r\n\r\n  return (\r\n    <div>\r\n      <Drawer anchor=\"right\" open={menuState.right} onClose={toggleDrawer('right', false)}>\r\n        {sideList()}\r\n      </Drawer>\r\n\r\n      <Drawer anchor=\"right\" open={menuState.addWidget} onClose={toggleDrawer('addWidget', false)}>\r\n        {decideWidgetSettings()}\r\n      </Drawer>\r\n\r\n      <Card style={{ display: 'flex', flexDirection: 'row' }}>\r\n        <div style={{ justifySelf: 'flex-start', display: 'flex', flex: 1 }}>\r\n          <IconButton aria-label=\"back\" size=\"medium\" style={{ outline: 'none' }}>\r\n            <ArrowLeft fontSize=\"default\" />\r\n          </IconButton>\r\n        </div>\r\n        <div style={{ justifySelf: 'flex-end', display: 'flex', flex: 1, justifyContent: 'flex-end', paddingRight: '10px' }}>\r\n          <Button style={{ outline: 'none' }} size=\"small\" startIcon={<SaveIcon />}>\r\n            Save\r\n          </Button>\r\n          <Button style={{ marginLeft: '10px', outline: 'none' }} size=\"small\" onClick={toggleDrawer('right', true)} startIcon={<DashboardIcon />}>\r\n            Widgets\r\n          </Button>\r\n        </div>\r\n      </Card>\r\n\r\n      <GridLayout className=\"layout\" cols={16} rowHeight={30} width={1920} layout={layout.map(item => item.layout)} onLayoutChange={onLayoutChange}>\r\n        {renderWidgets()}\r\n      </GridLayout>\r\n    </div>\r\n  )\r\n};\r\n\r\nEditDashboard.getInitialProps = async (req) => {\r\n  const Authorization = Cookies(req).id\r\n  const WidgetSettings = await DashboardActions.getWidgetSettings({ Authorization, id: \"5e413f33f6af6d17b44df269\" })\r\n  return WidgetSettings\r\n}\r\n\r\nexport default EditDashboard;"]},"metadata":{},"sourceType":"module"}