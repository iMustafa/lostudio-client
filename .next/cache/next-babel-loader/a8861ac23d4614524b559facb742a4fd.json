{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/pages/dashboards/index.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport Cookies from \"next-cookies\";\nimport DashboardActions from \"../../actions/dashboard.actions\";\nimport ListDashboards from \"../../components/dashboards/list-dashboards\";\nimport Grid from \"@material-ui/core/Grid\";\n\nvar Dashboards = function Dashboards(_ref) {\n  var Collaborations = _ref.Collaborations,\n      Dashboards = _ref.Dashboards;\n\n  var _useState = useState(Object.values(Dashboards)),\n      dashboards = _useState[0],\n      setDashboards = _useState[1];\n\n  var collaborations = Object.values(Collaborations);\n\n  var _useState2 = useState(0),\n      refresh = _useState2[0],\n      setRefresh = _useState2[1];\n\n  var reloadChanges = function reloadChanges() {\n    var getDashboards;\n    return _regeneratorRuntime.async(function reloadChanges$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(DashboardActions.getDashboards({}));\n\n          case 3:\n            getDashboards = _context.sent;\n            setDashboards(getDashboards);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    style: {\n      margin: \"25px auto 25px auto\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(ListDashboards, {\n    dashboardType: \"dashboard\",\n    dashboards: dashboards,\n    title: \"My Dashboards\",\n    type: \"personal\",\n    reloadChanges: reloadChanges,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), __jsx(ListDashboards, {\n    dashboardType: \"dashboard\",\n    dashboards: collaborations,\n    title: \"My Collaborations\",\n    type: \"collaborations\",\n    reloadChanges: function reloadChanges() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }))));\n};\n\nDashboards.getInitialProps = function _callee(req) {\n  var Authorization, _Dashboards, Collaborations;\n\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          Authorization = Cookies(req).id;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(DashboardActions.getDashboards({\n            Authorization: Authorization\n          }));\n\n        case 4:\n          _Dashboards = _context2.sent;\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(DashboardActions.getCollaboratorations({\n            Authorization: Authorization\n          }));\n\n        case 7:\n          Collaborations = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            Collaborations: Collaborations,\n            Dashboards: _Dashboards\n          });\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", {\n            Collaborations: [],\n            Dashboards: []\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n};\n\nexport default Dashboards;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/pages/dashboards/index.tsx"],"names":["useState","Cookies","DashboardActions","ListDashboards","Grid","Dashboards","Collaborations","Object","values","dashboards","setDashboards","collaborations","refresh","setRefresh","reloadChanges","getDashboards","console","log","margin","getInitialProps","req","Authorization","id","getCollaboratorations"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { NextPage } from \"next\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Cookies from \"next-cookies\";\nimport DashboardActions from \"../../actions/dashboard.actions\";\nimport Dashboard from \"../../types/dashboard.types\";\nimport CreateDashboard from \"../../components/dashboards/create-dashboard\";\nimport ListDashboards from \"../../components/dashboards/list-dashboards\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SideMenu from \"../../components/SideMenu\";\n\nconst Dashboards: NextPage<{ Collaborations; Dashboards }> = ({\n  Collaborations,\n  Dashboards,\n}) => {\n  const [dashboards, setDashboards] = useState(Object.values(Dashboards));\n  const collaborations: Array<Dashboard> = Object.values(Collaborations);\n  const [refresh, setRefresh] = useState(0);\n\n  const reloadChanges = async () => {\n    try {\n      const getDashboards = await DashboardActions.getDashboards({});\n      setDashboards(getDashboards)\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <div className=\"container\" style={{ margin: \"25px auto 25px auto\" }}>\n          <ListDashboards\n            dashboardType=\"dashboard\"\n            dashboards={dashboards}\n            title=\"My Dashboards\"\n            type=\"personal\"\n            reloadChanges={reloadChanges}\n          ></ListDashboards>\n          <ListDashboards\n            dashboardType=\"dashboard\"\n            dashboards={collaborations}\n            title=\"My Collaborations\"\n            type=\"collaborations\"\n            reloadChanges={() => {}}\n          ></ListDashboards>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nDashboards.getInitialProps = async (\n  req\n): Promise<{\n  Collaborations: Array<Dashboard>;\n  Dashboards: Array<Dashboard>;\n}> => {\n  try {\n    const Authorization = Cookies(req).id;\n    const Dashboards = await DashboardActions.getDashboards({ Authorization });\n    const Collaborations = await DashboardActions.getCollaboratorations({\n      Authorization,\n    });\n    return { Collaborations, Dashboards };\n  } catch (e) {\n    return { Collaborations: [], Dashboards: [] };\n  }\n};\n\nexport default Dashboards;\n"]},"metadata":{},"sourceType":"module"}