{"ast":null,"code":"import axios from 'axios';\nimport config from 'next/config';\nimport Cookie from 'js-cookie';\nconst {\n  API_URL\n} = config().publicRuntimeConfig;\nexport default class WidgetSettingsActions {\n  // TODO\n  static async createWidgetSettings(widgetSettings) {\n    return axios.post(`${API_URL}/WidgetSettings`, widgetSettings, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getSubWidgets(widgetSettingsId) {\n    return axios.get(`${API_URL}/WidgetSettings/${widgetSettingsId}/subWidgetSettings`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      },\n      params: {\n        filter: {\n          include: 'subWidgetSettings'\n        }\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async exportWidgetData(widgetSettingsId, format, method, selectedFields) {\n    if (format == 'email') {\n      return axios.get(`${API_URL}/WidgetSettings/${widgetSettingsId}/export-data`, {\n        headers: {\n          Authorization: Cookie.get('id')\n        },\n        params: {\n          format,\n          selectedFields,\n          method\n        }\n      }).then(res => res.data).catch(err => err.response);\n    } else {\n      window.open(`${API_URL}/WidgetSettings/${widgetSettingsId}/export-data?format=${format}&method=${method}&selectedFields=${selectedFields}`);\n    }\n  }\n\n  static async createSubWidget(widgetSettingsId, subWidgetSettingsId) {\n    return axios.post(`${API_URL}/WidgetSettings/${widgetSettingsId}/subWidgetSettings`, {\n      subWidgetSettingsId\n    }, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getWidgetSettingsMeasureConditions(widgetSettingsId) {\n    return axios.get(`${API_URL}/WidgetSettings/${widgetSettingsId}/measureConditions`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async createWidgetSettingsMeasureConditions(widgetSettingsId, measureCondition) {\n    return axios.post(`${API_URL}/WidgetSettings/${widgetSettingsId}/measureConditions`, measureCondition, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async deleteWidgetSettingsMeasureConditions(widgetSettingsId, measureConditionId) {\n    return axios.delete(`${API_URL}/WidgetSettings/${widgetSettingsId}/measureConditions/${measureConditionId}`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async deleteSubWidget(widgetSettingsId, subWidgetSettingsId) {\n    return axios.delete(`${API_URL}/WidgetSettings/${widgetSettingsId}/subWidgetSettings/${subWidgetSettingsId}`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getFormGroupWidgets() {\n    return axios.get(`${API_URL}/WidgetSettings`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      },\n      params: {\n        filter: {\n          where: {\n            type: \"Form Group\"\n          }\n        }\n      }\n    }).then(res => res.data).catch(err => err.response);\n  } // TODO\n\n\n  static async getWidgetSettings() {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  } // TODO\n\n\n  static async getWidgetSettingsById(id, Authorization) {\n    return axios.get(`${API_URL}/WidgetSettings/${id}`, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  } // TODO\n\n\n  static async updateWidgetSettings(id, widgetSettings) {\n    return axios.patch(`${API_URL}/WidgetSettings/${id}`, widgetSettings, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  } // TODO\n\n\n  static async deleteWidgetSettings(id) {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  }\n\n  static async executeWidgetQuery(id, Authorization) {\n    return axios.get(`${API_URL}/WidgetSettings/${id}/execute-query`, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n}","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/actions/widgetSettings.actions.ts"],"names":["axios","config","Cookie","API_URL","publicRuntimeConfig","WidgetSettingsActions","createWidgetSettings","widgetSettings","post","headers","Authorization","get","then","res","data","catch","err","response","getSubWidgets","widgetSettingsId","params","filter","include","exportWidgetData","format","method","selectedFields","window","open","createSubWidget","subWidgetSettingsId","getWidgetSettingsMeasureConditions","createWidgetSettingsMeasureConditions","measureCondition","deleteWidgetSettingsMeasureConditions","measureConditionId","delete","deleteSubWidget","getFormGroupWidgets","where","type","getWidgetSettings","getWidgetSettingsById","id","updateWidgetSettings","patch","deleteWidgetSettings","executeWidgetQuery"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport config from 'next/config'\nimport Cookie from 'js-cookie'\nimport User from '../types/users.types'\nimport Dashboard from '../types/dashboard.types'\nimport Datasource from '../types/datasource.types'\nimport Widget from '../types/widget.types'\nimport MeasureCondition from '../types/measureCondition.types'\nimport WidgetSettings from '../types/widgetSettings.type'\nimport { promises } from 'dns'\n\nconst { API_URL } = config().publicRuntimeConfig\n\nexport default class WidgetSettingsActions {\n\n  // TODO\n  public static async createWidgetSettings(widgetSettings: WidgetSettings): Promise<WidgetSettings> {\n    return axios\n      .post(`${API_URL}/WidgetSettings`, widgetSettings, { headers: { Authorization: Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async getSubWidgets(widgetSettingsId: string): Promise<Array<WidgetSettings>> {\n    return axios\n      .get(\n        `${API_URL}/WidgetSettings/${widgetSettingsId}/subWidgetSettings`,\n        {\n          headers: {\n            Authorization: Cookie.get('id')\n          },\n          params: {\n            filter: { include: 'subWidgetSettings' }\n          }\n        }\n      )\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async exportWidgetData(widgetSettingsId: string, format: string, method: string, selectedFields: Array<any>): Promise<any> {\n    if (format == 'email') {\n      return axios\n        .get(\n          `${API_URL}/WidgetSettings/${widgetSettingsId}/export-data`,\n          {\n            headers: { Authorization: Cookie.get('id') },\n            params: { format, selectedFields, method }\n          }\n        )\n        .then(res => res.data)\n        .catch(err => err.response)\n    } else {\n      window.open(`${API_URL}/WidgetSettings/${widgetSettingsId}/export-data?format=${format}&method=${method}&selectedFields=${selectedFields}`)\n    }\n  }\n\n  public static async createSubWidget(widgetSettingsId: string, subWidgetSettingsId: string): Promise<any> {\n    return axios\n      .post(\n        `${API_URL}/WidgetSettings/${widgetSettingsId}/subWidgetSettings`,\n        { subWidgetSettingsId },\n        { headers: { Authorization: Cookie.get('id') } }\n      )\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async getWidgetSettingsMeasureConditions(widgetSettingsId: string): Promise<Array<MeasureCondition>> {\n    return axios\n      .get(`${API_URL}/WidgetSettings/${widgetSettingsId}/measureConditions`, { headers: { Authorization: Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async createWidgetSettingsMeasureConditions(widgetSettingsId: string, measureCondition: MeasureCondition): Promise<MeasureCondition> {\n    return axios\n      .post(\n        `${API_URL}/WidgetSettings/${widgetSettingsId}/measureConditions`,\n        measureCondition,\n        { headers: { Authorization: Cookie.get('id') } }\n      )\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async deleteWidgetSettingsMeasureConditions(widgetSettingsId: string, measureConditionId: string): Promise<any> {\n    return axios\n      .delete(\n        `${API_URL}/WidgetSettings/${widgetSettingsId}/measureConditions/${measureConditionId}`,\n        { headers: { Authorization: Cookie.get('id') } }\n      )\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async deleteSubWidget(widgetSettingsId: string, subWidgetSettingsId: string): Promise<any> {\n    return axios\n      .delete(\n        `${API_URL}/WidgetSettings/${widgetSettingsId}/subWidgetSettings/${subWidgetSettingsId}`,\n        { headers: { Authorization: Cookie.get('id') } }\n      )\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async getFormGroupWidgets(): Promise<Array<WidgetSettings>> {\n    return axios\n      .get(\n        `${API_URL}/WidgetSettings`,\n        {\n          headers: {\n            Authorization: Cookie.get('id')\n          },\n          params: {\n            filter: { where: { type: \"Form Group\" } }\n          }\n        }\n      )\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  // TODO\n  public static async getWidgetSettings(): Promise<Array<WidgetSettings>> {\n    return axios\n      .post('', {})\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  // TODO\n  public static async getWidgetSettingsById(id: string, Authorization?: string): Promise<WidgetSettings> {\n    return axios\n      .get(`${API_URL}/WidgetSettings/${id}`, { headers: { Authorization: Authorization || Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  // TODO\n  public static async updateWidgetSettings(id: string, widgetSettings: WidgetSettings): Promise<WidgetSettings> {\n    return axios\n      .patch(`${API_URL}/WidgetSettings/${id}`, widgetSettings, { headers: { Authorization: Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  // TODO\n  public static async deleteWidgetSettings(id: string): Promise<WidgetSettings> {\n    return axios\n      .post('', {})\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async executeWidgetQuery(id: string, Authorization?: string): Promise<any> {\n    return axios\n      .get(`${API_URL}/WidgetSettings/${id}/execute-query`, { headers: { Authorization: Authorization || Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n}"]},"metadata":{},"sourceType":"module"}