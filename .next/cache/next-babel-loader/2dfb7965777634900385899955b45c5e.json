{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\dashboards\\\\my-widgets.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport WidgetIcon from '../widgets/widget-icon';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport PieChartIcon from '@material-ui/icons/PieChart';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nvar useStyles = makeStyles(function () {\n  return {};\n});\n\nvar MyWidgets = function MyWidgets(_ref) {\n  var addPredefinedWidget = _ref.addPredefinedWidget,\n      widgetSettings = _ref.widgetSettings;\n  var classes = useStyles();\n  var TableWidgets = [{\n    title: 'Table',\n    icon: __jsx(TableChartIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })\n  }];\n  var ChartWidgets = [{\n    title: 'Line Chart',\n    icon: __jsx(TimelineIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })\n  }, {\n    title: 'Bar Chart',\n    icon: __jsx(BarChartIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })\n  }, {\n    title: 'Bubble Chart',\n    icon: __jsx(BubbleChartIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })\n  }, {\n    title: 'Pie Chart',\n    icon: __jsx(PieChartIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })\n  }, {\n    title: 'Donut Chart',\n    icon: __jsx(DonutLargeIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })\n  }, {\n    title: 'Gantt Chart',\n    icon: __jsx(ListAltIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })\n  }];\n  var MyTableWidgets = widgetSettings.filter(function (widget) {\n    return widget.type.indexOf('Table') > -1;\n  }).map(function (widget) {\n    return _objectSpread({}, widget, {\n      icon: TableWidgets.find(function ($) {\n        return $.title == widget.type;\n      }).icon\n    });\n  });\n  var MyChartWidgets = widgetSettings.filter(function (widget) {\n    return widget.type.indexOf('Chart') > -1;\n  }).map(function (widget) {\n    return _objectSpread({}, widget, {\n      icon: ChartWidgets.find(function ($) {\n        return $.title == widget.type;\n      }).icon\n    });\n  });\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(ExpansionPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(ExpansionPanelSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(Typography, {\n    className: classes.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Tables\")), __jsx(ExpansionPanelDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, MyTableWidgets.map(function (widget) {\n    return __jsx(Grid, {\n      item: true,\n      xs: 4,\n      key: widget.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(WidgetIcon, {\n      widget: widget,\n      addPredefinedWidget: addPredefinedWidget,\n      icon: widget.icon,\n      title: widget.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  })))), __jsx(ExpansionPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(ExpansionPanelSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Typography, {\n    className: classes.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Charts\")), __jsx(ExpansionPanelDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, MyChartWidgets.map(function (widget) {\n    return __jsx(Grid, {\n      item: true,\n      xs: 4,\n      key: widget.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(WidgetIcon, {\n      widget: widget,\n      addPredefinedWidget: addPredefinedWidget,\n      icon: widget.icon,\n      title: widget.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  })))));\n};\n\nexport default MyWidgets;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/dashboards/my-widgets.jsx"],"names":["useState","useEffect","makeStyles","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Typography","ExpandMoreIcon","Grid","WidgetIcon","TableChartIcon","TimelineIcon","BubbleChartIcon","DonutLargeIcon","PieChartIcon","BarChartIcon","ListAltIcon","useStyles","MyWidgets","addPredefinedWidget","widgetSettings","classes","TableWidgets","title","icon","ChartWidgets","MyTableWidgets","filter","widget","type","indexOf","map","find","$","MyChartWidgets","root","heading","id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport WidgetIcon from '../widgets/widget-icon'\r\n\r\nimport TableChartIcon from '@material-ui/icons/TableChart'\r\nimport TimelineIcon from '@material-ui/icons/Timeline'\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart'\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge'\r\nimport PieChartIcon from '@material-ui/icons/PieChart'\r\nimport BarChartIcon from '@material-ui/icons/BarChart'\r\nimport ListAltIcon from '@material-ui/icons/ListAlt'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n}))\r\n\r\nconst MyWidgets = ({ addPredefinedWidget, widgetSettings }) => {\r\n  const classes = useStyles()\r\n\r\n  const TableWidgets = [\r\n    { title: 'Table', icon: <TableChartIcon /> }\r\n  ]\r\n  const ChartWidgets = [\r\n    { title: 'Line Chart', icon: <TimelineIcon /> },\r\n    { title: 'Bar Chart', icon: <BarChartIcon /> },\r\n    { title: 'Bubble Chart', icon: <BubbleChartIcon /> },\r\n    { title: 'Pie Chart', icon: <PieChartIcon /> },\r\n    { title: 'Donut Chart', icon: <DonutLargeIcon /> },\r\n    { title: 'Gantt Chart', icon: <ListAltIcon /> }\r\n  ]\r\n\r\n  const MyTableWidgets = widgetSettings.filter(widget => widget.type.indexOf('Table') > -1).map(widget => ({ ...widget, icon: TableWidgets.find($ => $.title == widget.type).icon }))\r\n  const MyChartWidgets = widgetSettings.filter(widget => widget.type.indexOf('Chart') > -1).map(widget => ({ ...widget, icon: ChartWidgets.find($ => $.title == widget.type).icon }))\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n        >\r\n          <Typography className={classes.heading}>Tables</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Grid container spacing={2}>\r\n            {MyTableWidgets.map(widget => (\r\n              <Grid item xs={4} key={widget.id}>\r\n                <WidgetIcon widget={widget} addPredefinedWidget={addPredefinedWidget} icon={widget.icon} title={widget.title} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n        >\r\n          <Typography className={classes.heading}>Charts</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Grid container spacing={2}>\r\n            {MyChartWidgets.map(widget => (\r\n              <Grid item xs={4} key={widget.id}>\r\n                <WidgetIcon widget={widget} addPredefinedWidget={addPredefinedWidget} icon={widget.icon} title={widget.title} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyWidgets"]},"metadata":{},"sourceType":"module"}