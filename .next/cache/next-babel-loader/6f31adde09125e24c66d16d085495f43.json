{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\widgets\\\\form-controls\\\\autocomplete\\\\autocomplete-widget-settings.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Select from '@material-ui/core/Select';\nimport DataSourceActions from '../../../../actions/datasource.actions';\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions';\nimport Swal from 'sweetalert2';\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}));\n\nconst AutoCompleteWidgetSettings = ({\n  widget,\n  handleSettingsClose,\n  isAdding,\n  onWidgetAdd\n}) => {\n  const classes = useStyles();\n  const {\n    0: datasources,\n    1: setDatasources\n  } = useState([]);\n  const {\n    0: datasource,\n    1: setDatasource\n  } = useState(!isAdding ? widget.dataSourceId : '');\n  const {\n    0: docList,\n    1: setDocList\n  } = useState([]);\n  const {\n    0: doc,\n    1: setDoc\n  } = useState(!isAdding ? widget.config.docId : '');\n  const {\n    0: fieldList,\n    1: setFieldList\n  } = useState([]);\n  const {\n    0: fields,\n    1: setFields\n  } = useState(!isAdding ? widget.config.fields : []);\n\n  const getDatasources = async () => {\n    try {\n      const $datasources = await DataSourceActions.getDatasources({});\n\n      if (!isAdding) {\n        const $docList = await DataSourceActions.getDocList(datasource);\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc);\n        setDocList($docList);\n        setFieldList($fieldList);\n      }\n\n      setDatasources($datasources);\n      return $datasources;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getDocList = async id => {\n    try {\n      setDatasource(id);\n      const $docList = await DataSourceActions.getDocList(id);\n      setDocList($docList);\n      return $docList;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getFieldList = async (id, docId) => {\n    try {\n      setDoc(docId);\n      const $fieldList = await DataSourceActions.getFieldList(id, docId);\n      setFieldList($fieldList);\n      return $fieldList;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleDatasourceChange = async event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFieldList([]);\n    setFields([]);\n    await getDocList(value);\n  };\n\n  const handleDocChange = async event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFieldList([]);\n    setFields([]);\n    await getFieldList(datasource, value);\n  };\n\n  const handleFieldChange = name => event => {\n    const {\n      checked\n    } = event.target;\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name));\n  };\n\n  useEffect(() => {\n    getDatasources();\n  }, []);\n\n  const renderFieldSettings = () => fieldList.length ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Fields Settings\")), fieldList.map(field => __jsx(FormControlLabel, {\n    key: field,\n    control: __jsx(Checkbox, {\n      checked: fields.includes(field),\n      onChange: handleFieldChange(field),\n      value: field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }),\n    label: field,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }))) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  });\n\n  return __jsx(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Widget Info\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Title\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Widget Properties\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Label\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"ID\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Name\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Placeholder\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Class name\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Value\"), __jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })), __jsx(\"h2\", {\n    className: classes.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Unique Properties\")), __jsx(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, __jsx(RadioGroup, {\n    style: {\n      justifyContent: 'space-evenly',\n      width: '100%',\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, __jsx(FormControlLabel, {\n    value: \"female\",\n    control: __jsx(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }),\n    label: \"From Data Source\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), __jsx(FormControlLabel, {\n    value: \"male\",\n    control: __jsx(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }),\n    label: \"Fixed Values\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    id: \"data-source\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Data Source\"), __jsx(Select, {\n    name: \"datasource\",\n    labelId: \"data-source\",\n    value: datasource,\n    onChange: handleDatasourceChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, datasources.map(item => __jsx(MenuItem, {\n    key: item.id,\n    value: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, item.title)))), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    disabled: datasource ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    id: \"doc-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Table/Collection\"), __jsx(Select, {\n    name: \"docList\",\n    labelId: \"doc-list\",\n    value: doc,\n    onChange: handleDocChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, docList.map(item => __jsx(MenuItem, {\n    key: item,\n    value: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, item)))), renderFieldSettings()), __jsx(Button, {\n    fullWidth: true,\n    color: \"primary\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"Save\"));\n};\n\nexport default AutoCompleteWidgetSettings;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/widgets/form-controls/autocomplete/autocomplete-widget-settings.jsx"],"names":["useState","useEffect","makeStyles","Button","Input","InputLabel","FormControl","FormGroup","FormControlLabel","Radio","RadioGroup","Select","DataSourceActions","WidgetSettingsActions","Swal","useStyles","theme","list","width","paddingLeft","paddingRight","paddingTop","h2","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","formControl","AutoCompleteWidgetSettings","widget","handleSettingsClose","isAdding","onWidgetAdd","classes","datasources","setDatasources","datasource","setDatasource","dataSourceId","docList","setDocList","doc","setDoc","config","docId","fieldList","setFieldList","fields","setFields","getDatasources","$datasources","$docList","getDocList","$fieldList","getFieldList","e","console","log","id","handleDatasourceChange","event","name","value","target","handleDocChange","handleFieldChange","checked","filter","field","renderFieldSettings","length","map","includes","justifyContent","flexDirection","item","title"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst AutoCompleteWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n  const [datasources, setDatasources] = useState([])\r\n  const [datasource, setDatasource] = useState(!isAdding ? widget.dataSourceId : '')\r\n  const [docList, setDocList] = useState([])\r\n  const [doc, setDoc] = useState(!isAdding ? widget.config.docId : '')\r\n  const [fieldList, setFieldList] = useState([])\r\n  const [fields, setFields] = useState(!isAdding ? widget.config.fields : [])\r\n\r\n  const getDatasources = async () => {\r\n    try {\r\n      const $datasources = await DataSourceActions.getDatasources({})\r\n      if (!isAdding) {\r\n        const $docList = await DataSourceActions.getDocList(datasource)\r\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\r\n        setDocList($docList)\r\n        setFieldList($fieldList)\r\n      }\r\n      setDatasources($datasources)\r\n      return $datasources\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getDocList = async (id) => {\r\n    try {\r\n      setDatasource(id)\r\n      const $docList = await DataSourceActions.getDocList(id)\r\n      setDocList($docList)\r\n      return $docList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getFieldList = async (id, docId) => {\r\n    try {\r\n      setDoc(docId)\r\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\r\n      setFieldList($fieldList)\r\n      return $fieldList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const handleDatasourceChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getDocList(value)\r\n  }\r\n\r\n  const handleDocChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getFieldList(datasource, value)\r\n  }\r\n\r\n  const handleFieldChange = name => event => {\r\n    const { checked } = event.target\r\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name))\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDatasources()\r\n  }, [])\r\n\r\n  const renderFieldSettings = () => fieldList.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Fields Settings</span>\r\n    </h2>\r\n\r\n    {fieldList.map(field => (<FormControlLabel\r\n      key={field}\r\n      control={\r\n        <Checkbox checked={fields.includes(field)} onChange={handleFieldChange(field)} value={field} />\r\n      }\r\n      label={field}\r\n    />))}\r\n  </div>) : <div></div>\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Label</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>ID</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Placeholder</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Class name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Value</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Unique Properties</span>\r\n      </h2>\r\n      <FormGroup row>\r\n        <RadioGroup style={{ justifyContent: 'space-evenly', width: '100%', flexDirection: 'row' }}>\r\n          <FormControlLabel value=\"female\" control={<Radio />} label=\"From Data Source\" />\r\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"Fixed Values\" />\r\n        </RadioGroup>\r\n      </FormGroup>\r\n      <div>\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <InputLabel id=\"data-source\">Data Source</InputLabel>\r\n          <Select\r\n            name=\"datasource\"\r\n            labelId=\"data-source\"\r\n            value={datasource}\r\n            onChange={handleDatasourceChange}\r\n          >\r\n            {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\r\n          <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\r\n          <Select\r\n            name=\"docList\"\r\n            labelId=\"doc-list\"\r\n            value={doc}\r\n            onChange={handleDocChange}\r\n          >\r\n            {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {renderFieldSettings()}\r\n      </div>\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AutoCompleteWidgetSettings"]},"metadata":{},"sourceType":"module"}