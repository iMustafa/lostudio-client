{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/table/export-table-data.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nvar useStyles = makeStyles({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n});\n\nvar ExportTableData = function ExportTableData(_ref) {\n  var widget = _ref.widget,\n      data = _ref.data,\n      selectedRows = _ref.selectedRows;\n  var classes = useStyles();\n\n  var _useState = useState({\n    method: 'download',\n    format: 'csv',\n    fields: widget.config.fields\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState([]),\n      fields = _useState2[0],\n      setFields = _useState2[1];\n\n  var handleDataChange = function handleDataChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setState(_objectSpread({}, state, _defineProperty({}, name, value)));\n  };\n\n  var handleFieldChange = function handleFieldChange(name) {\n    return function (event) {\n      var checked = event.target.checked;\n      checked ? setFields([].concat(_toConsumableArray(fields), [name])) : setFields(fields.filter(function (field) {\n        return field != name;\n      }));\n    };\n  };\n\n  var exportData = function exportData() {\n    var format, method, file;\n    return _regeneratorRuntime.async(function exportData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            format = state.format, method = state.method;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.exportWidgetData(widget.id, format, method, JSON.stringify(fields)));\n\n          case 4:\n            file = _context.sent;\n            console.log(file);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Export Settings\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"export-format\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Export Format\"), __jsx(Select, {\n    name: \"format\",\n    labelId: \"export-format\",\n    value: state.format,\n    onChange: handleDataChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(MenuItem, {\n    value: \"csv\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"CSV\"), __jsx(MenuItem, {\n    value: \"json\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"JSON\"))), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"export-method\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Export Method\"), __jsx(Select, {\n    name: \"method\",\n    labelId: \"export-method\",\n    value: state.method,\n    onChange: handleDataChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(MenuItem, {\n    value: \"download\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Download\"), __jsx(MenuItem, {\n    value: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Email\"))), __jsx(\"h2\", {\n    className: classes.h2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Export Fields\")), __jsx(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"Select fields to export from the data set.\"), state.fields.map(function (field) {\n    return __jsx(FormControlLabel, {\n      key: field,\n      control: __jsx(Checkbox, {\n        checked: fields.includes(field),\n        onChange: handleFieldChange(field),\n        value: field,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }),\n      label: field,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    });\n  }), __jsx(Button, {\n    onClick: exportData,\n    className: classes.formControl,\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Export\"));\n};\n\nexport default ExportTableData;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/table/export-table-data.jsx"],"names":["useState","useEffect","makeStyles","Typography","CircularProgress","FormControlLabel","FormControl","InputLabel","Select","MenuItem","Button","Checkbox","WidgetSettingsActions","useStyles","list","width","paddingLeft","paddingRight","paddingTop","h2","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","formControl","ExportTableData","widget","data","selectedRows","classes","method","format","fields","config","state","setState","setFields","handleDataChange","event","target","name","value","handleFieldChange","checked","filter","field","exportData","exportWidgetData","id","JSON","stringify","file","console","log","map","includes"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\n\nconst useStyles = makeStyles({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n})\n\nconst ExportTableData = ({ widget, data, selectedRows }) => {\n  const classes = useStyles()\n  const [state, setState] = useState({\n    method: 'download', format: 'csv', fields: widget.config.fields\n  })\n  const [fields, setFields] = useState([])\n\n  const handleDataChange = event => {\n    const { name, value } = event.target\n    setState({ ...state, [name]: value })\n  }\n\n  const handleFieldChange = name => event => {\n    const { checked } = event.target\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name))\n  }\n\n  const exportData = async () => {\n    try {\n      const { format, method } = state\n      const file = await WidgetSettingsActions.exportWidgetData(widget.id, format, method, JSON.stringify(fields))\n      console.log(file)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  return (\n    <div className={classes.list} role=\"presentation\">\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Export Settings</span>\n      </h2>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel id=\"export-format\">Export Format</InputLabel>\n        <Select\n          name=\"format\"\n          labelId=\"export-format\"\n          value={state.format}\n          onChange={handleDataChange}\n        >\n          <MenuItem value=\"csv\">CSV</MenuItem>\n          <MenuItem value=\"json\">JSON</MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel id=\"export-method\">Export Method</InputLabel>\n        <Select\n          name=\"method\"\n          labelId=\"export-method\"\n          value={state.method}\n          onChange={handleDataChange}\n        >\n          <MenuItem value=\"download\">Download</MenuItem>\n          <MenuItem value=\"email\">Email</MenuItem>\n        </Select>\n      </FormControl>\n\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Export Fields</span>\n      </h2>\n      <Typography>Select fields to export from the data set.</Typography>\n      {\n        state.fields.map(field => (\n          <FormControlLabel\n            key={field}\n            control={\n              <Checkbox checked={fields.includes(field)} onChange={handleFieldChange(field)} value={field} />\n            }\n            label={field}\n          />)\n        )\n      }\n\n      <Button onClick={exportData} className={classes.formControl} fullWidth>\n        Export\n      </Button>\n    </div>\n  )\n}\n\nexport default ExportTableData"]},"metadata":{},"sourceType":"module"}