{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/dashboards/list-dashboards.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport DashbordItem from \"./dashboard-item\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddDashboardCard from \"./add-dashboard-card\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nvar useStyles = makeStyles(function (theme) {\n  var _search;\n\n  return {\n    root: {\n      marginTop: \"25px\"\n    },\n    cardBody: {\n      padding: \"10px\"\n    },\n    cardTitle: {\n      fontSize: \"12px\",\n      backgroundColor: \"#3F51B5\",\n      padding: \"3px 3px 3px 6px\",\n      color: \"#FFF\",\n      fontFamily: [\"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"]\n    },\n    emptyCardBody: {\n      padding: 10,\n      height: 200,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      alignItems: \"center\"\n    },\n    search: (_search = {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: \"100%\"\n    }, _defineProperty(_search, theme.breakpoints.up(\"sm\"), {\n      marginLeft: theme.spacing(3),\n      width: \"auto\"\n    }), _defineProperty(_search, \"borderBottom\", \"1px solid #DEDEDE\"), _defineProperty(_search, \"marginTop\", 10), _defineProperty(_search, \"marginBottom\", 15), _search),\n    searchIcon: {\n      width: theme.spacing(7),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: _defineProperty({\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\"\n    }, theme.breakpoints.up(\"md\"), {\n      width: 200\n    })\n  };\n});\n\nvar ListDashboards = function ListDashboards(_ref) {\n  var dashboards = _ref.dashboards,\n      title = _ref.title,\n      type = _ref.type,\n      dashboardType = _ref.dashboardType,\n      reloadChanges = _ref.reloadChanges;\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      searchValue = _useState[0],\n      setSearchValue = _useState[1];\n\n  var handleChange = function handleChange(event) {\n    setSearchValue(event.target.value);\n  };\n\n  return __jsx(Card, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.cardTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"div\", {\n    className: classes.search,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.searchIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, __jsx(SearchIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })), __jsx(InputBase, {\n    fullWidth: true,\n    placeholder: \"Search\\u2026\",\n    onChange: handleChange,\n    classes: {\n      root: classes.inputRoot,\n      input: classes.inputInput\n    },\n    inputProps: {\n      \"aria-label\": \"search\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })), dashboards.length ? __jsx(\"div\", {\n    className: classes.cardBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, __jsx(AddDashboardCard, {\n    type: dashboardType,\n    reloadChanges: reloadChanges,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  })), dashboards.filter(function (dashboard) {\n    var regex = new RegExp(searchValue, \"g\");\n    return searchValue ? regex.test(dashboard.title) : true;\n  }).map(function (dashboard, index) {\n    var title = dashboard.title,\n        description = dashboard.description,\n        id = dashboard.id,\n        permissions = dashboard.permissions;\n    var $type = dashboard.type;\n    return __jsx(Grid, {\n      item: true,\n      xs: 3,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }, __jsx(DashbordItem, {\n      type: $type,\n      title: title,\n      description: description,\n      id: id,\n      permissions: permissions,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }));\n  }))) : __jsx(\"div\", {\n    className: classes.emptyCardBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, __jsx(AddDashboardCard, {\n    type: dashboardType,\n    reloadChanges: reloadChanges,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }))), __jsx(DashboardIcon, {\n    style: {\n      color: \"#DDD\",\n      fontSize: 128\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), __jsx(Typography, {\n    style: {\n      color: \"#DDD\",\n      fontSize: 32\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"No dashboards found.\")), __jsx(Typography, {\n    style: {\n      color: \"#DDD\",\n      fontSize: 18\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, type == \"personal\" ? \"Create a new dashboard to be displayed here.\" : \"When a corporation adds you to collaborate on their dashboards, they will appear here.\")));\n};\n\nexport default ListDashboards;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/dashboards/list-dashboards.jsx"],"names":["useState","makeStyles","fade","Grid","Card","DashbordItem","DashboardIcon","Typography","AddDashboardCard","SearchIcon","InputBase","useStyles","theme","root","marginTop","cardBody","padding","cardTitle","fontSize","backgroundColor","color","fontFamily","emptyCardBody","height","display","flexDirection","justifyContent","alignContent","alignItems","search","position","borderRadius","shape","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","ListDashboards","dashboards","title","type","dashboardType","reloadChanges","classes","searchValue","setSearchValue","handleChange","event","target","value","input","length","filter","dashboard","regex","RegExp","test","map","index","description","id","permissions","$type"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport DashbordItem from \"./dashboard-item\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddDashboardCard from \"./add-dashboard-card\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"25px\",\n  },\n  cardBody: {\n    padding: \"10px\",\n  },\n  cardTitle: {\n    fontSize: \"12px\",\n    backgroundColor: \"#3F51B5\",\n    padding: \"3px 3px 3px 6px\",\n    color: \"#FFF\",\n    fontFamily: [\"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"],\n  },\n  emptyCardBody: {\n    padding: 10,\n    height: 200,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n    borderBottom: \"1px solid #DEDEDE\",\n    marginTop: 10,\n    marginBottom: 15,\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 200,\n    },\n  },\n}));\n\nconst ListDashboards = ({\n  dashboards,\n  title,\n  type,\n  dashboardType,\n  reloadChanges,\n}) => {\n  const classes = useStyles();\n  const [searchValue, setSearchValue] = useState(null);\n\n  const handleChange = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.cardTitle}>{title}</div>\n      <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          fullWidth\n          placeholder=\"Search…\"\n          onChange={handleChange}\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ \"aria-label\": \"search\" }}\n        />\n      </div>\n      {dashboards.length ? (\n        <div className={classes.cardBody}>\n          <Grid container spacing={2}>\n            <Grid item xs={3}>\n              <AddDashboardCard\n                type={dashboardType}\n                reloadChanges={reloadChanges}\n              />\n            </Grid>\n            {dashboards\n              .filter((dashboard) => {\n                const regex = new RegExp(searchValue, \"g\");\n                return searchValue ? regex.test(dashboard.title) : true;\n              })\n              .map((dashboard, index) => {\n                const { title, description, id, permissions } = dashboard;\n                const $type = dashboard.type;\n                return (\n                  <Grid item xs={3} key={index}>\n                    <DashbordItem\n                      type={$type}\n                      title={title}\n                      description={description}\n                      id={id}\n                      permissions={permissions}\n                    />\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </div>\n      ) : (\n        <div className={classes.emptyCardBody}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <AddDashboardCard\n                  type={dashboardType}\n                  reloadChanges={reloadChanges}\n                />\n              </Grid>\n            </Grid>\n            <DashboardIcon style={{ color: \"#DDD\", fontSize: 128 }} />\n            <Typography style={{ color: \"#DDD\", fontSize: 32 }}>\n              No dashboards found.\n            </Typography>\n          </div>\n          <Typography style={{ color: \"#DDD\", fontSize: 18 }}>\n            {type == \"personal\"\n              ? \"Create a new dashboard to be displayed here.\"\n              : \"When a corporation adds you to collaborate on their dashboards, they will appear here.\"}\n          </Typography>\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default ListDashboards;\n"]},"metadata":{},"sourceType":"module"}