{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\dashboards\\\\dashboard-settings.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nvar TabPanel = function TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"full-width-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"full-width-tab-\".concat(index)\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), value === index && __jsx(Box, {\n    p: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, children));\n};\n\nvar a11yProps = function a11yProps(index) {\n  return {\n    id: \"full-width-tab-\".concat(index),\n    'aria-controls': \"full-width-tabpanel-\".concat(index)\n  };\n};\n\nvar useStyles = makeStyles(function () {\n  return {\n    root: {\n      width: 500\n    }\n  };\n});\n\nvar DashboardSettings = function DashboardSettings(_ref) {\n  var id = _ref.id;\n  var classes = useStyles();\n\n  var _useState = useState(0),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    \"aria-label\": \"full width tabs example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Tab, _extends({\n    label: \"General Settings\"\n  }, a11yProps(0), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), __jsx(Tab, _extends({\n    label: \"Privacy Settings\"\n  }, a11yProps(1), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    index: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(TabPanel, {\n    value: value,\n    index: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(SystemWidgets, {\n    onWidgetClick: onWidgetClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), __jsx(TabPanel, {\n    value: value,\n    index: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(MyWidgets, {\n    addPredefinedWidget: addPredefinedWidget,\n    widgetSettings: widgetSettings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))));\n};\n\nexport default DashboardSettings;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/dashboards/dashboard-settings.jsx"],"names":["useState","useEffect","makeStyles","AppBar","Tabs","Tab","Typography","Box","TabPanel","props","children","value","index","other","a11yProps","id","useStyles","root","width","DashboardSettings","classes","setValue","handleChange","event","newValue","onWidgetClick","addPredefinedWidget","widgetSettings"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Box from '@material-ui/core/Box'\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nconst a11yProps = (index) => {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: 500\r\n  }\r\n}))\r\n\r\nconst DashboardSettings = ({ id }) => {\r\n  const classes = useStyles()\r\n  const [value, setValue] = useState(0)\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"General Settings\" {...a11yProps(0)} />\r\n          <Tab label=\"Privacy Settings\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <div\r\n        index={value}\r\n      >\r\n        <TabPanel value={value} index={0}>\r\n          <SystemWidgets onWidgetClick={onWidgetClick} />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <MyWidgets addPredefinedWidget={addPredefinedWidget} widgetSettings={widgetSettings} />\r\n        </TabPanel>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardSettings"]},"metadata":{},"sourceType":"module"}