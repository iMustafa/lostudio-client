{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\widgets\\\\pie-chart-widget.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, PieSeries, Title } from '@devexpress/dx-react-chart-material-ui';\nimport { Animation } from '@devexpress/dx-react-chart';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Drawer from '@material-ui/core/Drawer';\nimport WidgetSettingsActions from '../../actions/widgetSettings.actions';\nimport PieChartWidgetSettings from './settings/pie-chart-widget-settings';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    list: {\n      width: 500\n    },\n    widgetActions: {\n      display: 'flex',\n      backgroundColor: \"#3F51B5\",\n      borderTopRightRadius: \"5px\",\n      borderTopLeftRadius: \"5px\"\n    },\n    widgetTitle: {\n      flex: 1,\n      display: 'flex',\n      alignContent: 'center',\n      alignItems: 'center',\n      paddingLeft: \"10px\"\n    },\n    actionButtons: {\n      flex: 1,\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }\n  };\n});\nvar data = [{\n  country: 'Russia',\n  area: 12\n}, {\n  country: 'Canada',\n  area: 7\n}, {\n  country: 'USA',\n  area: 7\n}, {\n  country: 'China',\n  area: 7\n}, {\n  country: 'Brazil',\n  area: 6\n}, {\n  country: 'Australia',\n  area: 5\n}, {\n  country: 'India',\n  area: 2\n}, {\n  country: 'Others',\n  area: 55\n}];\n\nvar PieChartWidget = function PieChartWidget(_ref) {\n  var widgetId = _ref.widgetId;\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      widget = _useState[0],\n      setWidget = _useState[1];\n\n  var _useState2 = useState([]),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      isLoadingData = _useState3[0],\n      setIsLoadingData = _useState3[1];\n\n  var _useState4 = useState(0),\n      refresh = _useState4[0],\n      setRefresh = _useState4[1];\n\n  var _useState5 = useState({\n    right: false\n  }),\n      menuState = _useState5[0],\n      setMenuState = _useState5[1];\n\n  var getWidgetData = function getWidgetData() {\n    var $data;\n    return _regeneratorRuntime.async(function getWidgetData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.executeWidgetQuery(widgetId));\n\n          case 3:\n            $data = _context.sent;\n            setData($data);\n            return _context.abrupt(\"return\", $data);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]]);\n  };\n\n  var getWidget = function getWidget() {\n    var $widget;\n    return _regeneratorRuntime.async(function getWidget$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.getWidgetSettingsById(widgetId));\n\n          case 3:\n            $widget = _context2.sent;\n            console.log($widget);\n            setWidget($widget);\n            return _context2.abrupt(\"return\", $widget);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  };\n\n  useEffect(function () {\n    getWidget();\n    getWidgetData();\n  }, [refresh]);\n\n  var refreshData = function refreshData() {\n    return _regeneratorRuntime.async(function refreshData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setIsLoadingData(true);\n            getWidget();\n            getWidgetData();\n            setIsLoadingData(false);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  };\n\n  var handleSettingsClose = function handleSettingsClose() {\n    setRefresh(refresh + 1);\n    toggleDrawer('right', false);\n  };\n\n  var toggleDrawer = function toggleDrawer(side, open) {\n    return function (event) {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) return;\n      setMenuState(_objectSpread({}, menuState, _defineProperty({}, side, open)));\n    };\n  };\n\n  var renderChart = function renderChart() {\n    return isLoadingData || !widget ? __jsx(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }) : __jsx(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, __jsx(Chart, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, __jsx(PieSeries, {\n      valueField: \"total\",\n      argumentField: \"month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), __jsx(Title, {\n      text: \"Area of Countries\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), __jsx(Animation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })));\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.widgetActions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.widgetTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(Typography, {\n    style: {\n      color: \"#FFF\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Widget Title\")), __jsx(\"div\", {\n    className: classes.actionButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: toggleDrawer('right', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(SettingsIcon, {\n    style: {\n      color: \"#FFF\"\n    },\n    fontSize: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), __jsx(IconButton, {\n    onClick: refreshData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(RefreshIcon, {\n    style: {\n      color: \"#FFF\"\n    },\n    fontSize: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, renderChart()), __jsx(Drawer, {\n    anchor: \"right\",\n    open: menuState.right,\n    onClose: toggleDrawer('right', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(PieChartWidgetSettings, {\n    widget: widget,\n    handleSettingsClose: handleSettingsClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })));\n};\n\nexport default PieChartWidget;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/widgets/pie-chart-widget.jsx"],"names":["useState","useEffect","makeStyles","Paper","Chart","PieSeries","Title","Animation","Typography","CircularProgress","IconButton","RefreshIcon","SettingsIcon","Drawer","WidgetSettingsActions","PieChartWidgetSettings","useStyles","theme","list","width","widgetActions","display","backgroundColor","borderTopRightRadius","borderTopLeftRadius","widgetTitle","flex","alignContent","alignItems","paddingLeft","actionButtons","justifyContent","data","country","area","PieChartWidget","widgetId","classes","widget","setWidget","setData","isLoadingData","setIsLoadingData","refresh","setRefresh","right","menuState","setMenuState","getWidgetData","executeWidgetQuery","$data","console","log","getWidget","getWidgetSettingsById","$widget","refreshData","handleSettingsClose","toggleDrawer","side","open","event","type","key","renderChart","color"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  Chart,\r\n  PieSeries,\r\n  Title,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { Animation } from '@devexpress/dx-react-chart'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport WidgetSettingsActions from '../../actions/widgetSettings.actions'\r\nimport PieChartWidgetSettings from './settings/pie-chart-widget-settings'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500\r\n  },\r\n  widgetActions: {\r\n    display: 'flex',\r\n    backgroundColor: \"#3F51B5\",\r\n    borderTopRightRadius: \"5px\",\r\n    borderTopLeftRadius: \"5px\",\r\n  },\r\n  widgetTitle: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    paddingLeft: \"10px\"\r\n  },\r\n  actionButtons: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  }\r\n}))\r\n\r\nconst data = [\r\n  { country: 'Russia', area: 12 },\r\n  { country: 'Canada', area: 7 },\r\n  { country: 'USA', area: 7 },\r\n  { country: 'China', area: 7 },\r\n  { country: 'Brazil', area: 6 },\r\n  { country: 'Australia', area: 5 },\r\n  { country: 'India', area: 2 },\r\n  { country: 'Others', area: 55 },\r\n]\r\n\r\nconst PieChartWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [data, setData] = useState([])\r\n  const [isLoadingData, setIsLoadingData] = useState(false)\r\n  const [refresh, setRefresh] = useState(0)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  const getWidgetData = async () => {\r\n    try {\r\n      const $data = await WidgetSettingsActions.executeWidgetQuery(widgetId)\r\n      setData($data)\r\n      return $data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getWidget = async () => {\r\n    try {\r\n      const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n      console.log($widget)\r\n      setWidget($widget)\r\n      return $widget\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWidget()\r\n    getWidgetData()\r\n  }, [refresh])\r\n\r\n  const refreshData = async () => {\r\n    setIsLoadingData(true)\r\n    getWidget()\r\n    getWidgetData()\r\n    setIsLoadingData(false)\r\n  }\r\n\r\n  const handleSettingsClose = () => {\r\n    setRefresh(refresh + 1)\r\n    toggleDrawer('right', false)\r\n  }\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift'))\r\n      return\r\n    setMenuState({ ...menuState, [side]: open })\r\n  }\r\n\r\n  const renderChart = () => {\r\n    return isLoadingData || !widget ? (<CircularProgress />) : (\r\n      <Paper>\r\n        <Chart\r\n          data={data}\r\n        >\r\n          <PieSeries\r\n            valueField=\"total\"\r\n            argumentField=\"month\"\r\n          />\r\n          <Title\r\n            text=\"Area of Countries\"\r\n          />\r\n          <Animation />\r\n        </Chart>\r\n      </Paper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.widgetActions}>\r\n        <div className={classes.widgetTitle}>\r\n          <Typography style={{ color: \"#FFF\" }}>Widget Title</Typography>\r\n        </div>\r\n        <div className={classes.actionButtons}>\r\n          <IconButton onClick={toggleDrawer('right', true)}>\r\n            <SettingsIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton onClick={refreshData}>\r\n            <RefreshIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {renderChart()}\r\n      </div>\r\n      <Drawer anchor=\"right\" open={menuState.right} onClose={toggleDrawer('right', false)}>\r\n        <PieChartWidgetSettings widget={widget} handleSettingsClose={handleSettingsClose} />\r\n      </Drawer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PieChartWidget"]},"metadata":{},"sourceType":"module"}