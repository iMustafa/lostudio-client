{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/pages/dashboards/[id]/edit.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridLayout from 'react-grid-layout';\nimport Cookies from 'next-cookies';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport ArrowLeft from '@material-ui/icons/ArrowLeft';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Drawer from '@material-ui/core/Drawer';\nimport DashboardActions from '../../../actions/dashboard.actions';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nimport WidgetSidemenu from '../../../components/dashboards/widgets-menu';\nimport DashboardSettings from '../../../components/dashboards/settings/dashboard-settings';\nimport { useRouter } from 'next/router';\nimport { decideWidgetSettings, decideWidget } from '../../../helpers/decide-widgets';\nconst useStyles = makeStyles({\n  list: {\n    width: 500\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\n\nconst EditDashboard = WidgetSettings => {\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    0: menuState,\n    1: setMenuState\n  } = useState({\n    right: false,\n    addWidget: false,\n    settings: false\n  });\n  const {\n    0: layout,\n    1: setLayout\n  } = useState(Object.values(WidgetSettings));\n  const {\n    0: addType,\n    1: setAddType\n  } = useState(null);\n\n  const onLayoutChange = async $event => {\n    try {\n      const layouts = layout.map(item => {\n        const $eventItem = $event.filter($item => $item.i == item.layout.i)[0];\n        return _objectSpread({}, item, {\n          layout: $eventItem\n        });\n      });\n      await Promise.all(layouts.map(item => WidgetSettingsActions.updateWidgetSettings(item.id, item)));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) return;\n    setMenuState(_objectSpread({}, menuState, {\n      [side]: open\n    }));\n  };\n\n  const addPredefinedWidget = async (widget, _) => {\n    try {\n      const $widget = _objectSpread({}, widget);\n\n      delete $widget.id;\n      delete $widget.icon;\n      $widget.layout.i = uuidv4();\n      const saveWidget = await WidgetSettingsActions.createWidgetSettings($widget);\n      await DashboardActions.addWidgetToDashboard(id, saveWidget.id);\n      setLayout([...layout, {\n        layout: $widget.layout,\n        type: $widget.type\n      }]);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onWidgetAdd = async config => {\n    try {\n      const layoutItem = _objectSpread({\n        layout: {\n          i: uuidv4(),\n          x: 0,\n          y: 0,\n          w: 6,\n          h: 11,\n          maxW: 16,\n          isDraggable: true,\n          isResizable: true\n        }\n      }, config);\n\n      const saveWidget = await WidgetSettingsActions.createWidgetSettings(layoutItem);\n      await DashboardActions.addWidgetToDashboard(id, saveWidget.id);\n      layoutItem.id = saveWidget.id;\n      setLayout([...layout, layoutItem]);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const addWidget = async (type, _) => {\n    setAddType(type);\n    setMenuState(_objectSpread({}, menuState, {\n      addWidget: true,\n      right: false\n    })); // try {\n    //   const layoutItem = {\n    //     layout: { i: uuidv4(), x: 0, y: 0, w: 6, h: 11, maxW: 16, isDraggable: true, isResizable: true },\n    //     type\n    //   }\n    //   const saveWidget = await WidgetSettingsActions.createWidgetSettings(layoutItem)\n    //   await DashboardActions.addWidgetToDashboard(id, saveWidget.id)\n    //   layoutItem.id = saveWidget.id\n    //   setLayout([...layout, layoutItem])\n    // } catch (e) {\n    //   console.log(e)\n    // }\n  };\n\n  const sideList = () => __jsx(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(WidgetSidemenu, {\n    onWidgetClick: addWidget,\n    addPredefinedWidget: addPredefinedWidget,\n    widgetSettings: Object.values(WidgetSettings),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }));\n\n  const renderWidgets = () => layout.map((item, i) => __jsx(\"div\", {\n    key: item && item.layout ? item.layout.i : i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, decideWidget(item)));\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(Drawer, {\n    anchor: \"right\",\n    open: menuState.right,\n    onClose: toggleDrawer('right', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, sideList()), __jsx(Drawer, {\n    anchor: \"right\",\n    open: menuState.addWidget,\n    onClose: toggleDrawer('addWidget', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, decideWidgetSettings(addType, onWidgetAdd)), __jsx(Drawer, {\n    anchor: \"right\",\n    open: menuState.settings,\n    onClose: toggleDrawer('settings', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, __jsx(DashboardSettings, {\n    id: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), __jsx(Card, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      justifySelf: 'flex-start',\n      display: 'flex',\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    \"aria-label\": \"back\",\n    size: \"medium\",\n    style: {\n      outline: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(ArrowLeft, {\n    fontSize: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    style: {\n      justifySelf: 'flex-end',\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'flex-end',\n      paddingRight: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(Button, {\n    style: {\n      outline: 'none'\n    },\n    size: \"small\",\n    startIcon: __jsx(SaveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Save\"), __jsx(Button, {\n    style: {\n      marginLeft: '10px',\n      outline: 'none'\n    },\n    size: \"small\",\n    onClick: toggleDrawer('right', true),\n    startIcon: __jsx(DashboardIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Widgets\"), __jsx(Button, {\n    style: {\n      marginLeft: '10px',\n      outline: 'none'\n    },\n    size: \"small\",\n    onClick: toggleDrawer('settings', true),\n    startIcon: __jsx(SettingsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Settings\"))), __jsx(\"div\", {\n    style: {\n      paddingBottom: '15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, __jsx(GridLayout, {\n    className: \"layout\",\n    cols: 16,\n    rowHeight: 30,\n    width: 1920,\n    layout: layout.map(item => item.layout),\n    onLayoutChange: onLayoutChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, renderWidgets())));\n};\n\nEditDashboard.getInitialProps = async req => {\n  const Authorization = Cookies(req).id;\n  const WidgetSettings = await DashboardActions.getWidgetSettings({\n    Authorization,\n    id: \"5e413f33f6af6d17b44df269\"\n  });\n  return WidgetSettings;\n};\n\nexport default EditDashboard;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/pages/dashboards/[id]/edit.jsx"],"names":["useState","v4","uuidv4","makeStyles","GridLayout","Cookies","IconButton","Button","Card","ArrowLeft","SaveIcon","DashboardIcon","SettingsIcon","Drawer","DashboardActions","WidgetSettingsActions","WidgetSidemenu","DashboardSettings","useRouter","decideWidgetSettings","decideWidget","useStyles","list","width","fullList","EditDashboard","WidgetSettings","classes","router","id","query","menuState","setMenuState","right","addWidget","settings","layout","setLayout","Object","values","addType","setAddType","onLayoutChange","$event","layouts","map","item","$eventItem","filter","$item","i","Promise","all","updateWidgetSettings","err","console","log","toggleDrawer","side","open","event","type","key","addPredefinedWidget","widget","_","$widget","icon","saveWidget","createWidgetSettings","addWidgetToDashboard","e","onWidgetAdd","config","layoutItem","x","y","w","h","maxW","isDraggable","isResizable","sideList","renderWidgets","display","flexDirection","justifySelf","flex","outline","justifyContent","paddingRight","marginLeft","paddingBottom","getInitialProps","req","Authorization","getWidgetSettings"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport GridLayout from 'react-grid-layout'\nimport Cookies from 'next-cookies'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport ArrowLeft from '@material-ui/icons/ArrowLeft'\nimport SaveIcon from '@material-ui/icons/Save'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport Drawer from '@material-ui/core/Drawer'\nimport DashboardActions from '../../../actions/dashboard.actions'\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\nimport WidgetSidemenu from '../../../components/dashboards/widgets-menu'\nimport DashboardSettings from '../../../components/dashboards/settings/dashboard-settings'\nimport { useRouter } from 'next/router'\nimport { decideWidgetSettings, decideWidget } from '../../../helpers/decide-widgets'\n\nconst useStyles = makeStyles({\n  list: {\n    width: 500\n  },\n  fullList: {\n    width: 'auto'\n  }\n})\n\nconst EditDashboard = (WidgetSettings) => {\n  const classes = useStyles()\n  const router = useRouter()\n  const { id } = router.query\n  const [menuState, setMenuState] = useState({ right: false, addWidget: false, settings: false })\n  const [layout, setLayout] = useState(Object.values(WidgetSettings))\n  const [addType, setAddType] = useState(null)\n\n  const onLayoutChange = async ($event) => {\n    try {\n      const layouts = layout.map(item => {\n        const $eventItem = $event.filter($item => $item.i == item.layout.i)[0]\n        return { ...item, layout: $eventItem }\n      })\n      await Promise.all(layouts.map(item => WidgetSettingsActions.updateWidgetSettings(item.id, item)))\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift'))\n      return\n\n    setMenuState({ ...menuState, [side]: open })\n  }\n\n  const addPredefinedWidget = async (widget, _) => {\n    try {\n      const $widget = { ...widget }\n      delete $widget.id; delete $widget.icon\n      $widget.layout.i = uuidv4()\n      const saveWidget = await WidgetSettingsActions.createWidgetSettings($widget)\n      await DashboardActions.addWidgetToDashboard(id, saveWidget.id)\n      setLayout([...layout, { layout: $widget.layout, type: $widget.type }])\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const onWidgetAdd = async (config) => {\n    try {\n      const layoutItem = {\n        layout: { i: uuidv4(), x: 0, y: 0, w: 6, h: 11, maxW: 16, isDraggable: true, isResizable: true },\n        ...config\n      }\n      const saveWidget = await WidgetSettingsActions.createWidgetSettings(layoutItem)\n      await DashboardActions.addWidgetToDashboard(id, saveWidget.id)\n      layoutItem.id = saveWidget.id\n      setLayout([...layout, layoutItem])\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const addWidget = async (type, _) => {\n    setAddType(type)\n    setMenuState({ ...menuState, addWidget: true, right: false })\n    // try {\n    //   const layoutItem = {\n    //     layout: { i: uuidv4(), x: 0, y: 0, w: 6, h: 11, maxW: 16, isDraggable: true, isResizable: true },\n    //     type\n    //   }\n    //   const saveWidget = await WidgetSettingsActions.createWidgetSettings(layoutItem)\n    //   await DashboardActions.addWidgetToDashboard(id, saveWidget.id)\n    //   layoutItem.id = saveWidget.id\n    //   setLayout([...layout, layoutItem])\n    // } catch (e) {\n    //   console.log(e)\n    // }\n  }\n\n  const sideList = () => (\n    <div className={classes.list} role=\"presentation\">\n      <WidgetSidemenu onWidgetClick={addWidget} addPredefinedWidget={addPredefinedWidget} widgetSettings={Object.values(WidgetSettings)} />\n    </div>\n  )\n\n  const renderWidgets = () => layout.map((item, i) => (\n    <div key={item && item.layout ? item.layout.i : i}>\n      {decideWidget(item)}\n    </div>\n  ))\n\n  return (\n    <div>\n      <Drawer anchor=\"right\" open={menuState.right} onClose={toggleDrawer('right', false)}>\n        {sideList()}\n      </Drawer>\n\n      <Drawer anchor=\"right\" open={menuState.addWidget} onClose={toggleDrawer('addWidget', false)}>\n        {decideWidgetSettings(addType, onWidgetAdd)}\n      </Drawer>\n\n      <Drawer anchor=\"right\" open={menuState.settings} onClose={toggleDrawer('settings', false)}>\n        <DashboardSettings id={id} />\n      </Drawer>\n\n      <Card style={{ display: 'flex', flexDirection: 'row' }}>\n        <div style={{ justifySelf: 'flex-start', display: 'flex', flex: 1 }}>\n          <IconButton aria-label=\"back\" size=\"medium\" style={{ outline: 'none' }}>\n            <ArrowLeft fontSize=\"default\" />\n          </IconButton>\n        </div>\n        <div style={{ justifySelf: 'flex-end', display: 'flex', flex: 1, justifyContent: 'flex-end', paddingRight: '10px' }}>\n          <Button style={{ outline: 'none' }} size=\"small\" startIcon={<SaveIcon />}>\n            Save\n          </Button>\n          <Button style={{ marginLeft: '10px', outline: 'none' }} size=\"small\" onClick={toggleDrawer('right', true)} startIcon={<DashboardIcon />}>\n            Widgets\n          </Button>\n          <Button style={{ marginLeft: '10px', outline: 'none' }} size=\"small\" onClick={toggleDrawer('settings', true)} startIcon={<SettingsIcon />}>\n            Settings\n          </Button>\n        </div>\n      </Card>\n\n      <div style={{ paddingBottom: '15px' }}>\n        <GridLayout className=\"layout\" cols={16} rowHeight={30} width={1920} layout={layout.map(item => item.layout)} onLayoutChange={onLayoutChange}>\n          {renderWidgets()}\n        </GridLayout>\n      </div>\n    </div>\n  )\n};\n\nEditDashboard.getInitialProps = async (req) => {\n  const Authorization = Cookies(req).id\n  const WidgetSettings = await DashboardActions.getWidgetSettings({ Authorization, id: \"5e413f33f6af6d17b44df269\" })\n  return WidgetSettings\n}\n\nexport default EditDashboard;"]},"metadata":{},"sourceType":"module"}