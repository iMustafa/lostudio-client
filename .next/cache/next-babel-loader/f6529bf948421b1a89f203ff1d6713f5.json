{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/form-controls/password/password-widget.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nvar useStyles = makeStyles(function (theme) {\n  return {};\n});\n\nvar PasswordWidget = function PasswordWidget(_ref) {\n  var widgetId = _ref.widgetId;\n  var classes = useStyles();\n\n  var _useState = useState({\n    properties: {}\n  }),\n      widget = _useState[0],\n      setWidget = _useState[1];\n\n  var _useState2 = useState({\n    right: false\n  }),\n      menuState = _useState2[0],\n      setMenuState = _useState2[1];\n\n  var _useState3 = useState(''),\n      value = _useState3[0],\n      setValue = _useState3[1];\n\n  var handleChange = function handleChange(event) {\n    var value = event.target.value;\n    setValue(value);\n  };\n\n  useEffect(function () {\n    var getData = function getData() {\n      var $widget;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(WidgetSettingsActions.getWidgetSettingsById(widgetId));\n\n            case 3:\n              $widget = _context.sent;\n              setWidget($widget);\n              return _context.abrupt(\"return\", $widget);\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    getData();\n  }, []);\n  return __jsx(FormControl, {\n    className: classes.textField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(TextField, {\n    name: widget.properties.name,\n    label: widget.properties.label,\n    id: widget.properties.id,\n    fullWidth: true,\n    onChange: handleChange,\n    className: widget.properties.className,\n    value: value,\n    type: 'password',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default PasswordWidget;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/form-controls/password/password-widget.jsx"],"names":["useState","useEffect","makeStyles","TextField","FormControl","useStyles","theme","PasswordWidget","widgetId","classes","properties","widget","setWidget","right","menuState","setMenuState","value","setValue","handleChange","event","target","getData","WidgetSettingsActions","getWidgetSettingsById","$widget","console","log","textField","name","label","id","className"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAAC,UAAAI,KAAK;AAAA,SAAK,EAAL;AAAA,CAAN,CAA5B;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACvC,MAAMC,OAAO,GAAGJ,SAAS,EAAzB;;AADuC,kBAEXL,QAAQ,CAAC;AAAEU,IAAAA,UAAU,EAAE;AAAd,GAAD,CAFG;AAAA,MAEhCC,MAFgC;AAAA,MAExBC,SAFwB;;AAAA,mBAGLZ,QAAQ,CAAC;AAAEa,IAAAA,KAAK,EAAE;AAAT,GAAD,CAHH;AAAA,MAGhCC,SAHgC;AAAA,MAGrBC,YAHqB;;AAAA,mBAIbf,QAAQ,CAAC,EAAD,CAJK;AAAA,MAIhCgB,KAJgC;AAAA,MAIzBC,QAJyB;;AAMvC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,QACtBH,KADsB,GACZG,KAAK,CAACC,MADM,CACtBJ,KADsB;AAE9BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAHD;;AAKAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMoB,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEUC,qBAAqB,CAACC,qBAAtB,CAA4Cf,QAA5C,CAFV;;AAAA;AAENgB,cAAAA,OAFM;AAGZZ,cAAAA,SAAS,CAACY,OAAD,CAAT;AAHY,+CAILA,OAJK;;AAAA;AAAA;AAAA;AAMZC,cAAAA,OAAO,CAACC,GAAR;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AASAL,IAAAA,OAAO;AACR,GAXQ,EAWN,EAXM,CAAT;AAaA,SACE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAEZ,OAAO,CAACkB,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,IAAI,EAAEhB,MAAM,CAACD,UAAP,CAAkBkB,IAD1B;AAEE,IAAA,KAAK,EAAEjB,MAAM,CAACD,UAAP,CAAkBmB,KAF3B;AAGE,IAAA,EAAE,EAAElB,MAAM,CAACD,UAAP,CAAkBoB,EAHxB;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,QAAQ,EAAEZ,YALZ;AAME,IAAA,SAAS,EAAEP,MAAM,CAACD,UAAP,CAAkBqB,SAN/B;AAOE,IAAA,KAAK,EAAEf,KAPT;AAQE,IAAA,IAAI,EAAE,UARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAcD,CAtCD;;AAwCA,eAAeT,cAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport FormControl from '@material-ui/core/FormControl'\n\nconst useStyles = makeStyles(theme => ({\n\n}))\n\nconst PasswordWidget = ({ widgetId }) => {\n  const classes = useStyles()\n  const [widget, setWidget] = useState({ properties: {} })\n  const [menuState, setMenuState] = useState({ right: false })\n  const [value, setValue] = useState('')\n\n  const handleChange = (event) => {\n    const { value } = event.target\n    setValue(value)\n  }\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\n        setWidget($widget)\n        return $widget\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    getData()\n  }, [])\n\n  return (\n    <FormControl className={classes.textField}>\n      <TextField\n        name={widget.properties.name}\n        label={widget.properties.label}\n        id={widget.properties.id}\n        fullWidth\n        onChange={handleChange}\n        className={widget.properties.className}\n        value={value}\n        type={'password'}\n      />\n    </FormControl>\n  )\n}\n\nexport default PasswordWidget"]},"metadata":{},"sourceType":"module"}