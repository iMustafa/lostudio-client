{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-measure-conditions.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nconst useStyles = makeStyles({});\n\nconst TableMeasureConditions = ({\n  widget,\n  handleSettingsClose,\n  isAdding,\n  onWidgetAdd\n}) => {\n  const classes = useStyles();\n  const {\n    0: measureConditionsFields,\n    1: updateMeasureConditionsFields\n  } = useState({\n    expression: null,\n    minValue: null,\n    maxValue: null,\n    field: null\n  });\n  const {\n    0: measureConditions,\n    1: setMeasureConditions\n  } = useState([]);\n  const widgetId = widget.id;\n  useEffect(() => {\n    const getMeasureConditions = async () => {\n      try {\n        const $measureConditions = await WidgetSettingsActions.getWidgetSettingsMeasureConditions(widgetId);\n        console.log($measureConditions);\n        setMeasureConditions($measureConditions);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getMeasureConditions();\n    console.log(widget);\n  }, []);\n\n  const addMeasureCondition = async () => {\n    try {\n      const measureCondition = await WidgetSettingsActions.createWidgetSettingsMeasureConditions(widgetId, {});\n      console.log(measureCondition);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const removeMeasureCondition = async measureConditionId => {\n    try {\n      const measureCondition = await WidgetSettingsActions.deleteWidgetSettingsMeasureConditions(widgetId, measureConditionId);\n      console.log(measureCondition);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default TableMeasureConditions;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-measure-conditions.jsx"],"names":["useState","useEffect","makeStyles","Button","InputLabel","Select","MenuItem","FormControl","FormControlLabel","WidgetSettingsActions","useStyles","TableMeasureConditions","widget","handleSettingsClose","isAdding","onWidgetAdd","classes","measureConditionsFields","updateMeasureConditionsFields","expression","minValue","maxValue","field","measureConditions","setMeasureConditions","widgetId","id","getMeasureConditions","$measureConditions","getWidgetSettingsMeasureConditions","console","log","e","addMeasureCondition","measureCondition","createWidgetSettingsMeasureConditions","removeMeasureCondition","measureConditionId","deleteWidgetSettingsMeasureConditions"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAC,EAAD,CAA5B;;AAIA,MAAMS,sBAAsB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,mBAAV;AAA+BC,EAAAA,QAA/B;AAAyCC,EAAAA;AAAzC,CAAD,KAA4D;AACzF,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAM;AAAA,OAACO,uBAAD;AAAA,OAA0BC;AAA1B,MAA2DlB,QAAQ,CAAC;AACxEmB,IAAAA,UAAU,EAAE,IAD4D;AACtDC,IAAAA,QAAQ,EAAE,IAD4C;AACtCC,IAAAA,QAAQ,EAAE,IAD4B;AACtBC,IAAAA,KAAK,EAAE;AADe,GAAD,CAAzE;AAGA,QAAM;AAAA,OAACC,iBAAD;AAAA,OAAoBC;AAApB,MAA4CxB,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAMyB,QAAQ,GAAGb,MAAM,CAACc,EAAxB;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0B,oBAAoB,GAAG,YAAY;AACvC,UAAI;AACF,cAAMC,kBAAkB,GAAG,MAAMnB,qBAAqB,CAACoB,kCAAtB,CAAyDJ,QAAzD,CAAjC;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYH,kBAAZ;AACAJ,QAAAA,oBAAoB,CAACI,kBAAD,CAApB;AACD,OAJD,CAIE,OAAMI,CAAN,EAAS;AACTF,QAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD;AACF,KARD;;AASAL,IAAAA,oBAAoB;AACpBG,IAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AACD,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMqB,mBAAmB,GAAG,YAAY;AACtC,QAAI;AACF,YAAMC,gBAAgB,GAAG,MAAMzB,qBAAqB,CAAC0B,qCAAtB,CAC7BV,QAD6B,EAE7B,EAF6B,CAA/B;AAIAK,MAAAA,OAAO,CAACC,GAAR,CAAYG,gBAAZ;AACD,KAND,CAME,OAAOF,CAAP,EAAU;AACVF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD;AACF,GAVD;;AAYA,QAAMI,sBAAsB,GAAG,MAAOC,kBAAP,IAA8B;AAC3D,QAAI;AACF,YAAMH,gBAAgB,GAAG,MAAMzB,qBAAqB,CAAC6B,qCAAtB,CAA4Db,QAA5D,EAAsEY,kBAAtE,CAA/B;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYG,gBAAZ;AACD,KAHD,CAGE,OAAOF,CAAP,EAAU;AACVF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD;AACF,GAPD;;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CAhDD;;AAkDA,eAAerB,sBAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\n\nconst useStyles = makeStyles({\n\n})\n\nconst TableMeasureConditions = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\n  const classes = useStyles()\n  const [measureConditionsFields, updateMeasureConditionsFields] = useState({\n    expression: null, minValue: null, maxValue: null, field: null\n  })\n  const [measureConditions, setMeasureConditions] = useState([])\n  const widgetId = widget.id\n\n  useEffect(() => {\n    const getMeasureConditions = async () => {\n      try {\n        const $measureConditions = await WidgetSettingsActions.getWidgetSettingsMeasureConditions(widgetId)\n        console.log($measureConditions)\n        setMeasureConditions($measureConditions)\n      } catch(e) {\n        console.log(e)\n      }\n    }\n    getMeasureConditions()\n    console.log(widget)\n  }, [])\n\n  const addMeasureCondition = async () => {\n    try {\n      const measureCondition = await WidgetSettingsActions.createWidgetSettingsMeasureConditions(\n        widgetId,\n        {}\n      )\n      console.log(measureCondition)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const removeMeasureCondition = async (measureConditionId) => {\n    try {\n      const measureCondition = await WidgetSettingsActions.deleteWidgetSettingsMeasureConditions(widgetId, measureConditionId)\n      console.log(measureCondition)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  return (\n    <div>\n\n    </div>\n  )\n}\n\nexport default TableMeasureConditions"]},"metadata":{},"sourceType":"module"}