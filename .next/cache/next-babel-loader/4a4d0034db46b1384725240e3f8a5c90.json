{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/dashboards/settings/sub-boards-settings.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport DashboardActions from '../../../actions/dashboard.actions';\n\nvar SubDashboardSettings = function SubDashboardSettings(_ref) {\n  var id = _ref.id,\n      refresh = _ref.refresh,\n      setRefresh = _ref.setRefresh;\n\n  var _useState = useState([]),\n      subDashboards = _useState[0],\n      setSubDashboards = _useState[1];\n\n  useEffect(function () {\n    var getSubDashboards = function getSubDashboards() {\n      var $subDashBoards;\n      return _regeneratorRuntime.async(function getSubDashboards$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(DashboardActions.getSubDashboards({\n                id: id\n              }));\n\n            case 3:\n              $subDashBoards = _context.sent;\n              setSubDashboards($subDashBoards);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    getSubDashboards();\n  }, []);\n  return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, \"Sub Dashboards Settings\");\n};\n\nexport default SubDashboardSettings;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/dashboards/settings/sub-boards-settings.jsx"],"names":["useState","useEffect","DashboardActions","SubDashboardSettings","id","refresh","setRefresh","subDashboards","setSubDashboards","getSubDashboards","$subDashBoards","console","log"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAiC;AAAA,MAA9BC,EAA8B,QAA9BA,EAA8B;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBAClBN,QAAQ,CAAC,EAAD,CADU;AAAA,MACrDO,aADqD;AAAA,MACtCC,gBADsC;;AAG5DP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEQP,gBAAgB,CAACO,gBAAjB,CAAkC;AAAEL,gBAAAA,EAAE,EAAFA;AAAF,eAAlC,CAFR;;AAAA;AAEfM,cAAAA,cAFe;AAGrBF,cAAAA,gBAAgB,CAACE,cAAD,CAAhB;AAHqB;AAAA;;AAAA;AAAA;AAAA;AAKrBC,cAAAA,OAAO,CAACC,GAAR;;AALqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAzB;;AAQAH,IAAAA,gBAAgB;AACjB,GAVQ,EAUN,EAVM,CAAT;AAYA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF;AAGD,CAlBD;;AAoBA,eAAeN,oBAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport DashboardActions from '../../../actions/dashboard.actions'\n\nconst SubDashboardSettings = ({ id, refresh, setRefresh }) => {\n  const [subDashboards, setSubDashboards] = useState([])\n\n  useEffect(() => {\n    const getSubDashboards = async () => {\n      try {\n        const $subDashBoards = await DashboardActions.getSubDashboards({ id })\n        setSubDashboards($subDashBoards)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    getSubDashboards()\n  }, [])\n\n  return (\n    <h1>Sub Dashboards Settings</h1>\n  )\n}\n\nexport default SubDashboardSettings"]},"metadata":{},"sourceType":"module"}