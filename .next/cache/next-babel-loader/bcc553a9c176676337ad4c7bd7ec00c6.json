{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, ArgumentAxis, ValueAxis, AreaSeries, Title, Legend } from '@devexpress/dx-react-chart-material-ui';\nimport { ArgumentScale, Animation } from '@devexpress/dx-react-chart';\nimport { scalePoint } from 'd3-scale';\nimport { withStyles } from '@material-ui/core/styles';\nvar data = [{\n  year: '2010',\n  android: 67225,\n  ios: 46598\n}, {\n  year: '2011',\n  android: 179873,\n  ios: 90560\n}, {\n  year: '2012',\n  android: 310088,\n  ios: 118848\n}, {\n  year: '2015',\n  android: 539318,\n  ios: 189924\n}];\nvar chartRootStyles = {\n  chart: {\n    paddingRight: '20px'\n  }\n};\nvar legendStyles = {\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row'\n  }\n};\n\nvar legendLabelStyles = function legendLabelStyles(theme) {\n  return {\n    label: {\n      paddingTop: theme.spacing(1)\n    }\n  };\n};\n\nvar legendItemStyles = {\n  item: {\n    flexDirection: 'column'\n  }\n};\n\nvar ChartRootBase = function ChartRootBase(_ref) {\n  var classes = _ref.classes,\n      restProps = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  return __jsx(Chart.Root, _extends({}, restProps, {\n    className: classes.chart\n  }));\n};\n\nvar LegendRootBase = function LegendRootBase(_ref2) {\n  var classes = _ref2.classes,\n      restProps = _objectWithoutProperties(_ref2, [\"classes\"]);\n\n  return __jsx(Legend.Root, _extends({}, restProps, {\n    className: classes.root\n  }));\n};\n\nvar LegendLabelBase = function LegendLabelBase(_ref3) {\n  var classes = _ref3.classes,\n      restProps = _objectWithoutProperties(_ref3, [\"classes\"]);\n\n  return __jsx(Legend.Label, _extends({}, restProps, {\n    className: classes.label\n  }));\n};\n\nvar LegendItemBase = function LegendItemBase(_ref4) {\n  var classes = _ref4.classes,\n      restProps = _objectWithoutProperties(_ref4, [\"classes\"]);\n\n  return __jsx(Legend.Item, _extends({}, restProps, {\n    className: classes.item\n  }));\n};\n\nvar ChartRoot = withStyles(chartRootStyles, {\n  name: 'ChartRoot'\n})(ChartRootBase);\nvar LegendRoot = withStyles(legendStyles, {\n  name: 'LegendRoot'\n})(LegendRootBase);\nvar LegendLabel = withStyles(legendLabelStyles, {\n  name: 'LegendLabel'\n})(LegendLabelBase);\nvar LegendItem = withStyles(legendItemStyles, {\n  name: 'LegendItem'\n})(LegendItemBase);\n\nvar Demo = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Demo, _React$PureComponent);\n\n  var _super = _createSuper(Demo);\n\n  function Demo(props) {\n    var _this;\n\n    _classCallCheck(this, Demo);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: data\n    };\n    return _this;\n  }\n\n  _createClass(Demo, [{\n    key: \"render\",\n    value: function render() {\n      var chartData = this.state.data;\n      return __jsx(Paper, null, __jsx(Chart, {\n        data: chartData,\n        rootComponent: ChartRoot\n      }, __jsx(ArgumentScale, {\n        factory: scalePoint\n      }), __jsx(ArgumentAxis, null), __jsx(ValueAxis, null), __jsx(AreaSeries, {\n        name: \"Android\",\n        valueField: \"android\",\n        argumentField: \"year\"\n      }), __jsx(AreaSeries, {\n        name: \"iOS\",\n        valueField: \"ios\",\n        argumentField: \"year\"\n      }), __jsx(Animation, null), __jsx(Legend, {\n        position: \"bottom\",\n        rootComponent: LegendRoot,\n        itemComponent: LegendItem,\n        labelComponent: LegendLabel\n      }), __jsx(Title, {\n        text: \"Worldwide Sales to End Users by OS\"\n      })));\n    }\n  }]);\n\n  return Demo;\n}(React.PureComponent);\n\nexport { Demo as default };","map":null,"metadata":{},"sourceType":"module"}