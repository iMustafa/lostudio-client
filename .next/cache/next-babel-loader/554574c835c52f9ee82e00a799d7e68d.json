{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/signup/personal.jsx\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Swal from 'sweetalert2';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport { register } from '../../actions/auth.actions';\nimport countries from '../../helpers/countries';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from '@material-ui/core';\nimport router from 'next/router';\n\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined' ? isoCode.toUpperCase().replace(/./g, function (_char) {\n    return String.fromCodePoint(_char.charCodeAt(0) + 127397);\n  }) : isoCode;\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      minHeight: '80vh',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    loginCard: {\n      padding: '30px 15px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'center'\n    },\n    headerHolder: {\n      borderRight: '1px solid #DEDEDE'\n    },\n    formHolder: {},\n    textField: {\n      width: '90%'\n    },\n    fieldsGrid: {\n      marginTop: theme.spacing(4)\n    },\n    signupButtonHolder: {\n      display: 'flex',\n      marginTop: theme.spacing(4),\n      justifyContent: 'center'\n    },\n    signupButton: {\n      width: '50%'\n    },\n    loginHolder: {\n      textAlign: 'center',\n      marginTop: theme.spacing(3)\n    },\n    loginText: {\n      marginRight: theme.spacing(2)\n    },\n    loginButton: {}\n  };\n});\n\nvar personalSignUp = function personalSignUp() {\n  var classes = useStyles();\n\n  var _useState = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    countryCode: '',\n    phoneNumber: '',\n    country: '',\n    city: '',\n    password: '',\n    confirmPassword: '',\n    roleString: 'personal'\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var handleChange = function handleChange(e) {\n    setData(_objectSpread({}, data, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var submitSignup = function submitSignup() {\n    var user;\n    return _regeneratorRuntime.async(function submitSignup$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(register(data));\n\n          case 3:\n            user = _context.sent;\n            router.push('/login');\n            _context.next = 14;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            _context.t1 = _context.t0.status;\n            _context.next = _context.t1 === 422 ? 12 : 14;\n            break;\n\n          case 12:\n            Swal.fire('Error', 'Email already exists', 'error');\n            return _context.abrupt(\"break\", 14);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    name: \"firstName\",\n    label: 'First Name',\n    required: true,\n    onChange: handleChange,\n    value: data.firstName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    name: \"lastName\",\n    label: 'Last Name',\n    required: true,\n    onChange: handleChange,\n    value: data.lastName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    className: classes.fieldsGrid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    name: \"email\",\n    label: 'Email',\n    type: 'email',\n    required: true,\n    onChange: handleChange,\n    value: data.email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, __jsx(Autocomplete, {\n    options: countries,\n    getOptionLabel: function getOptionLabel(option) {\n      return \"+\".concat(option.phone);\n    },\n    renderOption: function renderOption(option) {\n      return __jsx(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      }, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }, countryToFlag(option.code)), __jsx(\"span\", {\n        style: {\n          fontSize: '10px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }, \"+\", option.phone));\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        name: 'countryCode',\n        label: \"Country Code\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 19\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, __jsx(TextField, {\n    name: \"phoneNumber\",\n    label: 'Phone Number',\n    onChange: handleChange,\n    value: data.phoneNumber,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  })))))), __jsx(Grid, {\n    container: true,\n    className: classes.fieldsGrid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, __jsx(Autocomplete, {\n    options: countries,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.label;\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        name: 'country',\n        label: \"Country\",\n        fullWidth: true,\n        required: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    name: \"city\",\n    label: 'City',\n    required: true,\n    onChange: handleChange,\n    value: data.city,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    className: classes.fieldsGrid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    name: \"password\",\n    label: 'Password',\n    required: true,\n    onChange: handleChange,\n    value: data.password,\n    type: 'password',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    className: classes.textField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    name: \"confirmPassword\",\n    label: 'Confirm Password',\n    required: true,\n    onChange: handleChange,\n    value: data.confirmPassword,\n    type: 'password',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.signupButtonHolder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    className: classes.signupButton,\n    onClick: submitSignup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, \"Signup\")));\n};\n\nexport default personalSignUp;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/signup/personal.jsx"],"names":["React","useState","useEffect","makeStyles","Swal","Button","FormControl","Grid","register","countries","Autocomplete","TextField","router","countryToFlag","isoCode","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","useStyles","theme","root","minHeight","alignItems","justifyContent","loginCard","padding","display","flexDirection","headerHolder","borderRight","formHolder","textField","width","fieldsGrid","marginTop","spacing","signupButtonHolder","signupButton","loginHolder","textAlign","loginText","marginRight","loginButton","personalSignUp","classes","firstName","lastName","email","countryCode","phoneNumber","country","city","password","confirmPassword","roleString","data","setData","handleChange","e","target","name","value","submitSignup","user","push","status","fire","option","phone","code","fontSize","params","label"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Swal from 'sweetalert2'\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport { register } from '../../actions/auth.actions';\nimport countries from '../../helpers/countries'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from '@material-ui/core';\nimport router from 'next/router';\n\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode.toUpperCase().replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: '80vh',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  loginCard: {\n    padding: '30px 15px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  headerHolder: {\n    borderRight: '1px solid #DEDEDE'\n  },\n  formHolder: {\n\n  },\n  textField: {\n    width: '90%'\n  },\n  fieldsGrid: {\n    marginTop: theme.spacing(4)\n  },\n  signupButtonHolder: {\n    display: 'flex',\n    marginTop: theme.spacing(4),\n    justifyContent: 'center'\n  },\n  signupButton: {\n    width: '50%'\n  },\n  loginHolder: {\n    textAlign: 'center',\n    marginTop: theme.spacing(3)\n  },\n  loginText: {\n    marginRight: theme.spacing(2)\n  },\n  loginButton: {\n  }\n}));\n\nconst personalSignUp = () => {\n  const classes = useStyles();\n  const [data, setData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    countryCode: '',\n    phoneNumber: '',\n    country: '',\n    city: '',\n    password: '',\n    confirmPassword: '',\n    roleString: 'personal'\n  });\n\n  const handleChange = e => {\n    setData({\n      ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const submitSignup = async () => {\n    try {\n      const user = await register(data)\n      router.push('/login')\n    } catch (e) {\n      switch (e.status) {\n        case 422:\n          Swal.fire('Error', 'Email already exists', 'error')\n          break\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <FormControl className={classes.textField}>\n            <TextField\n              name=\"firstName\"\n              label={'First Name'}\n              required\n              onChange={handleChange}\n              value={data.firstName}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <FormControl className={classes.textField}>\n            <TextField\n              name=\"lastName\"\n              label={'Last Name'}\n              required\n              onChange={handleChange}\n              value={data.lastName}\n            />\n          </FormControl>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.fieldsGrid}>\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <FormControl className={classes.textField}>\n            <TextField\n              name=\"email\"\n              label={'Email'}\n              type={'email'}\n              required\n              onChange={handleChange}\n              value={data.email}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <Grid container spacing={1}>\n            <Grid item xs={4}>\n              <Autocomplete\n                options={countries}\n                getOptionLabel={option => `+${option.phone}`}\n                renderOption={option => (\n                  <React.Fragment>\n                    <span>{countryToFlag(option.code)}</span>\n                    <span style={{ fontSize: '10px' }}>+{option.phone}</span>\n                  </React.Fragment>\n                )}\n                renderInput={params => (\n                  <TextField {...params} name={'countryCode'} label=\"Country Code\" />\n                )}\n              />\n            </Grid>\n            <Grid item xs={8}>\n              <FormControl className={classes.textField}>\n                <TextField\n                  name=\"phoneNumber\"\n                  label={'Phone Number'}\n                  onChange={handleChange}\n                  value={data.phoneNumber}\n                />\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.fieldsGrid}>\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <FormControl className={classes.textField}>\n            <Autocomplete\n              options={countries}\n              getOptionLabel={option => option.label}\n              renderInput={params => (\n                <TextField {...params} name={'country'} label=\"Country\" fullWidth required />\n              )}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <FormControl className={classes.textField}>\n            <TextField\n              name=\"city\"\n              label={'City'}\n              required\n              onChange={handleChange}\n              value={data.city}\n            />\n          </FormControl>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.fieldsGrid}>\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <FormControl className={classes.textField}>\n            <TextField\n              name=\"password\"\n              label={'Password'}\n              required\n              onChange={handleChange}\n              value={data.password}\n              type={'password'}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <FormControl className={classes.textField}>\n            <TextField\n              name=\"confirmPassword\"\n              label={'Confirm Password'}\n              required\n              onChange={handleChange}\n              value={data.confirmPassword}\n              type={'password'}\n            />\n          </FormControl>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12} className={classes.signupButtonHolder}>\n        <Button className={classes.signupButton} onClick={submitSignup}>Signup</Button>\n      </Grid>\n    </div>\n  )\n}\n\nexport default personalSignUp"]},"metadata":{},"sourceType":"module"}