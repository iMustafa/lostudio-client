{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions';\nimport { v4 as uuidv4 } from 'uuid';\nconst useStyles = makeStyles(theme => ({}));\n\nconst SelectWidget = ({\n  widgetId\n}) => {\n  const classes = useStyles();\n  const labelId = uuidv4();\n  const {\n    0: widget,\n    1: setWidget\n  } = useState({\n    config: {},\n    properties: {}\n  });\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: menuState,\n    1: setMenuState\n  } = useState({\n    right: false\n  });\n  const {\n    0: value,\n    1: setValue\n  } = useState();\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId);\n        const $data = await WidgetSettingsActions.executeWidgetQuery(widgetId);\n        setWidget($widget);\n        setData($data);\n        return $widget;\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getData();\n  }, []);\n  return __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl\n  }, __jsx(InputLabel, {\n    id: labelId\n  }, widget.properties.label), __jsx(Select, {\n    fullWidth: true,\n    labelId: labelId,\n    id: widget.properties.id,\n    name: widget.properties.name,\n    value: value,\n    onChange: handleChange,\n    className: widget.properties.className\n  }, data.map(option => __jsx(MenuItem, {\n    value: option[widget.config.fields[0]]\n  }, option[widget.config.fields[0]]))));\n};\n\nexport default SelectWidget;","map":null,"metadata":{},"sourceType":"module"}