{"ast":null,"code":"import grapesjs from \"grapesjs\";\nimport loadComponents from \"./components\";\nimport loadBlocks from \"./blocks\";\nimport loadCommands from \"./commands\";\nimport loadPanels from \"./panels\";\nimport parserHtmlCaseSensitive from \"./ParserHtmlCaseSensitive\";\nimport { TablePluginRef } from \"./consts\";\nexport default function addTablePlugin(id) {\n  grapesjs.plugins.add(TablePluginRef, function (editor) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    editor.TraitManager.addType(\"pre\", {\n      noLabel: true,\n      getInputEl: function getInputEl() {\n        var model = this.model;\n\n        var _model$props = model.props(),\n            text = _model$props.text;\n\n        var label = text;\n        var input = \"<div type=\\\"text\\\" style=\\\"font-size: 1rem; line-height:30px; margin:10px; word-wrap: break-word; width: 180px;\\\">\".concat(label, \"</div>\");\n        return input;\n      }\n    });\n    var c = opts;\n    var defaults = {\n      blocks: [TablePluginRef],\n      blockLabel: \"Table\",\n      blockCategory: \"Extra\",\n      defaultStyle: true,\n      id: id\n    };\n\n    for (var name in defaults) {\n      if (!(name in c)) c[name] = defaults[name];\n    }\n\n    loadComponents(editor, c);\n    loadBlocks(editor, c);\n    loadCommands(editor, c);\n    loadPanels(editor, c);\n    var em = editor.getModel();\n    var emConf = em.get(\"Config\");\n    emConf.textTags = [\"br\", \"b\", \"i\", \"u\", \"a\", \"ul\", \"ol\"];\n    em.get(\"Parser\").parserHtml = parserHtmlCaseSensitive(emConf);\n\n    em.get(\"Parser\").parseHtml = function (str) {\n      var pHtml = em.get(\"Parser\").parserHtml;\n      pHtml.compTypes = em.get(\"DomComponents\").getTypes();\n      var res = pHtml.parse(str, em.get(\"Parser\").parserCss);\n      return res;\n    };\n\n    editor.on(\"load\", function () {\n      var openBl = editor.Panels.getButton(\"views\", \"open-blocks\");\n      openBl && openBl.set(\"active\", 1);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/grapes/table-widgets/html-table-widget/index.js"],"names":["grapesjs","loadComponents","loadBlocks","loadCommands","loadPanels","parserHtmlCaseSensitive","TablePluginRef","addTablePlugin","id","plugins","add","editor","opts","TraitManager","addType","noLabel","getInputEl","model","props","text","label","input","c","defaults","blocks","blockLabel","blockCategory","defaultStyle","name","em","getModel","emConf","get","textTags","parserHtml","parseHtml","str","pHtml","compTypes","getTypes","res","parse","parserCss","on","openBl","Panels","getButton","set"],"mappings":"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","sourcesContent":["import grapesjs from \"grapesjs\";\nimport loadComponents from \"./components\";\nimport loadBlocks from \"./blocks\";\nimport loadCommands from \"./commands\";\nimport loadPanels from \"./panels\";\nimport parserHtmlCaseSensitive from \"./ParserHtmlCaseSensitive\";\n\nimport { TablePluginRef } from \"./consts\";\n\nexport default function addTablePlugin(id) {\n  grapesjs.plugins.add(TablePluginRef, (editor, opts = {}) => {\n    editor.TraitManager.addType(\"pre\", {\n      noLabel: true,\n\n      getInputEl() {\n        const { model } = this;\n        const { text } = model.props();\n        const label = text;\n        const input = `<div type=\"text\" style=\"font-size: 1rem; line-height:30px; margin:10px; word-wrap: break-word; width: 180px;\">${label}</div>`;\n        return input;\n      },\n    });\n\n    let c = opts;\n\n    let defaults = {\n      blocks: [TablePluginRef],\n      blockLabel: \"Table\",\n      blockCategory: \"Extra\",\n      defaultStyle: true,\n      id\n    };\n\n    for (let name in defaults) {\n      if (!(name in c)) c[name] = defaults[name];\n    }\n\n    loadComponents(editor, c);\n    loadBlocks(editor, c);\n    loadCommands(editor, c);\n    loadPanels(editor, c);\n\n    const em = editor.getModel();\n    const emConf = em.get(\"Config\");\n    emConf.textTags = [\"br\", \"b\", \"i\", \"u\", \"a\", \"ul\", \"ol\"];\n    em.get(\"Parser\").parserHtml = parserHtmlCaseSensitive(emConf);\n    em.get(\"Parser\").parseHtml = (str) => {\n      const pHtml = em.get(\"Parser\").parserHtml;\n      pHtml.compTypes = em.get(\"DomComponents\").getTypes();\n      let res = pHtml.parse(str, em.get(\"Parser\").parserCss);\n      return res;\n    };\n\n    editor.on(\"load\", () => {\n      const openBl = editor.Panels.getButton(\"views\", \"open-blocks\");\n      openBl && openBl.set(\"active\", 1);\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}