{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/dashboards/widgets-menu.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SystemWidgets from './system-widgets';\nimport MyWidgets from './my-widgets';\n\nvar TabPanel = function TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"full-width-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"full-width-tab-\".concat(index)\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), value === index && __jsx(Box, {\n    p: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, children));\n};\n\nvar a11yProps = function a11yProps(index) {\n  return {\n    id: \"full-width-tab-\".concat(index),\n    'aria-controls': \"full-width-tabpanel-\".concat(index)\n  };\n};\n\nvar useStyles = makeStyles(function () {\n  return {};\n});\n\nvar WidgetSidemenu = function WidgetSidemenu(_ref) {\n  var onWidgetClick = _ref.onWidgetClick,\n      widgetSettings = _ref.widgetSettings,\n      addPredefinedWidget = _ref.addPredefinedWidget;\n  var classes = useStyles();\n\n  var _useState = useState(0),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    \"aria-label\": \"full width tabs example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Tab, _extends({\n    label: \"System Widgets\"\n  }, a11yProps(0), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), __jsx(Tab, _extends({\n    label: \"My Widgets\"\n  }, a11yProps(1), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    index: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(TabPanel, {\n    value: value,\n    index: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(SystemWidgets, {\n    onWidgetClick: onWidgetClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), __jsx(TabPanel, {\n    value: value,\n    index: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(MyWidgets, {\n    addPredefinedWidget: addPredefinedWidget,\n    widgetSettings: widgetSettings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))));\n};\n\nexport default WidgetSidemenu;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/dashboards/widgets-menu.jsx"],"names":["useState","useEffect","makeStyles","AppBar","Tabs","Tab","Typography","Box","SystemWidgets","MyWidgets","TabPanel","props","children","value","index","other","a11yProps","id","useStyles","WidgetSidemenu","onWidgetClick","widgetSettings","addPredefinedWidget","classes","setValue","handleChange","event","newValue"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport SystemWidgets from './system-widgets'\nimport MyWidgets from './my-widgets'\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  )\n}\n\nconst a11yProps = (index) => {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`\n  }\n}\n\nconst useStyles = makeStyles(() => ({\n\n}))\n\nconst WidgetSidemenu = ({ onWidgetClick, widgetSettings, addPredefinedWidget }) => {\n  const classes = useStyles()\n  const [value, setValue] = useState(0)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  return (\n    <div>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"System Widgets\" {...a11yProps(0)} />\n          <Tab label=\"My Widgets\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <div\n        index={value}\n      >\n        <TabPanel value={value} index={0}>\n          <SystemWidgets onWidgetClick={onWidgetClick} />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <MyWidgets addPredefinedWidget={addPredefinedWidget} widgetSettings={widgetSettings} />\n        </TabPanel>\n      </div>\n    </div>\n  )\n}\n\nexport default WidgetSidemenu"]},"metadata":{},"sourceType":"module"}