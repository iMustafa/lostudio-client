{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/pages/webpages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport Cookies from \"next-cookies\";\nimport DashboardActions from \"../../actions/dashboard.actions\";\nimport Grid from '@material-ui/core/Grid';\nimport ListDashboards from '../../components/dashboards/list-dashboards';\n\nconst WebPages = ({\n  WebPages\n}) => {\n  const $WebPages = Object.values(WebPages);\n  const {\n    0: refresh,\n    1: setRefresh\n  } = useState(0);\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    style: {\n      margin: \"25px auto 25px auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(ListDashboards, {\n    dashboards: $WebPages,\n    dashboardType: \"webpages\",\n    title: \"My Webpages\",\n    type: \"personal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }))));\n};\n\nWebPages.getInitialProps = async req => {\n  try {\n    const Authorization = Cookies(req).id;\n    const WebPages = await DashboardActions.getWebpages({\n      Authorization\n    });\n    return {\n      WebPages\n    };\n  } catch (e) {\n    return {\n      WebPages: []\n    };\n  }\n};\n\nexport default WebPages;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/pages/webpages/index.tsx"],"names":["useState","Cookies","DashboardActions","Grid","ListDashboards","WebPages","$WebPages","Object","values","refresh","setRefresh","margin","getInitialProps","req","Authorization","id","getWebpages","e"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAGA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,6CAA3B;;AAEA,MAAMC,QAAgC,GAAG,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAkB;AACzD,QAAMC,SAA2B,GAAGC,MAAM,CAACC,MAAP,CAAcH,QAAd,CAApC;AACA,QAAM;AAAA,OAACI,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,CAAD,CAAtC;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAEW,MAAAA,MAAM,EAAE;AAAV,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AACE,IAAA,UAAU,EAAEL,SADd;AAEE,IAAA,aAAa,EAAC,UAFhB;AAGE,IAAA,KAAK,EAAC,aAHR;AAIE,IAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAcD,CAlBD;;AAoBAD,QAAQ,CAACO,eAAT,GAA2B,MACzBC,GADyB,IAEmB;AAC5C,MAAI;AACF,UAAMC,aAAa,GAAGb,OAAO,CAACY,GAAD,CAAP,CAAaE,EAAnC;AACA,UAAMV,QAAQ,GAAG,MAAMH,gBAAgB,CAACc,WAAjB,CAA6B;AAAEF,MAAAA;AAAF,KAA7B,CAAvB;AACA,WAAO;AAAET,MAAAA;AAAF,KAAP;AACD,GAJD,CAIE,OAAOY,CAAP,EAAU;AACV,WAAO;AAAEZ,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;AACF,CAVD;;AAYA,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\nimport { NextPage } from \"next\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Cookies from \"next-cookies\";\nimport DashboardActions from \"../../actions/dashboard.actions\";\nimport Dashboard from \"../../types/dashboard.types\";\nimport Grid from '@material-ui/core/Grid'\nimport ListDashboards from '../../components/dashboards/list-dashboards'\n\nconst WebPages: NextPage<{ WebPages }> = ({ WebPages }) => {\n  const $WebPages: Array<Dashboard> = Object.values(WebPages);\n  const [refresh, setRefresh] = useState(0);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <div className=\"container\" style={{ margin: \"25px auto 25px auto\" }}>\n          <ListDashboards\n            dashboards={$WebPages}\n            dashboardType=\"webpages\"\n            title=\"My Webpages\"\n            type=\"personal\"\n          ></ListDashboards>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nWebPages.getInitialProps = async (\n  req\n): Promise<{ WebPages: Array<Dashboard> }> => {\n  try {\n    const Authorization = Cookies(req).id;\n    const WebPages = await DashboardActions.getWebpages({ Authorization });\n    return { WebPages };\n  } catch (e) {\n    return { WebPages: [] };\n  }\n};\n\nexport default WebPages;\n"]},"metadata":{},"sourceType":"module"}