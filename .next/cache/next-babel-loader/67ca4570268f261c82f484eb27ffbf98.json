{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\widgets\\\\gantt-chart\\\\index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport Gantt from './gantt-chart-widget';\nimport Toolbar from './gantt-chart-widget-toolbar';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\n\nvar GanttChartWidget = function GanttChartWidget() {\n  var _useState = useState({}),\n      widget = _useState[0],\n      setWidget = _useState[1];\n\n  var _useState2 = useState({}),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState('Days'),\n      zoom = _useState3[0],\n      setZoom = _useState3[1];\n\n  var handleZoomChange = function handleZoomChange(zoom) {\n    setZoom(zoom);\n  };\n\n  useEffect(function () {\n    var getData = function getData() {\n      var Widget, Result;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(WidgetSettingsActions.getWidgetSettingsById(\"5e78a808f2c42d5a58cc2cdc\"));\n\n            case 3:\n              Widget = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(WidgetSettingsActions.executeWidgetQuery(\"5e78a808f2c42d5a58cc2cdc\"));\n\n            case 6:\n              Result = _context.sent;\n              console.log({\n                data: Result[0].data,\n                links: Result[0].links\n              });\n              setData(_JSON$stringify({\n                data: Result[0].data,\n                links: Result[0].links\n              }));\n              setWidget(_objectSpread({}, Widget));\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 12]]);\n    };\n\n    getData();\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"zoom-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    zoom: zoom,\n    onZoomChange: handleZoomChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"gantt-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Gantt, {\n    tasks: data[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })));\n};\n\nexport default GanttChartWidget;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/widgets/gantt-chart/index.jsx"],"names":["useState","useEffect","Gantt","Toolbar","WidgetSettingsActions","GanttChartWidget","widget","setWidget","data","setData","zoom","setZoom","handleZoomChange","getData","getWidgetSettingsById","Widget","executeWidgetQuery","Result","console","log","links"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,kBACDL,QAAQ,CAAC,EAAD,CADP;AAAA,MACtBM,MADsB;AAAA,MACdC,SADc;;AAAA,mBAELP,QAAQ,CAAC,EAAD,CAFH;AAAA,MAEtBQ,IAFsB;AAAA,MAEhBC,OAFgB;;AAAA,mBAGLT,QAAQ,CAAC,MAAD,CAHH;AAAA,MAGtBU,IAHsB;AAAA,MAGhBC,OAHgB;;AAK7B,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,IAAD,EAAU;AACjCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAFD;;AAIAT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMY,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEST,qBAAqB,CAACU,qBAAtB,CAA4C,0BAA5C,CAFT;;AAAA;AAENC,cAAAA,MAFM;AAAA;AAAA,+CAGSX,qBAAqB,CAACY,kBAAtB,CAAyC,0BAAzC,CAHT;;AAAA;AAGNC,cAAAA,MAHM;AAIZC,cAAAA,OAAO,CAACC,GAAR,CAAY;AAAEX,gBAAAA,IAAI,EAAES,MAAM,CAAC,CAAD,CAAN,CAAUT,IAAlB;AAAwBY,gBAAAA,KAAK,EAAEH,MAAM,CAAC,CAAD,CAAN,CAAUG;AAAzC,eAAZ;AACAX,cAAAA,OAAO,CAAC,gBAAe;AAAED,gBAAAA,IAAI,EAAES,MAAM,CAAC,CAAD,CAAN,CAAUT,IAAlB;AAAwBY,gBAAAA,KAAK,EAAEH,MAAM,CAAC,CAAD,CAAN,CAAUG;AAAzC,eAAf,CAAD,CAAP;AACAb,cAAAA,SAAS,mBAAMQ,MAAN,EAAT;AANY;AAAA;;AAAA;AAAA;AAAA;AAQZG,cAAAA,OAAO,CAACC,GAAR;;AARY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAWAN,IAAAA,OAAO;AACR,GAbQ,CAAT;AAeA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,YAAY,EAAEE,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAOE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,IAAI,CAAC,CAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF;AAaD,CArCD;;AAuCA,eAAeH,gBAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Gantt from './gantt-chart-widget'\r\nimport Toolbar from './gantt-chart-widget-toolbar'\r\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\r\n\r\nconst GanttChartWidget = () => {\r\n  const [widget, setWidget] = useState({})\r\n  const [data, setData] = useState({})\r\n  const [zoom, setZoom] = useState('Days')\r\n\r\n  const handleZoomChange = (zoom) => {\r\n    setZoom(zoom)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const Widget = await WidgetSettingsActions.getWidgetSettingsById(\"5e78a808f2c42d5a58cc2cdc\")\r\n        const Result = await WidgetSettingsActions.executeWidgetQuery(\"5e78a808f2c42d5a58cc2cdc\")\r\n        console.log({ data: Result[0].data, links: Result[0].links })\r\n        setData(JSON.stringify({ data: Result[0].data, links: Result[0].links }))\r\n        setWidget({ ...Widget })\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"zoom-bar\">\r\n        <Toolbar\r\n          zoom={zoom}\r\n          onZoomChange={handleZoomChange}\r\n        />\r\n      </div>\r\n      <div className=\"gantt-container\">\r\n        <Gantt tasks={data[0]} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GanttChartWidget"]},"metadata":{},"sourceType":"module"}