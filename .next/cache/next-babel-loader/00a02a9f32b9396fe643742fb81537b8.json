{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\widgets\\\\line-chart-widget.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, ArgumentAxis, ValueAxis, BarSeries, LineSeries, Legend } from '@devexpress/dx-react-chart-material-ui';\nimport { ValueScale } from '@devexpress/dx-react-chart';\n\nconst LineChartWidget = () => {\n  const {\n    0: data,\n    1: setData\n  } = useState([{\n    month: 'Jan',\n    total: 987\n  }, {\n    month: 'Feb',\n    total: 3000\n  }, {\n    month: 'March',\n    total: 1100\n  }, {\n    month: 'April',\n    total: 7100\n  }, {\n    month: 'May',\n    total: 4300\n  }, {\n    month: 'June',\n    total: 7500\n  }]);\n  return __jsx(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(Chart, {\n    data: chartData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(ValueScale, {\n    name: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), __jsx(ArgumentAxis, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(ValueAxis, {\n    scaleName: \"total\",\n    position: \"left\",\n    showGrid: true,\n    showLine: true,\n    showTicks: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(LineSeries, {\n    name: \"Total Transactions\",\n    valueField: \"total\",\n    argumentField: \"month\",\n    scaleName: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })));\n};\n\nexport default LineChartWidget;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/widgets/line-chart-widget.jsx"],"names":["useState","useEffect","Paper","Chart","ArgumentAxis","ValueAxis","BarSeries","LineSeries","Legend","ValueScale","LineChartWidget","data","setData","month","total","chartData"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SACEC,KADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,UALF,EAMEC,MANF,QAOO,wCAPP;AAQA,SAASC,UAAT,QAA2B,4BAA3B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAAC,CAC/B;AAAEa,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAD+B,EAE/B;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAF+B,EAG/B;AAAED,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAH+B,EAI/B;AAAED,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAJ+B,EAK/B;AAAED,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAL+B,EAM/B;AAAED,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAN+B,CAAD,CAAhC;AASA,SACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAEC,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAKE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,OAArB;AAA6B,IAAA,QAAQ,EAAC,MAAtC;AAA6C,IAAA,QAAQ,EAAE,IAAvD;AAA6D,IAAA,QAAQ,MAArE;AAAsE,IAAA,SAAS,MAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAQE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,oBADP;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,aAAa,EAAC,OAHhB;AAIE,IAAA,SAAS,EAAC,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAeE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF,CADF;AAqBD,CA/BD;;AAiCA,eAAeL,eAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  Chart,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  BarSeries,\r\n  LineSeries,\r\n  Legend,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { ValueScale } from '@devexpress/dx-react-chart';\r\n\r\nconst LineChartWidget = () => {\r\n  const [data, setData] = useState([\r\n    { month: 'Jan', total: 987 },\r\n    { month: 'Feb', total: 3000 },\r\n    { month: 'March', total: 1100 },\r\n    { month: 'April', total: 7100 },\r\n    { month: 'May', total: 4300 },\r\n    { month: 'June', total: 7500 },\r\n  ])\r\n\r\n  return (\r\n    <Paper>\r\n      <Chart\r\n        data={chartData}\r\n      >\r\n        <ValueScale name=\"total\" />\r\n\r\n        <ArgumentAxis />\r\n        <ValueAxis scaleName=\"total\" position=\"left\" showGrid={true} showLine showTicks />\r\n\r\n        <LineSeries\r\n          name=\"Total Transactions\"\r\n          valueField=\"total\"\r\n          argumentField=\"month\"\r\n          scaleName=\"total\"\r\n        />\r\n\r\n        <Legend />\r\n      </Chart>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default LineChartWidget"]},"metadata":{},"sourceType":"module"}