{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-measure-conditions.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nimport { conditionCases } from '../../../helpers/measure-conditions';\nconst useStyles = makeStyles({\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  measureConditionFieldTitle: {\n    fontSize: 12,\n    fontWeight: 'bold'\n  }\n});\n\nconst TableMeasureConditions = ({\n  widget,\n  handleSettingsClose,\n  isAdding,\n  onWidgetAdd\n}) => {\n  const classes = useStyles();\n  const {\n    0: measureConditionsFields,\n    1: updateMeasureConditionsFields\n  } = useState({\n    expression: null,\n    minValue: null,\n    maxValue: null,\n    field: null\n  });\n  const {\n    0: fields,\n    1: setFields\n  } = useState(widget.config.fields);\n  const {\n    0: measureConditions,\n    1: setMeasureConditions\n  } = useState([]);\n  const widgetId = widget.id;\n  useEffect(() => {\n    const getMeasureConditions = async () => {\n      try {\n        const $measureConditions = await WidgetSettingsActions.getWidgetSettingsMeasureConditions(widgetId);\n        console.log($measureConditions);\n        setMeasureConditions($measureConditions);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getMeasureConditions();\n    console.log(fields);\n  }, []);\n\n  const addMeasureCondition = async () => {\n    try {\n      const measureCondition = await WidgetSettingsActions.createWidgetSettingsMeasureConditions(widgetId, {});\n      console.log(measureCondition);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const removeMeasureCondition = async measureConditionId => {\n    try {\n      const measureCondition = await WidgetSettingsActions.deleteWidgetSettingsMeasureConditions(widgetId, measureConditionId);\n      console.log(measureCondition);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const renderMeasureCondition = measureCondition => __jsx(Card, {\n    style: {\n      padding: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    className: classes.measureConditionFieldTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Field\"), __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, measureCondition.field)), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    className: classes.measureConditionFieldTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Expression\"), __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, measureCondition.expression)), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    className: classes.measureConditionFieldTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Color\"), __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, measureCondition.color))), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(ArrowUpwardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, measureCondition.minValue)), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(ArrowDownwardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, measureCondition.maxValue))));\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Measure Conditions\")), measureConditions.map(measureCondition => renderMeasureCondition(measureCondition)));\n};\n\nexport default TableMeasureConditions;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-measure-conditions.jsx"],"names":["useState","useEffect","makeStyles","Grid","Card","Button","InputLabel","Select","MenuItem","FormControl","FormControlLabel","Typography","ArrowUpwardIcon","ArrowDownwardIcon","WidgetSettingsActions","conditionCases","useStyles","h2","width","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","measureConditionFieldTitle","fontWeight","TableMeasureConditions","widget","handleSettingsClose","isAdding","onWidgetAdd","classes","measureConditionsFields","updateMeasureConditionsFields","expression","minValue","maxValue","field","fields","setFields","config","measureConditions","setMeasureConditions","widgetId","id","getMeasureConditions","$measureConditions","getWidgetSettingsMeasureConditions","console","log","e","addMeasureCondition","measureCondition","createWidgetSettingsMeasureConditions","removeMeasureCondition","measureConditionId","deleteWidgetSettingsMeasureConditions","renderMeasureCondition","map"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport Button from '@material-ui/core/Button'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\nimport { conditionCases } from '../../../helpers/measure-conditions'\n\nconst useStyles = makeStyles({\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  measureConditionFieldTitle: {\n    fontSize: 12,\n    fontWeight: 'bold'\n  }\n})\n\nconst TableMeasureConditions = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\n  const classes = useStyles()\n  const [measureConditionsFields, updateMeasureConditionsFields] = useState({\n    expression: null, minValue: null, maxValue: null, field: null\n  })\n  const [fields, setFields] = useState(widget.config.fields)\n  const [measureConditions, setMeasureConditions] = useState([])\n  const widgetId = widget.id\n\n  useEffect(() => {\n    const getMeasureConditions = async () => {\n      try {\n        const $measureConditions = await WidgetSettingsActions.getWidgetSettingsMeasureConditions(widgetId)\n        console.log($measureConditions)\n        setMeasureConditions($measureConditions)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    getMeasureConditions()\n    console.log(fields)\n  }, [])\n\n  const addMeasureCondition = async () => {\n    try {\n      const measureCondition = await WidgetSettingsActions.createWidgetSettingsMeasureConditions(\n        widgetId,\n        {}\n      )\n      console.log(measureCondition)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const removeMeasureCondition = async (measureConditionId) => {\n    try {\n      const measureCondition = await WidgetSettingsActions.deleteWidgetSettingsMeasureConditions(widgetId, measureConditionId)\n      console.log(measureCondition)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const renderMeasureCondition = (measureCondition) => (\n    <Card style={{ padding: 15 }}>\n      <Grid container spacing={0}>\n        <Grid item xs={4}>\n          <Typography className={classes.measureConditionFieldTitle}>Field</Typography>\n          <Typography>{measureCondition.field}</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography className={classes.measureConditionFieldTitle}>Expression</Typography>\n          <Typography>{measureCondition.expression}</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography className={classes.measureConditionFieldTitle}>Color</Typography>\n          <Typography>{measureCondition.color}</Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={0}>\n        <Grid xs={6}>\n          <ArrowUpwardIcon />\n          <span>{measureCondition.minValue}</span>\n        </Grid>\n        <Grid item xs={6}>\n          <ArrowDownwardIcon />\n          <span>{measureCondition.maxValue}</span>\n        </Grid>\n      </Grid>\n    </Card>\n  )\n\n  return (\n    <div>\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Measure Conditions</span>\n      </h2>\n      {\n        measureConditions.map(measureCondition => renderMeasureCondition(measureCondition))\n      }\n    </div>\n  )\n}\n\nexport default TableMeasureConditions"]},"metadata":{},"sourceType":"module"}