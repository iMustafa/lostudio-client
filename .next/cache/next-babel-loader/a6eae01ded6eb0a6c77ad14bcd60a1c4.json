{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-widget.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport Drawer from '@material-ui/core/Drawer';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ShareIcon from '@material-ui/icons/Share';\nimport TableWidgetSettings from './table-widget-settings';\nimport ExportTableData from './export-table-data';\nimport { measureConditionResult } from '../../../helpers/measure-conditions';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    list: {\n      width: 500\n    },\n    widgetActions: {\n      display: 'flex',\n      backgroundColor: \"#3F51B5\",\n      borderTopRightRadius: \"5px\",\n      borderTopLeftRadius: \"5px\"\n    },\n    widgetTitle: {\n      flex: 1,\n      display: 'flex',\n      alignContent: 'center',\n      alignItems: 'center',\n      paddingLeft: \"10px\"\n    },\n    actionButtons: {\n      flex: 1,\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }\n  };\n});\n\nvar TableWidget = function TableWidget(_ref) {\n  var widgetId = _ref.widgetId;\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      widget = _useState[0],\n      setWidget = _useState[1];\n\n  var _useState2 = useState([]),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      isLoadingData = _useState3[0],\n      setIsLoadingData = _useState3[1];\n\n  var _useState4 = useState(0),\n      refresh = _useState4[0],\n      setRefresh = _useState4[1];\n\n  var _useState5 = useState({\n    right: false,\n    \"export\": false\n  }),\n      menuState = _useState5[0],\n      setMenuState = _useState5[1];\n\n  var _useState6 = useState([]),\n      measureConditions = _useState6[0],\n      setMeasureConditions = _useState6[1];\n\n  var _useState7 = useState([]),\n      measureConditionsFields = _useState7[0],\n      setMeasureConditionsFields = _useState7[1];\n\n  useEffect(function () {\n    var getMeasureConditions = function getMeasureConditions() {\n      var $measureConditions;\n      return _regeneratorRuntime.async(function getMeasureConditions$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(WidgetSettingsActions.getWidgetSettingsMeasureConditions(widgetId));\n\n            case 3:\n              $measureConditions = _context.sent;\n              setMeasureConditions($measureConditions);\n              setMeasureConditionsFields($measureConditions.map(function (condition) {\n                return condition.field;\n              }));\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    getMeasureConditions();\n  }, []);\n\n  var getWidgetData = function getWidgetData() {\n    var $data;\n    return _regeneratorRuntime.async(function getWidgetData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.executeWidgetQuery(widgetId));\n\n          case 3:\n            $data = _context2.sent;\n            setData($data);\n            return _context2.abrupt(\"return\", $data);\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var getWidget = function getWidget() {\n    var $widget;\n    return _regeneratorRuntime.async(function getWidget$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.getWidgetSettingsById(widgetId));\n\n          case 3:\n            $widget = _context3.sent;\n            setWidget($widget);\n            return _context3.abrupt(\"return\", $widget);\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  useEffect(function () {\n    getWidget();\n    getWidgetData();\n  }, [refresh]);\n\n  var refreshData = function refreshData() {\n    return _regeneratorRuntime.async(function refreshData$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            setIsLoadingData(true);\n            getWidget();\n            getWidgetData();\n            setIsLoadingData(false);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleSettingsClose = function handleSettingsClose() {\n    setRefresh(refresh + 1);\n    toggleDrawer('right', false);\n  };\n\n  var renderTable = function renderTable() {\n    return isLoadingData || !widget ? __jsx(CircularProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 40\n      }\n    }) : __jsx(MaterialTable, {\n      columns: widget.config.fields.map(function (field) {\n        return {\n          field: field,\n          title: field,\n          render: function render(rowData) {\n            var doesHaveCondition = measureConditionsFields.includes(field);\n\n            if (doesHaveCondition) {\n              var condition = measureConditions.filter(function (c) {\n                return c.field == field;\n              })[0];\n              var isConditionMet = measureConditionResult(condition, rowData[field]);\n              console.log(isConditionMet);\n              return isConditionMet ? __jsx(Typography, {\n                style: {\n                  backgroundColor: condition.color\n                },\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }\n              }, rowData[field]) : __jsx(Typography, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }\n              }, rowData[field]);\n            } else {\n              return __jsx(Typography, {\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 24\n                }\n              }, rowData[field]);\n            }\n          }\n        };\n      }),\n      data: data,\n      title: \"\",\n      editable: {\n        isEditable: function isEditable(rowData) {\n          return true;\n        },\n        isDeletable: function isDeletable(rowData) {\n          return true;\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var toggleDrawer = function toggleDrawer(side, open) {\n    return function (event) {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) return;\n      setMenuState(_objectSpread({}, menuState, _defineProperty({}, side, open)));\n    };\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.widgetActions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.widgetTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    style: {\n      color: \"#FFF\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \"Widget Title\")), __jsx(\"div\", {\n    className: classes.actionButtons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    onClick: toggleDrawer('export', true),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, __jsx(ShareIcon, {\n    style: {\n      color: \"#FFF\"\n    },\n    fontSize: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  })), __jsx(IconButton, {\n    onClick: toggleDrawer('right', true),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, __jsx(SettingsIcon, {\n    style: {\n      color: \"#FFF\"\n    },\n    fontSize: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })), __jsx(IconButton, {\n    onClick: refreshData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, __jsx(RefreshIcon, {\n    style: {\n      color: \"#FFF\"\n    },\n    fontSize: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  })))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, renderTable()), __jsx(Drawer, {\n    anchor: \"right\",\n    open: menuState.right,\n    onClose: toggleDrawer('right', false),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, __jsx(TableWidgetSettings, {\n    widget: widget,\n    handleSettingsClose: handleSettingsClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  })), __jsx(Drawer, {\n    anchor: \"right\",\n    open: menuState[\"export\"],\n    onClose: toggleDrawer('export', false),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, __jsx(ExportTableData, {\n    widget: widget,\n    data: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default TableWidget;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-widget.jsx"],"names":["useState","useEffect","makeStyles","MaterialTable","Drawer","WidgetSettingsActions","Typography","CircularProgress","IconButton","RefreshIcon","SettingsIcon","ShareIcon","TableWidgetSettings","ExportTableData","measureConditionResult","useStyles","theme","list","width","widgetActions","display","backgroundColor","borderTopRightRadius","borderTopLeftRadius","widgetTitle","flex","alignContent","alignItems","paddingLeft","actionButtons","justifyContent","TableWidget","widgetId","classes","widget","setWidget","data","setData","isLoadingData","setIsLoadingData","refresh","setRefresh","right","menuState","setMenuState","measureConditions","setMeasureConditions","measureConditionsFields","setMeasureConditionsFields","getMeasureConditions","getWidgetSettingsMeasureConditions","$measureConditions","map","condition","field","console","log","getWidgetData","executeWidgetQuery","$data","getWidget","getWidgetSettingsById","$widget","refreshData","handleSettingsClose","toggleDrawer","renderTable","config","fields","title","render","rowData","doesHaveCondition","includes","filter","c","isConditionMet","color","isEditable","isDeletable","side","open","event","type","key"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport MaterialTable from 'material-table'\nimport Drawer from '@material-ui/core/Drawer'\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\nimport Typography from '@material-ui/core/Typography'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport IconButton from '@material-ui/core/IconButton'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport ShareIcon from '@material-ui/icons/Share'\nimport TableWidgetSettings from './table-widget-settings'\nimport ExportTableData from './export-table-data'\nimport { measureConditionResult } from '../../../helpers/measure-conditions'\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500\n  },\n  widgetActions: {\n    display: 'flex',\n    backgroundColor: \"#3F51B5\",\n    borderTopRightRadius: \"5px\",\n    borderTopLeftRadius: \"5px\",\n  },\n  widgetTitle: {\n    flex: 1,\n    display: 'flex',\n    alignContent: 'center',\n    alignItems: 'center',\n    paddingLeft: \"10px\"\n  },\n  actionButtons: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'flex-end'\n  }\n}))\n\nconst TableWidget = ({ widgetId }) => {\n  const classes = useStyles()\n  const [widget, setWidget] = useState(null)\n  const [data, setData] = useState([])\n  const [isLoadingData, setIsLoadingData] = useState(false)\n  const [refresh, setRefresh] = useState(0)\n  const [menuState, setMenuState] = useState({ right: false, export: false })\n  const [measureConditions, setMeasureConditions] = useState([])\n  const [measureConditionsFields, setMeasureConditionsFields] = useState([])\n\n  useEffect(() => {\n    const getMeasureConditions = async () => {\n      try {\n        const $measureConditions = await WidgetSettingsActions.getWidgetSettingsMeasureConditions(widgetId)\n        setMeasureConditions($measureConditions)\n        setMeasureConditionsFields($measureConditions.map(condition => condition.field))\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    getMeasureConditions()\n  }, [])\n\n  const getWidgetData = async () => {\n    try {\n      const $data = await WidgetSettingsActions.executeWidgetQuery(widgetId)\n      setData($data)\n      return $data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getWidget = async () => {\n    try {\n      const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\n      setWidget($widget)\n      return $widget\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  useEffect(() => {\n    getWidget()\n    getWidgetData()\n  }, [refresh])\n\n  const refreshData = async () => {\n    setIsLoadingData(true)\n    getWidget()\n    getWidgetData()\n    setIsLoadingData(false)\n  }\n\n  const handleSettingsClose = () => {\n    setRefresh(refresh + 1)\n    toggleDrawer('right', false)\n  }\n\n  const renderTable = () => {\n    return isLoadingData || !widget ? (<CircularProgress />) : (\n      <MaterialTable\n        columns={\n          widget.config.fields.map(field => ({\n            field,\n            title: field,\n            render: rowData => {\n              const doesHaveCondition = measureConditionsFields.includes(field)\n              if (doesHaveCondition) {\n                const condition = measureConditions.filter(c => c.field == field)[0]\n                const isConditionMet = measureConditionResult(condition, rowData[field])\n                console.log(isConditionMet)\n                return isConditionMet ? (\n                  <Typography style={{ backgroundColor: condition.color }}>{rowData[field]}</Typography>\n                ) : <Typography>{rowData[field]}</Typography>\n              } else {\n                return <Typography>{rowData[field]}</Typography>\n              }\n            }\n          }))\n        }\n        data={data}\n        title=\"\"\n        editable={{\n          isEditable: rowData => true,\n          isDeletable: rowData => true\n        }}\n      />\n    )\n  }\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift'))\n      return\n    setMenuState({ ...menuState, [side]: open })\n  }\n\n  return (\n    <div>\n      <div className={classes.widgetActions}>\n        <div className={classes.widgetTitle}>\n          <Typography style={{ color: \"#FFF\" }}>Widget Title</Typography>\n        </div>\n        <div className={classes.actionButtons}>\n          <IconButton onClick={toggleDrawer('export', true)}>\n            <ShareIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\n          </IconButton>\n          <IconButton onClick={toggleDrawer('right', true)}>\n            <SettingsIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\n          </IconButton>\n          <IconButton onClick={refreshData}>\n            <RefreshIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\n          </IconButton>\n        </div>\n      </div>\n      <div>\n        {renderTable()}\n      </div>\n      <Drawer anchor=\"right\" open={menuState.right} onClose={toggleDrawer('right', false)}>\n        <TableWidgetSettings widget={widget} handleSettingsClose={handleSettingsClose} />\n      </Drawer>\n      <Drawer anchor=\"right\" open={menuState.export} onClose={toggleDrawer('export', false)}>\n        <ExportTableData widget={widget} data={data} />\n      </Drawer>\n    </div>\n  )\n}\n\nexport default TableWidget"]},"metadata":{},"sourceType":"module"}