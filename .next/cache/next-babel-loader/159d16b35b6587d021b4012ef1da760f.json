{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport SideMenu from \"./SideMenu\";\nimport NotificationsActions from \"../actions/notifications.actions\";\nimport NotificationsMenu from \"./notifications/NotificationsMenu\";\nimport Cookie from \"js-cookie\";\nimport { useRouter } from \"next/router\";\nimport { deleteCookie } from \"../actions/auth.actions\";\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 200\n    }\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\"\n    }\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  }\n}));\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    left: false\n  });\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const {\n    0: mobileMoreAnchorEl,\n    1: setMobileMoreAnchorEl\n  } = useState(null);\n  const {\n    0: notificationsCount,\n    1: setNotificationsCount\n  } = useState(0);\n  const [notificationsMenuState, setNotificationsMenuState] = React.useState(null);\n\n  const openNotificationsMenu = event => {\n    setNotificationsMenuState(event.currentTarget);\n  };\n\n  const closeNotificationsMenu = () => {\n    setNotificationsMenuState(null);\n  };\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  const {\n    0: isAuthenticated,\n    1: setIsAuthenticated\n  } = useState(!!Cookie.get(\"id\"));\n\n  const logout = () => {\n    deleteCookie();\n    handleMenuClose();\n    location.reload();\n  };\n\n  useEffect(() => {\n    const getNotificationsCount = async () => {\n      try {\n        const $notificationsCount = await NotificationsActions.getMyNotificationsCount({});\n        setNotificationsCount($notificationsCount.count);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getNotificationsCount();\n  }, []);\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState(_objectSpread({}, state, {\n      [side]: open\n    }));\n  };\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n\n  const renderMenu = __jsx(Menu, {\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    id: menuId,\n    keepMounted: true,\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    open: isMenuOpen,\n    onClose: handleMenuClose\n  }, __jsx(MenuItem, {\n    onClick: handleMenuClose\n  }, \"Profile\"), __jsx(MenuItem, {\n    onClick: handleMenuClose\n  }, \"My account\"), __jsx(MenuItem, {\n    onClick: logout\n  }, \"Logout\"));\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n\n  const renderMobileMenu = __jsx(Menu, {\n    anchorEl: mobileMoreAnchorEl,\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    id: mobileMenuId,\n    keepMounted: true,\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    open: isMobileMenuOpen,\n    onClose: handleMobileMenuClose\n  }, __jsx(MenuItem, null, __jsx(IconButton, {\n    \"aria-label\": \"show 4 new mails\",\n    color: \"inherit\"\n  }, __jsx(Badge, {\n    badgeContent: 4,\n    color: \"secondary\"\n  }, __jsx(MailIcon, null))), __jsx(\"p\", null, \"Messages\")), __jsx(MenuItem, null, __jsx(IconButton, {\n    color: \"inherit\"\n  }, notificationsCount ? __jsx(Badge, {\n    badgeContent: notificationsCount,\n    color: \"secondary\"\n  }, __jsx(NotificationsIcon, null)) : null), __jsx(\"p\", null, \"Notifications\")), __jsx(MenuItem, {\n    onClick: handleProfileMenuOpen\n  }, __jsx(IconButton, {\n    \"aria-label\": \"account of current user\",\n    \"aria-controls\": \"primary-search-account-menu\",\n    \"aria-haspopup\": \"true\",\n    color: \"inherit\"\n  }, __jsx(AccountCircle, null)), __jsx(\"p\", null, \"Profile\")));\n\n  return __jsx(\"div\", {\n    className: classes.grow\n  }, __jsx(AppBar, {\n    position: \"static\"\n  }, __jsx(Toolbar, null, __jsx(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    noWrap: true\n  }, \"LoStudio\"), isAuthenticated ? __jsx(\"div\", {\n    className: classes.grow,\n    style: {\n      paddingLeft: 35\n    }\n  }, __jsx(Button, {\n    style: {\n      color: \"#FFF\"\n    },\n    onClick: () => {\n      router.push(\"/dashboards\");\n    }\n  }, \"Dashboards\"), __jsx(Button, {\n    style: {\n      color: \"#FFF\"\n    },\n    onClick: () => {\n      router.push(\"/webpages\");\n    }\n  }, \"Web Pages\"), __jsx(Button, {\n    style: {\n      color: \"#FFF\"\n    },\n    onClick: () => {\n      router.push(\"/datasources\");\n    }\n  }, \"Data Sources\"), __jsx(Button, {\n    style: {\n      color: \"#FFF\"\n    },\n    onClick: () => {\n      router.push(\"/widgets\");\n    }\n  }, \"Widgets\")) : __jsx(\"div\", {\n    className: classes.grow\n  }), __jsx(\"div\", {\n    className: classes.search\n  }, __jsx(\"div\", {\n    className: classes.searchIcon\n  }, __jsx(SearchIcon, null)), __jsx(InputBase, {\n    placeholder: \"Search\\u2026\",\n    classes: {\n      root: classes.inputRoot,\n      input: classes.inputInput\n    },\n    inputProps: {\n      \"aria-label\": \"search\"\n    }\n  })), __jsx(\"div\", {\n    className: classes.sectionDesktop\n  }, __jsx(IconButton, {\n    color: \"inherit\",\n    onClick: openNotificationsMenu\n  }, notificationsCount ? __jsx(Badge, {\n    badgeContent: notificationsCount,\n    color: \"secondary\"\n  }, __jsx(NotificationsIcon, null)) : __jsx(NotificationsIcon, null)), __jsx(NotificationsMenu, {\n    anchorEl: notificationsMenuState,\n    keepMounted: true,\n    style: {\n      top: 50\n    },\n    open: Boolean(notificationsMenuState),\n    onClose: closeNotificationsMenu\n  }), __jsx(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"account of current user\",\n    \"aria-controls\": menuId,\n    \"aria-haspopup\": \"true\",\n    onClick: handleProfileMenuOpen,\n    color: \"inherit\"\n  }, __jsx(AccountCircle, null))), __jsx(\"div\", {\n    className: classes.sectionMobile\n  }, __jsx(IconButton, {\n    \"aria-label\": \"show more\",\n    \"aria-controls\": mobileMenuId,\n    \"aria-haspopup\": \"true\",\n    onClick: handleMobileMenuOpen,\n    color: \"inherit\"\n  }, __jsx(MoreIcon, null)))), __jsx(Drawer, {\n    open: state.left,\n    onClose: toggleDrawer(\"left\", false)\n  }, SideMenu())), renderMobileMenu, renderMenu);\n}","map":null,"metadata":{},"sourceType":"module"}