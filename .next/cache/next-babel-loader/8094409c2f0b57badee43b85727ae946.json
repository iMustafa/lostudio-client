{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport LockIcon from '@material-ui/icons/Lock';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport { useRouter } from 'next/router';\nimport PrivacySettings from './privacy-settings';\nimport GeneralSettings from './general-settings';\nimport SubBoardsSettings from './sub-boards-settings';\n\nvar TabPanel = function TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"full-width-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"full-width-tab-\".concat(index)\n  }, other), value === index && __jsx(Box, {\n    p: 3\n  }, children));\n};\n\nvar a11yProps = function a11yProps(index) {\n  return {\n    id: \"full-width-tab-\".concat(index),\n    'aria-controls': \"full-width-tabpanel-\".concat(index)\n  };\n};\n\nvar useStyles = makeStyles(function () {\n  return {\n    root: {\n      width: 500\n    }\n  };\n});\n\nvar DashboardSettings = function DashboardSettings(_ref) {\n  var id = _ref.id,\n      refresh = _ref.refresh,\n      setRefresh = _ref.setRefresh;\n  var classes = useStyles();\n  var router = useRouter();\n\n  var _useState = useState(0),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\"\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    \"aria-label\": \"full width tabs example\"\n  }, __jsx(Tab, _extends({\n    label: \"General Settings\",\n    icon: __jsx(SettingsIcon, null)\n  }, a11yProps(0))), __jsx(Tab, _extends({\n    label: \"Privacy Settings\",\n    icon: __jsx(LockIcon, null)\n  }, a11yProps(1))), id == router.query.id && __jsx(Tab, _extends({\n    label: \"Pages Settings\",\n    icon: __jsx(DashboardIcon, null)\n  }, a11yProps(2))))), __jsx(\"div\", {\n    index: value\n  }, __jsx(TabPanel, {\n    value: value,\n    index: 0\n  }, __jsx(GeneralSettings, {\n    id: id,\n    refresh: refresh,\n    setRefresh: setRefresh\n  })), __jsx(TabPanel, {\n    value: value,\n    index: 1\n  }, __jsx(PrivacySettings, {\n    id: id\n  })), id == router.query.id && __jsx(TabPanel, {\n    value: value,\n    index: 2\n  }, __jsx(SubBoardsSettings, {\n    id: id,\n    refresh: refresh,\n    setRefresh: setRefresh\n  }))));\n};\n\nexport default DashboardSettings;","map":null,"metadata":{},"sourceType":"module"}