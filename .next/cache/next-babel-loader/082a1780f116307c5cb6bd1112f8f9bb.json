{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Cookies from 'next-cookies';\nimport DatasourceActions from '../../actions/datasource.actions';\nimport AddDataSource from '../../components/datasources/AddDatasource';\nimport ListDatasource from '../../components/datasources/ListDatasources';\nimport Grid from '@material-ui/core/Grid';\nvar useStyles = makeStyles(function (theme) {\n  return {};\n});\n\nvar Datasources = function Datasources(_Datasources) {\n  var classes = useStyles();\n\n  var renderDatasource = function renderDatasource() {\n    return Object.values(_Datasources).map(function (datasource) {});\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(\"div\", {\n    className: 'container',\n    style: {\n      margin: \"25px auto 0 auto\"\n    }\n  }, __jsx(AddDataSource, null), __jsx(ListDatasource, {\n    datasources: _Datasources\n  }))));\n};\n\nDatasources.getInitialProps = function _callee(req) {\n  var Authorization, _Datasources2;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          Authorization = Cookies(req).id;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(DatasourceActions.getDatasources({\n            Authorization: Authorization\n          }));\n\n        case 4:\n          _Datasources2 = _context.sent;\n          return _context.abrupt(\"return\", _Datasources2);\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", []);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nexport default Datasources;","map":null,"metadata":{},"sourceType":"module"}