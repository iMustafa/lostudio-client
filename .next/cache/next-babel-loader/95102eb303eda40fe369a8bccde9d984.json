{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/form-controls/form-group/form-group-widget.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions';\nimport { decideWidget } from '../../../../helpers/decide-widgets';\nimport Swal from 'sweetalert2';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    list: {\n      width: 500,\n      paddingLeft: \"15px\",\n      paddingRight: \"15px\",\n      paddingTop: \"15px\"\n    },\n    h2: {\n      width: '100%',\n      textAlign: 'center',\n      borderBottom: '1px solid #000',\n      lineHeight: '0.1em',\n      marginTop: \"20px\",\n      marginBottom: \"20px\",\n      fontFamily: 'Roboto',\n      fontSize: '13px',\n      color: \"#3F51B5\"\n    },\n    span: {\n      background: '#fff',\n      padding: '0 10px'\n    },\n    formControl: {\n      marginTop: \"15px\"\n    }\n  };\n});\n\nvar FormGroupWidget = function FormGroupWidget(_ref) {\n  var widgetId = _ref.widgetId;\n  var classes = useStyles();\n\n  var _useState = useState({\n    properties: {}\n  }),\n      widget = _useState[0],\n      setWidget = _useState[1];\n\n  var _useState2 = useState([]),\n      subWidgets = _useState2[0],\n      setSubWidgets = _useState2[1];\n\n  var _useState3 = useState({\n    right: false\n  }),\n      menuState = _useState3[0],\n      setMenuState = _useState3[1];\n\n  useEffect(function () {\n    var getData = function getData() {\n      var $widget, $subWidgets;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(WidgetSettingsActions.getWidgetSettingsById(widgetId));\n\n            case 3:\n              $widget = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(WidgetSettingsActions.getSubWidgets(widgetId));\n\n            case 6:\n              $subWidgets = _context.sent;\n              setWidget($widget);\n              setSubWidgets($subWidgets);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    };\n\n    getData();\n  }, []);\n  return __jsx(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, subWidgets.map(function (subWidget) {\n    return __jsx(\"div\", {\n      key: subWidget.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, decideWidget(subWidget.subWidgetSettings));\n  }));\n};\n\nexport default FormGroupWidget;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/form-controls/form-group/form-group-widget.jsx"],"names":["useState","useEffect","makeStyles","FormGroup","WidgetSettingsActions","decideWidget","Swal","useStyles","theme","list","width","paddingLeft","paddingRight","paddingTop","h2","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","formControl","FormGroupWidget","widgetId","classes","properties","widget","setWidget","subWidgets","setSubWidgets","right","menuState","setMenuState","getData","getWidgetSettingsById","$widget","getSubWidgets","$subWidgets","console","log","map","subWidget","id","subWidgetSettings"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,qBAAP,MAAkC,4CAAlC;AACA,SAASC,YAAT,QAA6B,oCAA7B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,IAAMC,SAAS,GAAGL,UAAU,CAAC,UAAAM,KAAK;AAAA,SAAK;AACrCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,GADH;AAEJC,MAAAA,WAAW,EAAE,MAFT;AAGJC,MAAAA,YAAY,EAAE,MAHV;AAIJC,MAAAA,UAAU,EAAE;AAJR,KAD+B;AAOrCC,IAAAA,EAAE,EAAE;AACFJ,MAAAA,KAAK,EAAE,MADL;AAEFK,MAAAA,SAAS,EAAE,QAFT;AAGFC,MAAAA,YAAY,EAAE,gBAHZ;AAIFC,MAAAA,UAAU,EAAE,OAJV;AAKFC,MAAAA,SAAS,EAAE,MALT;AAMFC,MAAAA,YAAY,EAAE,MANZ;AAOFC,MAAAA,UAAU,EAAE,QAPV;AAQFC,MAAAA,QAAQ,EAAE,MARR;AASFC,MAAAA,KAAK,EAAE;AATL,KAPiC;AAkBrCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,UAAU,EAAE,MADR;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAlB+B;AAsBrCC,IAAAA,WAAW,EAAE;AACXR,MAAAA,SAAS,EAAE;AADA;AAtBwB,GAAL;AAAA,CAAN,CAA5B;;AA2BA,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACxC,MAAMC,OAAO,GAAGtB,SAAS,EAAzB;;AADwC,kBAEZP,QAAQ,CAAC;AAAE8B,IAAAA,UAAU,EAAE;AAAd,GAAD,CAFI;AAAA,MAEjCC,MAFiC;AAAA,MAEzBC,SAFyB;;AAAA,mBAGJhC,QAAQ,CAAC,EAAD,CAHJ;AAAA,MAGjCiC,UAHiC;AAAA,MAGrBC,aAHqB;;AAAA,mBAINlC,QAAQ,CAAC;AAAEmC,IAAAA,KAAK,EAAE;AAAT,GAAD,CAJF;AAAA,MAIjCC,SAJiC;AAAA,MAItBC,YAJsB;;AAMxCpC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMqC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEUlC,qBAAqB,CAACmC,qBAAtB,CAA4CX,QAA5C,CAFV;;AAAA;AAENY,cAAAA,OAFM;AAAA;AAAA,+CAGcpC,qBAAqB,CAACqC,aAAtB,CAAoCb,QAApC,CAHd;;AAAA;AAGNc,cAAAA,WAHM;AAIZV,cAAAA,SAAS,CAACQ,OAAD,CAAT;AACAN,cAAAA,aAAa,CAACQ,WAAD,CAAb;AALY;AAAA;;AAAA;AAAA;AAAA;AAOZC,cAAAA,OAAO,CAACC,GAAR;;AAPY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAUAN,IAAAA,OAAO;AACR,GAZQ,EAYN,EAZM,CAAT;AAcA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIL,UAAU,CAACY,GAAX,CAAe,UAAAC,SAAS;AAAA,WACtB;AAAK,MAAA,GAAG,EAAEA,SAAS,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG1C,YAAY,CAACyC,SAAS,CAACE,iBAAX,CADf,CADsB;AAAA,GAAxB,CAFJ,CADF;AAWD,CA/BD;;AAiCA,eAAerB,eAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\nimport { decideWidget } from '../../../../helpers/decide-widgets'\nimport Swal from 'sweetalert2'\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}))\n\nconst FormGroupWidget = ({ widgetId }) => {\n  const classes = useStyles()\n  const [widget, setWidget] = useState({ properties: {} })\n  const [subWidgets, setSubWidgets] = useState([])\n  const [menuState, setMenuState] = useState({ right: false })\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\n        const $subWidgets = await WidgetSettingsActions.getSubWidgets(widgetId)\n        setWidget($widget)\n        setSubWidgets($subWidgets)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    getData()\n  }, [])\n\n  return (\n    <FormGroup>\n      {\n        subWidgets.map(subWidget => (\n          <div key={subWidget.id}>\n            {decideWidget(subWidget.subWidgetSettings)}\n          </div>\n        ))\n      }\n    </FormGroup>\n  )\n}\n\nexport default FormGroupWidget"]},"metadata":{},"sourceType":"module"}