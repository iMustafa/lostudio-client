{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions';\nimport TextField from '@material-ui/core/TextField';\nvar useStyles = makeStyles(function (theme) {\n  return {};\n});\n\nvar TextAreaWidget = function TextAreaWidget(_ref) {\n  var widgetId = _ref.widgetId;\n  var classes = useStyles();\n\n  var _useState = useState({\n    properties: {}\n  }),\n      widget = _useState[0],\n      setWidget = _useState[1];\n\n  var _useState2 = useState({\n    right: false\n  }),\n      menuState = _useState2[0],\n      setMenuState = _useState2[1];\n\n  var _useState3 = useState(''),\n      value = _useState3[0],\n      setValue = _useState3[1];\n\n  var handleChange = function handleChange(event) {\n    var value = event.target.value;\n    setValue(value);\n  };\n\n  useEffect(function () {\n    var getData = function getData() {\n      var $widget;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(WidgetSettingsActions.getWidgetSettingsById(widgetId));\n\n            case 3:\n              $widget = _context.sent;\n              setWidget($widget);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    getData();\n  }, []);\n  return __jsx(TextField, {\n    name: widget.properties.name,\n    label: widget.properties.label,\n    id: widget.properties.id,\n    fullWidth: true,\n    onChange: handleChange,\n    className: widget.properties.className,\n    value: value,\n    multiline: true\n  });\n};\n\nexport default TextAreaWidget;","map":null,"metadata":{},"sourceType":"module"}