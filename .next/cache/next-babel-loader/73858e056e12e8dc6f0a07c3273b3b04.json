{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\notifications\\\\NotificationsItem.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport NotificationsActions from '../../actions/notifications.actions';\nimport Typography from '@material-ui/core/Typography';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nconst useStyles = makeStyles(theme => ({\n  gridItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center'\n  },\n  message: {\n    alignSelf: 'flex-start',\n    justifySelf: 'flex-start',\n    fontSize: 14\n  },\n  date: {\n    alignSelf: 'flex-start',\n    fontSize: 12,\n    color: \"#555\"\n  }\n}));\n\nconst NotificationItem = ({\n  notification\n}) => {\n  const classes = useStyles();\n  const {\n    0: isSeen,\n    1: setIsSeen\n  } = useState(notification.seen);\n\n  const decideNotificationIcon = () => {\n    switch (notification.type) {\n      case \"Dashboard Collaboration\":\n        return __jsx(DashboardIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n    }\n  };\n\n  const markSeen = async () => {\n    if (!notification.seen) {\n      try {\n        await NotificationsActions.markAsSeen({\n          id: notification.id\n        });\n        setIsSeen(true);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  return __jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Grid, {\n    spacing: 0,\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.gridItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, decideNotificationIcon()), __jsx(Grid, {\n    item: true,\n    xs: 8,\n    className: classes.gridItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Typography, {\n    className: classes.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, notification.message), __jsx(Typography, {\n    className: classes.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, moment(notification.createdAt).format('YYYY/MM/DD HH:mm'))), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.gridItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    style: {\n      outline: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(RadioButtonUncheckedIcon, {\n    fontSize: \"small\",\n    style: {\n      color: \"#3F51B5\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })))));\n};\n\nexport default NotificationItem;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/notifications/NotificationsItem.jsx"],"names":["useEffect","useState","moment","makeStyles","Card","Grid","IconButton","NotificationsActions","Typography","DashboardIcon","RadioButtonUncheckedIcon","useStyles","theme","gridItem","display","flexDirection","justifyContent","alignContent","alignItems","message","alignSelf","justifySelf","fontSize","date","color","NotificationItem","notification","classes","isSeen","setIsSeen","seen","decideNotificationIcon","type","markSeen","markAsSeen","id","e","console","log","createdAt","format","outline"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport NotificationsActions from '../../actions/notifications.actions'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport DashboardIcon from '@material-ui/icons/Dashboard'\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  gridItem: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  message: {\r\n    alignSelf: 'flex-start',\r\n    justifySelf: 'flex-start',\r\n    fontSize: 14\r\n  },\r\n  date: {\r\n    alignSelf: 'flex-start',\r\n    fontSize: 12,\r\n    color: \"#555\"\r\n  }\r\n}))\r\n\r\nconst NotificationItem = ({ notification }) => {\r\n  const classes = useStyles()\r\n  const [isSeen, setIsSeen] = useState(notification.seen)\r\n\r\n  const decideNotificationIcon = () => {\r\n    switch (notification.type) {\r\n      case \"Dashboard Collaboration\":\r\n        return (<DashboardIcon />)\r\n    }\r\n  }\r\n\r\n  const markSeen = async () => {\r\n    if (!notification.seen) {\r\n      try {\r\n        await NotificationsActions.markAsSeen({ id: notification.id })\r\n        setIsSeen(true)\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Grid spacing={0} container>\r\n        <Grid item xs={2} className={classes.gridItem}>\r\n          {decideNotificationIcon()}\r\n        </Grid>\r\n        <Grid item xs={8} className={classes.gridItem}>\r\n          <Typography className={classes.message}>{notification.message}</Typography>\r\n          <Typography className={classes.date}>{moment(notification.createdAt).format('YYYY/MM/DD HH:mm')}</Typography>\r\n        </Grid>\r\n        <Grid item xs={2} className={classes.gridItem}>\r\n          <IconButton style={{ outline: 'none' }}>\r\n            <RadioButtonUncheckedIcon fontSize=\"small\" style={{ color: \"#3F51B5\" }} />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default NotificationItem"]},"metadata":{},"sourceType":"module"}