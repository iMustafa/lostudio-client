{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport config from 'next/config';\nimport Cookie from 'js-cookie';\nvar API_URL = config().publicRuntimeConfig.API_URL;\n\nvar WidgetSettingsActions = /*#__PURE__*/function () {\n  function WidgetSettingsActions() {\n    _classCallCheck(this, WidgetSettingsActions);\n  }\n\n  _createClass(WidgetSettingsActions, null, [{\n    key: \"addWidgetSettingsDocument\",\n    value: function addWidgetSettingsDocument(widgetSettingsId, data) {\n      return _regeneratorRuntime.async(function addWidgetSettingsDocument$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", axios.post(\"\".concat(API_URL, \"/WidgetSettings/\").concat(widgetSettingsId, \"/add-document\"), data, {\n                headers: {\n                  Authorization: Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"editWidgetSettingsDocument\",\n    value: function editWidgetSettingsDocument(widgetSettingsId, data, keyId) {\n      return _regeneratorRuntime.async(function editWidgetSettingsDocument$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", axios.post(\"\".concat(API_URL, \"/WidgetSettings/\").concat(widgetSettingsId, \"/edit-document\"), data, {\n                headers: {\n                  Authorization: Cookie.get('id')\n                },\n                params: {\n                  keyId: keyId\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"deleteWidgetSettingsDocument\",\n    value: function deleteWidgetSettingsDocument(widgetSettingsId, keyId) {\n      return _regeneratorRuntime.async(function deleteWidgetSettingsDocument$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", axios[\"delete\"](\"\".concat(API_URL, \"/WidgetSettings/\").concat(widgetSettingsId, \"/delete-document\"), {\n                headers: {\n                  Authorization: Cookie.get('id')\n                },\n                params: {\n                  keyId: keyId\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"createWidgetSettings\",\n    value: function createWidgetSettings(widgetSettings) {\n      return _regeneratorRuntime.async(function createWidgetSettings$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", axios.post(\"\".concat(API_URL, \"/WidgetSettings\"), widgetSettings, {\n                headers: {\n                  Authorization: Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getSubWidgets\",\n    value: function getSubWidgets(widgetSettingsId) {\n      return _regeneratorRuntime.async(function getSubWidgets$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/WidgetSettings/\").concat(widgetSettingsId, \"/subWidgetSettings\"), {\n                headers: {\n                  Authorization: Cookie.get('id')\n                },\n                params: {\n                  filter: {\n                    include: 'subWidgetSettings'\n                  }\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"exportWidgetData\",\n    value: function exportWidgetData(widgetSettingsId, format, method, selectedFields) {\n      return _regeneratorRuntime.async(function exportWidgetData$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(format == 'email')) {\n                _context6.next = 4;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/WidgetSettings/\").concat(widgetSettingsId, \"/export-data\"), {\n                headers: {\n                  Authorization: Cookie.get('id')\n                },\n                params: {\n                  format: format,\n                  selectedFields: selectedFields,\n                  method: method\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 4:\n              window.open(\"\".concat(API_URL, \"/WidgetSettings/\").concat(widgetSettingsId, \"/export-data?format=\").concat(format, \"&method=\").concat(method, \"&selectedFields=\").concat(selectedFields));\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"createSubWidget\",\n    value: function createSubWidget(widgetSettingsId, subWidgetSettingsId) {\n      return _regeneratorRuntime.async(function createSubWidget$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", axios.post(\"\".concat(API_URL, \"/WidgetSettings/\").concat(widgetSettingsId, \"/subWidgetSettings\"), {\n                subWidgetSettingsId: subWidgetSettingsId\n              }, {\n                headers: {\n                  Authorization: Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getWidgetSettingsMeasureConditions\",\n    value: function getWidgetSettingsMeasureConditions(widgetSettingsId) {\n      return _regeneratorRuntime.async(function getWidgetSettingsMeasureConditions$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/WidgetSettings/\").concat(widgetSettingsId, \"/measureConditions\"), {\n                headers: {\n                  Authorization: Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"createWidgetSettingsMeasureConditions\",\n    value: function createWidgetSettingsMeasureConditions(widgetSettingsId, measureCondition) {\n      return _regeneratorRuntime.async(function createWidgetSettingsMeasureConditions$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              return _context9.abrupt(\"return\", axios.post(\"\".concat(API_URL, \"/WidgetSettings/\").concat(widgetSettingsId, \"/measureConditions\"), measureCondition, {\n                headers: {\n                  Authorization: Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"deleteWidgetSettingsMeasureConditions\",\n    value: function deleteWidgetSettingsMeasureConditions(widgetSettingsId, measureConditionId) {\n      return _regeneratorRuntime.async(function deleteWidgetSettingsMeasureConditions$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              return _context10.abrupt(\"return\", axios[\"delete\"](\"\".concat(API_URL, \"/WidgetSettings/\").concat(widgetSettingsId, \"/measureConditions/\").concat(measureConditionId), {\n                headers: {\n                  Authorization: Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"deleteSubWidget\",\n    value: function deleteSubWidget(widgetSettingsId, subWidgetSettingsId) {\n      return _regeneratorRuntime.async(function deleteSubWidget$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              return _context11.abrupt(\"return\", axios[\"delete\"](\"\".concat(API_URL, \"/WidgetSettings/\").concat(widgetSettingsId, \"/subWidgetSettings/\").concat(subWidgetSettingsId), {\n                headers: {\n                  Authorization: Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getFormGroupWidgets\",\n    value: function getFormGroupWidgets() {\n      return _regeneratorRuntime.async(function getFormGroupWidgets$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              return _context12.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/WidgetSettings\"), {\n                headers: {\n                  Authorization: Cookie.get('id')\n                },\n                params: {\n                  filter: {\n                    where: {\n                      type: \"Form Group\"\n                    }\n                  }\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    } // TODO\n\n  }, {\n    key: \"getWidgetSettings\",\n    value: function getWidgetSettings() {\n      return _regeneratorRuntime.async(function getWidgetSettings$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              return _context13.abrupt(\"return\", axios.post('', {}).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    } // TODO\n\n  }, {\n    key: \"getWidgetSettingsById\",\n    value: function getWidgetSettingsById(id, Authorization) {\n      return _regeneratorRuntime.async(function getWidgetSettingsById$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              return _context14.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/WidgetSettings/\").concat(id), {\n                headers: {\n                  Authorization: Authorization || Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    } // TODO\n\n  }, {\n    key: \"updateWidgetSettings\",\n    value: function updateWidgetSettings(id, widgetSettings) {\n      return _regeneratorRuntime.async(function updateWidgetSettings$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              return _context15.abrupt(\"return\", axios.patch(\"\".concat(API_URL, \"/WidgetSettings/\").concat(id), widgetSettings, {\n                headers: {\n                  Authorization: Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    } // TODO\n\n  }, {\n    key: \"deleteWidgetSettings\",\n    value: function deleteWidgetSettings(id) {\n      return _regeneratorRuntime.async(function deleteWidgetSettings$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              return _context16.abrupt(\"return\", axios.post('', {}).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"executeWidgetQuery\",\n    value: function executeWidgetQuery(id, Authorization) {\n      return _regeneratorRuntime.async(function executeWidgetQuery$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              return _context17.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/WidgetSettings/\").concat(id, \"/execute-query\"), {\n                headers: {\n                  Authorization: Authorization || Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return WidgetSettingsActions;\n}();\n\nexport { WidgetSettingsActions as default };","map":null,"metadata":{},"sourceType":"module"}