{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\components\\\\widgets\\\\gantt-chart\\\\index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport Gantt from './gantt-chart-widget';\nimport Toolbar from './gantt-chart-widget-toolbar';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\n\nconst GanttChartWidget = () => {\n  const {\n    0: widget,\n    1: setWidget\n  } = useState({});\n  const {\n    0: tasks,\n    1: setTasks\n  } = useState({\n    data: [],\n    links: []\n  });\n  const {\n    0: zoom,\n    1: setZoom\n  } = useState('Days');\n\n  const handleZoomChange = zoom => {\n    setZoom(zoom);\n  };\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const Widget = await WidgetSettingsActions.getWidgetSettingsById(\"5e78a808f2c42d5a58cc2cdc\");\n        const Result = await WidgetSettingsActions.executeWidgetQuery(\"5e78a808f2c42d5a58cc2cdc\");\n        setTasks({\n          data: Result[0].data,\n          links: Result[0].links\n        });\n        setWidget(_objectSpread({}, Widget));\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getData();\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"zoom-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    zoom: zoom,\n    onZoomChange: handleZoomChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"gantt-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Gantt, {\n    tasks: tasks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n};\n\nexport default GanttChartWidget;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/components/widgets/gantt-chart/index.jsx"],"names":["useState","useEffect","Gantt","Toolbar","WidgetSettingsActions","GanttChartWidget","widget","setWidget","tasks","setTasks","data","links","zoom","setZoom","handleZoomChange","getData","Widget","getWidgetSettingsById","Result","executeWidgetQuery","e","console","log"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAD,CAAlC;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBb,QAAQ,CAAC,MAAD,CAAhC;;AAEA,QAAMc,gBAAgB,GAAIF,IAAD,IAAU;AACjCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,OAAO,GAAG,YAAY;AAC1B,UAAI;AACF,cAAMC,MAAM,GAAG,MAAMZ,qBAAqB,CAACa,qBAAtB,CAA4C,0BAA5C,CAArB;AACA,cAAMC,MAAM,GAAG,MAAMd,qBAAqB,CAACe,kBAAtB,CAAyC,0BAAzC,CAArB;AACAV,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAEQ,MAAM,CAAC,CAAD,CAAN,CAAUR,IAAlB;AAAwBC,UAAAA,KAAK,EAAEO,MAAM,CAAC,CAAD,CAAN,CAAUP;AAAzC,SAAD,CAAR;AACAJ,QAAAA,SAAS,mBAAMS,MAAN,EAAT;AACD,OALD,CAKE,OAAOI,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,KATD;;AAUAL,IAAAA,OAAO;AACR,GAZQ,CAAT;AAcA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,YAAY,EAAEE,gBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAOE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEN,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF;AAaD,CApCD;;AAsCA,eAAeH,gBAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Gantt from './gantt-chart-widget'\r\nimport Toolbar from './gantt-chart-widget-toolbar'\r\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\r\n\r\nconst GanttChartWidget = () => {\r\n  const [widget, setWidget] = useState({})\r\n  const [tasks, setTasks] = useState({ data: [], links: [] })\r\n  const [zoom, setZoom] = useState('Days')\r\n\r\n  const handleZoomChange = (zoom) => {\r\n    setZoom(zoom)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const Widget = await WidgetSettingsActions.getWidgetSettingsById(\"5e78a808f2c42d5a58cc2cdc\")\r\n        const Result = await WidgetSettingsActions.executeWidgetQuery(\"5e78a808f2c42d5a58cc2cdc\")\r\n        setTasks({ data: Result[0].data, links: Result[0].links })\r\n        setWidget({ ...Widget })\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"zoom-bar\">\r\n        <Toolbar\r\n          zoom={zoom}\r\n          onZoomChange={handleZoomChange}\r\n        />\r\n      </div>\r\n      <div className=\"gantt-container\">\r\n        <Gantt tasks={tasks} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GanttChartWidget"]},"metadata":{},"sourceType":"module"}