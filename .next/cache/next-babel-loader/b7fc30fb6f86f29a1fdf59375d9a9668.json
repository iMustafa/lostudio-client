{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'axios';\nimport config from 'next/config';\nimport Cookie from 'js-cookie';\nvar API_URL = config().publicRuntimeConfig.API_URL;\n\nvar DashboardActions =\n/*#__PURE__*/\nfunction () {\n  function DashboardActions() {\n    _classCallCheck(this, DashboardActions);\n  }\n\n  _createClass(DashboardActions, null, [{\n    key: \"createDashboard\",\n    value: function createDashboard(dashborad) {\n      return _regeneratorRuntime.async(function createDashboard$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", axios.post('', {}).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getDashboards\",\n    value: function getDashboards(_ref) {\n      var Authorization, query;\n      return _regeneratorRuntime.async(function getDashboards$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              Authorization = _ref.Authorization, query = _ref.query;\n              console.log(Authorization);\n              return _context2.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/Dashboards\"), {\n                headers: {\n                  Authorization: Authorization || Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err;\n              }));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getDashboardById\",\n    value: function getDashboardById(data) {\n      return _regeneratorRuntime.async(function getDashboardById$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", axios.post('', {}).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"updateDashboard\",\n    value: function updateDashboard(id, data) {\n      return _regeneratorRuntime.async(function updateDashboard$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", axios.patch(\"\".concat(API_URL, \"/Dashboards/\").concat(id), data).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"deleteDashboard\",\n    value: function deleteDashboard(data) {\n      return _regeneratorRuntime.async(function deleteDashboard$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", axios.post('', {}).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getWidgetSettings\",\n    value: function getWidgetSettings(_ref2) {\n      var Authorization, id;\n      return _regeneratorRuntime.async(function getWidgetSettings$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              Authorization = _ref2.Authorization, id = _ref2.id;\n              return _context6.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/Dashboards/\").concat(id, \"/widgetSettings\"), {\n                headers: {\n                  Authorization: Authorization || Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getCollaborators\",\n    value: function getCollaborators(_ref3) {\n      var Authorization, id;\n      return _regeneratorRuntime.async(function getCollaborators$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              Authorization = _ref3.Authorization, id = _ref3.id;\n              return _context7.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/Dashboards/\").concat(id, \"/collaborators\"), {\n                headers: {\n                  Authorization: Authorization || Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 2:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getCollaboratorations\",\n    value: function getCollaboratorations(_ref4) {\n      var Authorization;\n      return _regeneratorRuntime.async(function getCollaboratorations$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              Authorization = _ref4.Authorization;\n              return _context8.abrupt(\"return\", axios.get(\"\".concat(API_URL, \"/Dashboards/collaborations\"), {\n                headers: {\n                  Authorization: Authorization || Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 2:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"addCollaborator\",\n    value: function addCollaborator(_ref5) {\n      var Authorization, email, id, editor, viewer;\n      return _regeneratorRuntime.async(function addCollaborator$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              Authorization = _ref5.Authorization, email = _ref5.email, id = _ref5.id, editor = _ref5.editor, viewer = _ref5.viewer;\n              return _context9.abrupt(\"return\", axios.post(\"\".concat(API_URL, \"/Dashboards/\").concat(id, \"/dashboardRoleMappings\"), {\n                email: email,\n                editor: editor,\n                viewer: viewer\n              }, {\n                headers: {\n                  Authorization: Authorization || Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 2:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"addWidgetToDashboard\",\n    value: function addWidgetToDashboard(id, fk) {\n      return _regeneratorRuntime.async(function addWidgetToDashboard$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              return _context10.abrupt(\"return\", axios.put(\"\".concat(API_URL, \"/Dashboards/\").concat(id, \"/widgetSettings/rel/\").concat(fk), {\n                dashboardId: id,\n                widgetSettingsId: fk\n              }, {\n                headers: {\n                  Authorization: Cookie.get('id')\n                }\n              }).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"removeWidgetFromDashboard\",\n    value: function removeWidgetFromDashboard(data) {\n      return _regeneratorRuntime.async(function removeWidgetFromDashboard$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              return _context11.abrupt(\"return\", axios.post('', {}).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return err.response;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return DashboardActions;\n}();\n\nexport { DashboardActions as default };","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/actions/dashboard.actions.ts"],"names":["axios","config","Cookie","API_URL","publicRuntimeConfig","DashboardActions","dashborad","post","then","res","data","err","response","Authorization","query","console","log","get","headers","id","patch","email","editor","viewer","fk","put","dashboardId","widgetSettingsId"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport config from 'next/config'\nimport Cookie from 'js-cookie'\nimport User from '../types/users.types'\nimport Dashboard from '../types/dashboard.types'\nimport Datasource from '../types/datasource.types'\nimport Widget from '../types/widget.types'\nimport WidgetSettings from '../types/widgetSettings.type'\n\nconst { API_URL } = config().publicRuntimeConfig\n\nexport default class DashboardActions {\n\n  public static async createDashboard(dashborad: Dashboard): Promise<Dashboard> {\n    return axios\n      .post('', {})\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async getDashboards({ Authorization, query }: { Authorization?: string, query?: any }): Promise<Array<Dashboard>> {\n    console.log(Authorization)\n    return axios\n      .get(`${API_URL}/Dashboards`, { headers: { Authorization: Authorization || Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err)\n  }\n\n  public static async getDashboardById(data: Datasource): Promise<Dashboard> {\n    return axios\n      .post('', {})\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async updateDashboard(id: string, data): Promise<Dashboard> {\n    return axios\n      .patch(`${API_URL}/Dashboards/${id}`, data)\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async deleteDashboard(data: Datasource): Promise<Dashboard> {\n    return axios\n      .post('', {})\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async getWidgetSettings({ Authorization, id }: { Authorization?: string, id: string }): Promise<Array<WidgetSettings>> {\n    return axios\n      .get(`${API_URL}/Dashboards/${id}/widgetSettings`, { headers: { Authorization: Authorization || Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async getCollaborators({ Authorization, id }: { Authorization?: string, id: string }): Promise<Array<User>> {\n    return axios\n      .get(`${API_URL}/Dashboards/${id}/collaborators`, { headers: { Authorization: Authorization || Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async getCollaboratorations({ Authorization }: { Authorization?: string }): Promise<Array<Dashboard>> {\n    return axios\n      .get(`${API_URL}/Dashboards/collaborations`, { headers: { Authorization: Authorization || Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async addCollaborator(\n    { Authorization, email, id, editor, viewer }: { Authorization?: string, email: string, id: string, editor: boolean, viewer: boolean }\n  ): Promise<any> {\n    return axios\n      .post(\n        `${API_URL}/Dashboards/${id}/dashboardRoleMappings`,\n        { email, editor, viewer },\n        { headers: { Authorization: Authorization || Cookie.get('id') } }\n      )\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async addWidgetToDashboard(id: string, fk: string): Promise<Dashboard> {\n    return axios\n      .put(`${API_URL}/Dashboards/${id}/widgetSettings/rel/${fk}`, { dashboardId: id, widgetSettingsId: fk }, { headers: { Authorization: Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async removeWidgetFromDashboard(data: Datasource): Promise<Dashboard> {\n    return axios\n      .post('', {})\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}