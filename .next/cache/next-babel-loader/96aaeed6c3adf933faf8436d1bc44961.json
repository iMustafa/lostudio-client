{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-widget.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport Drawer from '@material-ui/core/Drawer';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ShareIcon from '@material-ui/icons/Share';\nimport TableWidgetSettings from './table-widget-settings';\nimport ExportTableData from './export-table-data';\nimport { measureConditionResult } from '../../../helpers/measure-conditions';\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500\n  },\n  widgetActions: {\n    display: 'flex',\n    backgroundColor: \"#3F51B5\",\n    borderTopRightRadius: \"5px\",\n    borderTopLeftRadius: \"5px\"\n  },\n  widgetTitle: {\n    flex: 1,\n    display: 'flex',\n    alignContent: 'center',\n    alignItems: 'center',\n    paddingLeft: \"10px\"\n  },\n  actionButtons: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst TableWidget = ({\n  widgetId\n}) => {\n  const classes = useStyles();\n  const {\n    0: widget,\n    1: setWidget\n  } = useState(null);\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: isLoadingData,\n    1: setIsLoadingData\n  } = useState(false);\n  const {\n    0: refresh,\n    1: setRefresh\n  } = useState(0);\n  const {\n    0: menuState,\n    1: setMenuState\n  } = useState({\n    right: false,\n    export: false\n  });\n  const {\n    0: measureConditions,\n    1: setMeasureConditions\n  } = useState([]);\n  const {\n    0: measureConditionsFields,\n    1: setMeasureConditionsFields\n  } = useState([]);\n  useEffect(() => {\n    const getMeasureConditions = async () => {\n      try {\n        const $measureConditions = await WidgetSettingsActions.getWidgetSettingsMeasureConditions(widgetId);\n        setMeasureConditions($measureConditions);\n        setMeasureConditionsFields($measureConditions.map(condition => condition.field));\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getMeasureConditions();\n  }, []);\n\n  const getWidgetData = async () => {\n    try {\n      const $data = await WidgetSettingsActions.executeWidgetQuery(widgetId);\n      setData($data);\n      return $data;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getWidget = async () => {\n    try {\n      const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId);\n      setWidget($widget);\n      return $widget;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getWidget();\n    getWidgetData();\n  }, [refresh]);\n\n  const refreshData = async () => {\n    setIsLoadingData(true);\n    getWidget();\n    getWidgetData();\n    setIsLoadingData(false);\n  };\n\n  const handleSettingsClose = () => {\n    setRefresh(refresh + 1);\n    toggleDrawer('right', false);\n  };\n\n  const onRowAdd = async newData => {\n    try {\n      const $data = await WidgetSettingsActions.addWidgetSettingsDocument(widgetId, newData);\n      getWidgetData();\n      return $data;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onRowUpdate = async (newData, oldData) => {\n    try {\n      const keyId = oldData[widget.config.primaryKey];\n      const $data = await WidgetSettingsActions.editWidgetSettingsDocument(widgetId, newData, keyId);\n      getWidgetData();\n      return $data;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onRowDelete = async oldData => {\n    try {\n      const keyId = oldData[widget.config.primaryKey];\n      const $data = await WidgetSettingsActions.deleteWidgetSettingsDocument(widgetId, keyId);\n      getWidgetData();\n      return $data;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const editable = () => {\n    const {\n      isEditable,\n      isDeletable,\n      isAddable\n    } = widget.config;\n    const obj = {};\n    if (isEditable) obj.onRowUpdate = onRowUpdate;\n    if (isDeletable) obj.onRowDelete = onRowDelete;\n    if (isAddable) obj.onRowAdd = onRowAdd;\n    return obj;\n  };\n\n  const renderTable = () => {\n    return isLoadingData || !widget ? __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 40\n      }\n    }) : __jsx(MaterialTable, {\n      columns: widget.config.fields.map(field => ({\n        field,\n        title: field,\n        render: rowData => {\n          const doesHaveCondition = measureConditionsFields.includes(field);\n\n          if (doesHaveCondition) {\n            const condition = measureConditions.filter(c => c.field == field)[0];\n            const isConditionMet = measureConditionResult(condition, rowData[field]);\n            return isConditionMet ? __jsx(Typography, {\n              style: {\n                backgroundColor: condition.color\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }\n            }, rowData[field]) : __jsx(Typography, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }\n            }, rowData[field]);\n          } else {\n            return __jsx(Typography, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 24\n              }\n            }, rowData[field]);\n          }\n        }\n      })),\n      data: data,\n      title: widget.title || '',\n      editable: editable(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    });\n  };\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) return;\n    setMenuState(_objectSpread({}, menuState, {\n      [side]: open\n    }));\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.widgetActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.widgetTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    style: {\n      color: \"#FFF\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, widget && widget.title)), __jsx(\"div\", {\n    className: classes.actionButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    onClick: toggleDrawer('export', true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, __jsx(ShareIcon, {\n    style: {\n      color: \"#FFF\"\n    },\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  })), __jsx(IconButton, {\n    onClick: toggleDrawer('right', true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, __jsx(SettingsIcon, {\n    style: {\n      color: \"#FFF\"\n    },\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  })), __jsx(IconButton, {\n    onClick: refreshData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, __jsx(RefreshIcon, {\n    style: {\n      color: \"#FFF\"\n    },\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  })))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, renderTable()), __jsx(Drawer, {\n    anchor: \"right\",\n    open: menuState.right,\n    onClose: toggleDrawer('right', false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, __jsx(TableWidgetSettings, {\n    widget: widget,\n    handleSettingsClose: handleSettingsClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  })), __jsx(Drawer, {\n    anchor: \"right\",\n    open: menuState.export,\n    onClose: toggleDrawer('export', false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, __jsx(ExportTableData, {\n    widget: widget,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default TableWidget;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-widget.jsx"],"names":["useState","useEffect","makeStyles","MaterialTable","Drawer","WidgetSettingsActions","Typography","CircularProgress","IconButton","RefreshIcon","SettingsIcon","ShareIcon","TableWidgetSettings","ExportTableData","measureConditionResult","useStyles","theme","list","width","widgetActions","display","backgroundColor","borderTopRightRadius","borderTopLeftRadius","widgetTitle","flex","alignContent","alignItems","paddingLeft","actionButtons","justifyContent","TableWidget","widgetId","classes","widget","setWidget","data","setData","isLoadingData","setIsLoadingData","refresh","setRefresh","menuState","setMenuState","right","export","measureConditions","setMeasureConditions","measureConditionsFields","setMeasureConditionsFields","getMeasureConditions","$measureConditions","getWidgetSettingsMeasureConditions","map","condition","field","e","console","log","getWidgetData","$data","executeWidgetQuery","getWidget","$widget","getWidgetSettingsById","refreshData","handleSettingsClose","toggleDrawer","onRowAdd","newData","addWidgetSettingsDocument","onRowUpdate","oldData","keyId","config","primaryKey","editWidgetSettingsDocument","onRowDelete","deleteWidgetSettingsDocument","editable","isEditable","isDeletable","isAddable","obj","renderTable","fields","title","render","rowData","doesHaveCondition","includes","filter","c","isConditionMet","color","side","open","event","type","key"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport MaterialTable from 'material-table'\nimport Drawer from '@material-ui/core/Drawer'\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\nimport Typography from '@material-ui/core/Typography'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport IconButton from '@material-ui/core/IconButton'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport ShareIcon from '@material-ui/icons/Share'\nimport TableWidgetSettings from './table-widget-settings'\nimport ExportTableData from './export-table-data'\nimport { measureConditionResult } from '../../../helpers/measure-conditions'\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500\n  },\n  widgetActions: {\n    display: 'flex',\n    backgroundColor: \"#3F51B5\",\n    borderTopRightRadius: \"5px\",\n    borderTopLeftRadius: \"5px\",\n  },\n  widgetTitle: {\n    flex: 1,\n    display: 'flex',\n    alignContent: 'center',\n    alignItems: 'center',\n    paddingLeft: \"10px\"\n  },\n  actionButtons: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'flex-end'\n  }\n}))\n\nconst TableWidget = ({ widgetId }) => {\n  const classes = useStyles()\n  const [widget, setWidget] = useState(null)\n  const [data, setData] = useState([])\n  const [isLoadingData, setIsLoadingData] = useState(false)\n  const [refresh, setRefresh] = useState(0)\n  const [menuState, setMenuState] = useState({ right: false, export: false })\n  const [measureConditions, setMeasureConditions] = useState([])\n  const [measureConditionsFields, setMeasureConditionsFields] = useState([])\n\n  useEffect(() => {\n    const getMeasureConditions = async () => {\n      try {\n        const $measureConditions = await WidgetSettingsActions.getWidgetSettingsMeasureConditions(widgetId)\n        setMeasureConditions($measureConditions)\n        setMeasureConditionsFields($measureConditions.map(condition => condition.field))\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    getMeasureConditions()\n  }, [])\n\n  const getWidgetData = async () => {\n    try {\n      const $data = await WidgetSettingsActions.executeWidgetQuery(widgetId)\n      setData($data)\n      return $data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const getWidget = async () => {\n    try {\n      const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\n      setWidget($widget)\n      return $widget\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  useEffect(() => {\n    getWidget()\n    getWidgetData()\n  }, [refresh])\n\n  const refreshData = async () => {\n    setIsLoadingData(true)\n    getWidget()\n    getWidgetData()\n    setIsLoadingData(false)\n  }\n\n  const handleSettingsClose = () => {\n    setRefresh(refresh + 1)\n    toggleDrawer('right', false)\n  }\n\n  const onRowAdd = async newData => {\n    try {\n      const $data = await WidgetSettingsActions.addWidgetSettingsDocument(widgetId, newData)\n      getWidgetData()\n      return $data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const onRowUpdate = async (newData, oldData) => {\n    try {\n      const keyId = oldData[widget.config.primaryKey]\n      const $data = await WidgetSettingsActions.editWidgetSettingsDocument(widgetId, newData, keyId)\n      getWidgetData()\n      return $data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const onRowDelete = async oldData => {\n    try {\n      const keyId = oldData[widget.config.primaryKey]\n      const $data = await WidgetSettingsActions.deleteWidgetSettingsDocument(widgetId, keyId)\n      getWidgetData()\n      return $data\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const editable = () => {\n    const { isEditable, isDeletable, isAddable } = widget.config\n    const obj = {}\n    if (isEditable) obj.onRowUpdate = onRowUpdate\n    if (isDeletable) obj.onRowDelete = onRowDelete\n    if (isAddable) obj.onRowAdd = onRowAdd\n    return obj\n  }\n\n  const renderTable = () => {\n    return isLoadingData || !widget ? (<CircularProgress />) : (\n      <MaterialTable\n        columns={\n          widget.config.fields.map(field => ({\n            field,\n            title: field,\n            render: rowData => {\n              const doesHaveCondition = measureConditionsFields.includes(field)\n              if (doesHaveCondition) {\n                const condition = measureConditions.filter(c => c.field == field)[0]\n                const isConditionMet = measureConditionResult(condition, rowData[field])\n                return isConditionMet ? (\n                  <Typography style={{ backgroundColor: condition.color }}>{rowData[field]}</Typography>\n                ) : <Typography>{rowData[field]}</Typography>\n              } else {\n                return <Typography>{rowData[field]}</Typography>\n              }\n            }\n          }))\n        }\n        data={data}\n        title={widget.title || ''}\n        editable={editable()}\n      />\n    )\n  }\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift'))\n      return\n    setMenuState({ ...menuState, [side]: open })\n  }\n\n  return (\n    <div>\n      <div className={classes.widgetActions}>\n        <div className={classes.widgetTitle}>\n          <Typography style={{ color: \"#FFF\" }}>{widget && widget.title}</Typography>\n        </div>\n        <div className={classes.actionButtons}>\n          <IconButton onClick={toggleDrawer('export', true)}>\n            <ShareIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\n          </IconButton>\n          <IconButton onClick={toggleDrawer('right', true)}>\n            <SettingsIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\n          </IconButton>\n          <IconButton onClick={refreshData}>\n            <RefreshIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\n          </IconButton>\n        </div>\n      </div>\n      <div>\n        {renderTable()}\n      </div>\n      <Drawer anchor=\"right\" open={menuState.right} onClose={toggleDrawer('right', false)}>\n        <TableWidgetSettings widget={widget} handleSettingsClose={handleSettingsClose} />\n      </Drawer>\n      <Drawer anchor=\"right\" open={menuState.export} onClose={toggleDrawer('export', false)}>\n        <ExportTableData widget={widget} data={data} />\n      </Drawer>\n    </div>\n  )\n}\n\nexport default TableWidget"]},"metadata":{},"sourceType":"module"}