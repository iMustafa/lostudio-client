{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DashboardActions from '../../../actions/dashboard.actions';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nvar useStyles = makeStyles(function () {\n  return {\n    h2: {\n      width: '100%',\n      textAlign: 'center',\n      borderBottom: '1px solid #000',\n      lineHeight: '0.1em',\n      marginTop: \"20px\",\n      marginBottom: \"20px\",\n      fontFamily: 'Roboto',\n      fontSize: '13px',\n      color: \"#3F51B5\"\n    },\n    span: {\n      background: '#fff',\n      padding: '0 10px'\n    }\n  };\n});\n\nvar GeneralSettings = function GeneralSettings(_ref) {\n  var id = _ref.id,\n      refresh = _ref.refresh,\n      setRefresh = _ref.setRefresh;\n  var classes = useStyles();\n\n  var _useState = useState({\n    title: '',\n    description: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(false),\n      isSub = _useState2[0],\n      setIsSub = _useState2[1];\n\n  var _useState3 = useState(false),\n      showDelete = _useState3[0],\n      setShowDelete = _useState3[1];\n\n  var _useState4 = useState(false),\n      isDeleting = _useState4[0],\n      setIsDeleting = _useState4[1];\n\n  var _useState5 = useState(false),\n      isEditing = _useState5[0],\n      setIsEditing = _useState5[1];\n\n  var _useState6 = useState({}),\n      dashboard = _useState6[0],\n      setDashboard = _useState6[1];\n\n  useEffect(function () {\n    var getInitialProps = function getInitialProps() {\n      var $dashboard;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(DashboardActions.getDashboardById(id));\n\n            case 3:\n              $dashboard = _context.sent;\n              setDashboard($dashboard);\n              setState(_objectSpread({}, state, {\n                title: $dashboard.title,\n                description: dashboard.description\n              }));\n              setIsSub($dashboard.isSub ? true : false);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    };\n\n    getInitialProps();\n  }, []);\n  return __jsx(\"div\", null, __jsx(\"h2\", {\n    className: classes.h2\n  }, __jsx(\"span\", {\n    className: classes.span\n  }, \"Dashboard Details\")), __jsx(\"div\", null, __jsx(TextField, {\n    label: \"Title\",\n    value: state.title,\n    placeholder: \"Dashboard Title\",\n    fullWidth: true\n  }), __jsx(TextField, {\n    style: {\n      marginTop: 10\n    },\n    fullWidth: true,\n    value: state.description,\n    label: \"Description\",\n    placeholder: \"Dashboard Description\",\n    multiline: true,\n    rows: 2,\n    rowsMax: 4\n  }), __jsx(Button, {\n    fullWidth: true,\n    style: {\n      marginTop: 10\n    }\n  }, \"Save Changes\")), __jsx(\"h2\", {\n    className: classes.h2\n  }, __jsx(\"span\", {\n    className: classes.span\n  }, \"Delete Project\")), showDelete ? __jsx(Card, {\n    style: {\n      marginTop: 10,\n      padding: 15\n    }\n  }, !isSub ? __jsx(\"div\", null, __jsx(Typography, {\n    style: {\n      fontSize: 12\n    }\n  }, \"Confirm your delete action by typing in the dashboard title below.\"), __jsx(Typography, {\n    style: {\n      fontSize: 8,\n      color: '#c0392b'\n    }\n  }, \"*Deleting this project will result in deleting all of its included pages\")) : __jsx(Typography, null, \"Confirm your delete action by typing in the dashboard title below.\"), __jsx(TextField, {\n    fullWidth: true,\n    label: \"Title\",\n    placeholder: dashboard.title\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6\n  }, __jsx(Button, {\n    fullWidth: true,\n    onClick: function onClick() {\n      setShowDelete(false);\n    }\n  }, \"Cancel\")), __jsx(Grid, {\n    item: true,\n    xs: 6\n  }, __jsx(Button, {\n    fullWidth: true,\n    style: {\n      backgroundColor: '#c0392b',\n      color: '#FFF'\n    }\n  }, \"Confirm Delete\")))) : __jsx(Button, {\n    fullWidth: true,\n    onClick: function onClick() {\n      setShowDelete(true);\n    },\n    style: {\n      marginTop: 10,\n      backgroundColor: '#c0392b',\n      color: \"#FFF\"\n    }\n  }, \"Delete Project\"));\n};\n\nexport default GeneralSettings;","map":null,"metadata":{},"sourceType":"module"}