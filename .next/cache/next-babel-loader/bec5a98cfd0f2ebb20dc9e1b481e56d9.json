{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-widget-settings-panel.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nimport { ConnectionSettings } from '../helpers';\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}));\n\nconst TableWidgetSettingsPanel = ({\n  widget,\n  handleSettingsClose,\n  isAdding,\n  onWidgetAdd\n}) => {\n  const classes = useStyles();\n  const {\n    0: connectionMethod,\n    1: setConnectionMethod\n  } = useState(!isAdding ? widget.config.connectionMethod : '');\n  const {\n    0: doc,\n    1: setDoc\n  } = useState(!isAdding ? widget.config.docId : '');\n  const {\n    0: datasource,\n    1: setDatasource\n  } = useState(!isAdding ? widget.dataSourceId : '');\n  const {\n    0: fields,\n    1: setFields\n  } = useState(!isAdding ? widget.config.fields : []);\n  const {\n    0: primaryKey,\n    1: setPrimaryKey\n  } = useState(!isAdding ? widget.config.primaryKey : null);\n  const {\n    0: isEditable,\n    1: setIsEditable\n  } = useState(isAdding ? false : widget.config.isEditable);\n  const {\n    0: isDeletable,\n    1: setIsDeletable\n  } = useState(isAdding ? false : widget.config.isDeletable);\n  const {\n    0: isAddable,\n    1: setIsAddable\n  } = useState(isAdding ? false : widget.config.isAddable);\n  const {\n    0: url,\n    1: setURL\n  } = useState(isAdding ? '' : widget.config.url);\n  const {\n    0: headers,\n    1: setHeaders\n  } = useState(isAdding ? {} : widget.config.headers || {});\n  const {\n    0: method,\n    1: setMethod\n  } = useState(isAdding ? '' : widget.config.method);\n  const {\n    0: body,\n    1: setBody\n  } = useState(isAdding ? {} : widget.config.body || {});\n  const {\n    0: query,\n    1: setQuery\n  } = useState(isAdding ? {} : widget.config.query || {});\n\n  const saveConfigSettings = async () => {\n    try {\n      const data = {\n        dataSourceId: datasource,\n        config: {\n          docId: doc,\n          fields,\n          type: 'simple',\n          func: 'find',\n          query: {},\n          isEditable,\n          isDeletable,\n          isAddable,\n          primaryKey,\n          connectionMethod,\n          url,\n          headers,\n          method,\n          body,\n          query\n        },\n        type: 'Table'\n      };\n\n      if (isAdding) {\n        onWidgetAdd(data);\n      } else {\n        const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data);\n        handleSettingsClose(update);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Widget Properties\")), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, __jsx(InputLabel, {\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Title\"), __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: isEditable,\n      onChange: event => {\n        setIsEditable(event.target.checked);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }),\n    label: \"Allow Edit?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: isDeletable,\n      onChange: event => {\n        setIsDeletable(event.target.checked);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }),\n    label: \"Allow Delete?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: isAddable,\n      onChange: event => {\n        setIsAddable(event.target.checked);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }),\n    label: \"Allow Add?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })), __jsx(ConnectionSettings, {\n    isAdding: isAdding,\n    connectionMethod: connectionMethod,\n    setConnectionMethod: setConnectionMethod,\n    setDoc: setDoc,\n    setDatasource: setDatasource,\n    setFields: setFields,\n    doc: doc,\n    datasource: datasource,\n    fields: fields,\n    primaryKey: primaryKey,\n    setPrimaryKey: setPrimaryKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    fullWidth: true,\n    className: classes.formControl,\n    onClick: saveConfigSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, isAdding ? 'Add' : 'Save'));\n};\n\nexport default TableWidgetSettingsPanel;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-widget-settings-panel.jsx"],"names":["useState","useEffect","makeStyles","Button","InputLabel","FormControl","Input","FormControlLabel","Checkbox","WidgetSettingsActions","ConnectionSettings","useStyles","theme","list","width","paddingLeft","paddingRight","paddingTop","h2","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","formControl","TableWidgetSettingsPanel","widget","handleSettingsClose","isAdding","onWidgetAdd","classes","connectionMethod","setConnectionMethod","config","doc","setDoc","docId","datasource","setDatasource","dataSourceId","fields","setFields","primaryKey","setPrimaryKey","isEditable","setIsEditable","isDeletable","setIsDeletable","isAddable","setIsAddable","url","setURL","headers","setHeaders","method","setMethod","body","setBody","query","setQuery","saveConfigSettings","data","type","func","update","updateWidgetSettings","id","e","console","log","event","target","checked"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\nimport { ConnectionSettings } from '../helpers'\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 500,\n    paddingLeft: \"15px\",\n    paddingRight: \"15px\",\n    paddingTop: \"15px\"\n  },\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  formControl: {\n    marginTop: \"15px\"\n  }\n}))\n\nconst TableWidgetSettingsPanel = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\n  const classes = useStyles()\n  const [connectionMethod, setConnectionMethod] = useState(!isAdding ? widget.config.connectionMethod : '')\n  const [doc, setDoc] = useState(!isAdding ? widget.config.docId : '')\n  const [datasource, setDatasource] = useState(!isAdding ? widget.dataSourceId : '')\n  const [fields, setFields] = useState(!isAdding ? widget.config.fields : [])\n  const [primaryKey, setPrimaryKey] = useState(!isAdding ? widget.config.primaryKey : null)\n  const [isEditable, setIsEditable] = useState(isAdding ? false : widget.config.isEditable)\n  const [isDeletable, setIsDeletable] = useState(isAdding ? false : widget.config.isDeletable)\n  const [isAddable, setIsAddable] = useState(isAdding ? false : widget.config.isAddable)\n\n  const [url, setURL] = useState(isAdding ? '' : widget.config.url)\n  const [headers, setHeaders] = useState(isAdding ? {} : widget.config.headers || {})\n  const [method, setMethod] = useState(isAdding ? '' : widget.config.method)\n  const [body, setBody] = useState(isAdding ? {} : widget.config.body || {})\n  const [query, setQuery] = useState(isAdding ? {} : widget.config.query || {})\n\n  const saveConfigSettings = async () => {\n    try {\n      const data = {\n        dataSourceId: datasource,\n        config: {\n          docId: doc,\n          fields,\n          type: 'simple',\n          func: 'find',\n          query: {},\n          isEditable,\n          isDeletable,\n          isAddable,\n          primaryKey,\n          connectionMethod,\n          url,\n          headers,\n          method,\n          body,\n          query\n        },\n        type: 'Table'\n      }\n      if (isAdding) {\n        onWidgetAdd(data)\n      } else {\n        const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data)\n        handleSettingsClose(update)\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  return (\n    <div>\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Widget Properties</span>\n      </h2>\n      <FormControl fullWidth className={classes.formControl}>\n        <InputLabel id='title'>Title</InputLabel>\n        <Input />\n      </FormControl>\n      <div style={{ marginTop: 20 }}>\n        <FormControlLabel\n          control={\n            <Checkbox checked={isEditable} onChange={event => { setIsEditable(event.target.checked) }} />\n          }\n          label=\"Allow Edit?\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox checked={isDeletable} onChange={event => { setIsDeletable(event.target.checked) }} />\n          }\n          label=\"Allow Delete?\"\n        />\n        <FormControlLabel\n          control={\n            <Checkbox checked={isAddable} onChange={event => { setIsAddable(event.target.checked) }} />\n          }\n          label=\"Allow Add?\"\n        />\n      </div>\n\n      <ConnectionSettings\n        isAdding={isAdding}\n        connectionMethod={connectionMethod}\n        setConnectionMethod={setConnectionMethod}\n        setDoc={setDoc}\n        setDatasource={setDatasource}\n        setFields={setFields}\n        doc={doc}\n        datasource={datasource}\n        fields={fields}\n        primaryKey={primaryKey}\n        setPrimaryKey={setPrimaryKey}\n      />\n\n      <Button fullWidth className={classes.formControl} onClick={saveConfigSettings}>{isAdding ? 'Add' : 'Save'}</Button>\n    </div>\n  )\n}\n\nexport default TableWidgetSettingsPanel"]},"metadata":{},"sourceType":"module"}