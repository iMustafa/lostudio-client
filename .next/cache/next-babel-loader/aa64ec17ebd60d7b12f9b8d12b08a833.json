{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-measure-conditions.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nimport { conditionCases } from '../../../helpers/measure-conditions';\nconst useStyles = makeStyles({\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  measureConditionFieldTitle: {\n    fontSize: 12,\n    fontWeight: 'bold'\n  }\n});\n\nconst TableMeasureConditions = ({\n  widget,\n  handleSettingsClose,\n  isAdding,\n  onWidgetAdd\n}) => {\n  const classes = useStyles();\n  const {\n    0: measureConditionsFields,\n    1: updateMeasureConditionsFields\n  } = useState({\n    expression: null,\n    minValue: 0,\n    maxValue: 0,\n    field: null,\n    color: null\n  });\n  const {\n    0: isAddingMeasureCondition,\n    1: setIsAddingMeasureCondition\n  } = useState(false);\n  const {\n    0: fields,\n    1: setFields\n  } = useState(widget.config.fields);\n  const {\n    0: measureConditions,\n    1: setMeasureConditions\n  } = useState([]);\n  const widgetId = widget.id;\n  useEffect(() => {\n    const getMeasureConditions = async () => {\n      try {\n        const $measureConditions = await WidgetSettingsActions.getWidgetSettingsMeasureConditions(widgetId);\n        console.log($measureConditions);\n        setMeasureConditions($measureConditions);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    getMeasureConditions();\n    console.log(fields);\n  }, []);\n\n  const addMeasureCondition = async () => {\n    try {\n      const measureCondition = await WidgetSettingsActions.createWidgetSettingsMeasureConditions(widgetId, {});\n      console.log(measureCondition);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const removeMeasureCondition = async measureConditionId => {\n    try {\n      const measureCondition = await WidgetSettingsActions.deleteWidgetSettingsMeasureConditions(widgetId, measureConditionId);\n      console.log(measureCondition);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = event => {\n    console.log(event);\n  };\n\n  const renderAddMeasureCondition = () => isAddingMeasureCondition ? __jsx(Card, {\n    style: {\n      padding: 15,\n      marginBottom: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, __jsx(InputLabel, {\n    id: \"field-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Field\"), __jsx(Select, {\n    fullWidth: true,\n    labelId: \"field-select-label\",\n    value: measureConditionsFields.field,\n    onChange: handleChange,\n    name: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, fields.map(field => __jsx(MenuItem, {\n    key: field,\n    value: field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 36\n    }\n  }, field))))), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, __jsx(InputLabel, {\n    id: \"expression-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Expression\"), __jsx(Select, {\n    fullWidth: true,\n    labelId: \"expression-select-label\",\n    value: measureConditionsFields.expression,\n    onChange: handleChange,\n    name: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, conditionCases.map(conditionCase => __jsx(MenuItem, {\n    key: conditionCase.title,\n    value: conditionCase.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 52\n    }\n  }, conditionCase.friendlyName))))), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Color Select\"))), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    fullWidth: true,\n    type: \"number\",\n    label: \"Minimum Value\",\n    name: \"minValue\",\n    value: measureConditionsFields.minValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    fullWidth: true,\n    type: \"number\",\n    label: \"Maximum Value\",\n    name: \"minValue\",\n    value: measureConditionsFields.maxValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    fullWidth: true,\n    onClick: () => {\n      setIsAddingMeasureCondition(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, __jsx(CancelIcon, {\n    style: {\n      color: '#F00'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), __jsx(Typography, {\n    style: {\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Cancel\"))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, __jsx(SaveIcon, {\n    style: {\n      color: '#3F51B5'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), __jsx(Typography, {\n    style: {\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Save\"))))) : __jsx(Button, {\n    fullWidth: true,\n    style: {\n      marginBottom: 15\n    },\n    onClick: () => {\n      setIsAddingMeasureCondition(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, \"Add Measure Condition\");\n\n  const renderMeasureCondition = measureCondition => __jsx(Card, {\n    style: {\n      padding: 15,\n      marginBottom: 15\n    },\n    key: measureCondition.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    className: classes.measureConditionFieldTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"Field\"), __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, measureCondition.field)), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    className: classes.measureConditionFieldTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, \"Expression\"), __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, measureCondition.expression)), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    className: classes.measureConditionFieldTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, \"Color\"), __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, measureCondition.color))), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, __jsx(ArrowUpwardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, measureCondition.minValue)), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, __jsx(ArrowDownwardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, measureCondition.maxValue))), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, __jsx(EditIcon, {\n    style: {\n      color: '#3F51B5'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }), __jsx(Typography, {\n    style: {\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, \"Edit\"))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, __jsx(DeleteIcon, {\n    style: {\n      color: '#F00'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }), __jsx(Typography, {\n    style: {\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, \"Delete\")))));\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: classes.h2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: classes.span,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, \"Measure Conditions\")), renderAddMeasureCondition(), measureConditions.map(measureCondition => renderMeasureCondition(measureCondition)));\n};\n\nexport default TableMeasureConditions;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/widgets/table/table-measure-conditions.jsx"],"names":["useState","useEffect","makeStyles","Grid","Card","Button","InputLabel","Select","MenuItem","FormControl","TextField","Typography","ArrowUpwardIcon","ArrowDownwardIcon","EditIcon","DeleteIcon","SaveIcon","CancelIcon","WidgetSettingsActions","conditionCases","useStyles","h2","width","textAlign","borderBottom","lineHeight","marginTop","marginBottom","fontFamily","fontSize","color","span","background","padding","measureConditionFieldTitle","fontWeight","TableMeasureConditions","widget","handleSettingsClose","isAdding","onWidgetAdd","classes","measureConditionsFields","updateMeasureConditionsFields","expression","minValue","maxValue","field","isAddingMeasureCondition","setIsAddingMeasureCondition","fields","setFields","config","measureConditions","setMeasureConditions","widgetId","id","getMeasureConditions","$measureConditions","getWidgetSettingsMeasureConditions","console","log","e","addMeasureCondition","measureCondition","createWidgetSettingsMeasureConditions","removeMeasureCondition","measureConditionId","deleteWidgetSettingsMeasureConditions","handleChange","event","renderAddMeasureCondition","map","conditionCase","title","friendlyName","marginLeft","renderMeasureCondition","display","justifyContent","alignContent","alignItems"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport Button from '@material-ui/core/Button'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\nimport EditIcon from '@material-ui/icons/Edit'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\nimport { conditionCases } from '../../../helpers/measure-conditions'\n\nconst useStyles = makeStyles({\n  h2: {\n    width: '100%',\n    textAlign: 'center',\n    borderBottom: '1px solid #000',\n    lineHeight: '0.1em',\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n    fontFamily: 'Roboto',\n    fontSize: '13px',\n    color: \"#3F51B5\"\n  },\n  span: {\n    background: '#fff',\n    padding: '0 10px'\n  },\n  measureConditionFieldTitle: {\n    fontSize: 12,\n    fontWeight: 'bold'\n  }\n})\n\nconst TableMeasureConditions = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\n  const classes = useStyles()\n  const [measureConditionsFields, updateMeasureConditionsFields] = useState({\n    expression: null, minValue: 0, maxValue: 0, field: null, color: null\n  })\n  const [isAddingMeasureCondition, setIsAddingMeasureCondition] = useState(false)\n  const [fields, setFields] = useState(widget.config.fields)\n  const [measureConditions, setMeasureConditions] = useState([])\n  const widgetId = widget.id\n\n  useEffect(() => {\n    const getMeasureConditions = async () => {\n      try {\n        const $measureConditions = await WidgetSettingsActions.getWidgetSettingsMeasureConditions(widgetId)\n        console.log($measureConditions)\n        setMeasureConditions($measureConditions)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    getMeasureConditions()\n    console.log(fields)\n  }, [])\n\n  const addMeasureCondition = async () => {\n    try {\n      const measureCondition = await WidgetSettingsActions.createWidgetSettingsMeasureConditions(\n        widgetId,\n        {}\n      )\n      console.log(measureCondition)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const removeMeasureCondition = async (measureConditionId) => {\n    try {\n      const measureCondition = await WidgetSettingsActions.deleteWidgetSettingsMeasureConditions(widgetId, measureConditionId)\n      console.log(measureCondition)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const handleChange = (event) => {\n    console.log(event)\n  }\n\n  const renderAddMeasureCondition = () => isAddingMeasureCondition ? (\n    <Card style={{ padding: 15, marginBottom: 15 }}>\n      <Grid container spacing={0}>\n        <Grid item xs={4}>\n          <FormControl fullWidth>\n            <InputLabel id=\"field-select-label\">Field</InputLabel>\n            <Select\n              fullWidth\n              labelId=\"field-select-label\"\n              value={measureConditionsFields.field}\n              onChange={handleChange}\n              name=\"field\"\n            >\n              {fields.map(field => <MenuItem key={field} value={field}>{field}</MenuItem>)}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={4}>\n          <FormControl fullWidth>\n            <InputLabel id=\"expression-select-label\">Expression</InputLabel>\n            <Select\n              fullWidth\n              labelId=\"expression-select-label\"\n              value={measureConditionsFields.expression}\n              onChange={handleChange}\n              name=\"field\"\n            >\n              {conditionCases.map(conditionCase => <MenuItem key={conditionCase.title} value={conditionCase.title}>{conditionCase.friendlyName}</MenuItem>)}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography>Color Select</Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={0} style={{ marginTop: 15 }}>\n        <Grid item xs={6}>\n          <TextField\n            fullWidth\n            type=\"number\"\n            label=\"Minimum Value\"\n            name=\"minValue\"\n            value={measureConditionsFields.minValue}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            fullWidth\n            type=\"number\"\n            label=\"Maximum Value\"\n            name=\"minValue\"\n            value={measureConditionsFields.maxValue}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={0} style={{ marginTop: 15 }}>\n        <Grid item xs={6}>\n          <Button fullWidth onClick={() => { setIsAddingMeasureCondition(false) }}>\n            <CancelIcon style={{ color: '#F00' }} />\n            <Typography style={{ marginLeft: 10 }}>Cancel</Typography>\n          </Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Button fullWidth>\n            <SaveIcon style={{ color: '#3F51B5' }} />\n            <Typography style={{ marginLeft: 10 }}>Save</Typography>\n          </Button>\n        </Grid>\n      </Grid>\n    </Card>\n  ) : (\n      <Button fullWidth style={{ marginBottom: 15 }} onClick={() => { setIsAddingMeasureCondition(true) }}>Add Measure Condition</Button>\n    )\n\n  const renderMeasureCondition = (measureCondition) => (\n    <Card style={{ padding: 15, marginBottom: 15 }} key={measureCondition.id}>\n      <Grid container spacing={0}>\n        <Grid item xs={4}>\n          <Typography className={classes.measureConditionFieldTitle}>Field</Typography>\n          <Typography>{measureCondition.field}</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography className={classes.measureConditionFieldTitle}>Expression</Typography>\n          <Typography>{measureCondition.expression}</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography className={classes.measureConditionFieldTitle}>Color</Typography>\n          <Typography>{measureCondition.color}</Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={0} style={{ marginTop: 15 }}>\n        <Grid item xs={6} style={{ display: 'flex', justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\n          <ArrowUpwardIcon />\n          <span>{measureCondition.minValue}</span>\n        </Grid>\n        <Grid item xs={6} style={{ display: 'flex', justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\n          <ArrowDownwardIcon />\n          <span>{measureCondition.maxValue}</span>\n        </Grid>\n      </Grid>\n      <Grid container spacing={0} style={{ marginTop: 15 }}>\n        <Grid item xs={6}>\n          <Button fullWidth>\n            <EditIcon style={{ color: '#3F51B5' }} />\n            <Typography style={{ marginLeft: 10 }}>Edit</Typography>\n          </Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Button fullWidth>\n            <DeleteIcon style={{ color: '#F00' }} />\n            <Typography style={{ marginLeft: 10 }}>Delete</Typography>\n          </Button>\n        </Grid>\n      </Grid>\n    </Card>\n  )\n\n  return (\n    <div>\n      <h2 className={classes.h2}>\n        <span className={classes.span}>Measure Conditions</span>\n      </h2>\n      {renderAddMeasureCondition()}\n      {\n        measureConditions.map(measureCondition => renderMeasureCondition(measureCondition))\n      }\n    </div>\n  )\n}\n\nexport default TableMeasureConditions"]},"metadata":{},"sourceType":"module"}