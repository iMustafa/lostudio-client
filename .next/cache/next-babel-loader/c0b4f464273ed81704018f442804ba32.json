{"ast":null,"code":"var _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/components/SideMenu.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { userEffect, useState } from \"react\";\nimport Router from \"next/router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport WebIcon from \"@material-ui/icons/Web\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport DashboardActions from '../actions/dashboard.actions';\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\n\nconst SideMenu = () => {\n  const classes = useStyles();\n  const {\n    0: dashboards,\n    1: setDashboards\n  } = useState([]);\n  const {\n    0: webPages,\n    1: setWebPages\n  } = useState([]);\n  const {\n    0: refresh,\n    1: setRefresh\n  } = useState(0);\n  useEffect(() => {\n    const udpateView = async () => {\n      try {\n        const GetDashboards = await DashboardActions.getDashboards({});\n        const GetWebPages = await DashboardActions.getWebpages({});\n        console.log(GetDashboards);\n        console.log(GetWebPages);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    udpateView();\n  }, [refresh]);\n  const routes = [{\n    key: \"dashboards\",\n    text: \"Dashboards\",\n    route: \"/dashboards\",\n    icon: () => __jsx(DashboardIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    })\n  }, {\n    key: \"datasources\",\n    text: \"Data Sources\",\n    route: \"/datasources\",\n    icon: () => __jsx(StorageIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    })\n  }, {\n    key: \"webpages\",\n    text: \"Web Pages\",\n    route: \"/webpages\",\n    icon: () => __jsx(WebIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    })\n  }, {\n    key: \"widgets\",\n    text: \"Widgets\",\n    route: \"/widgets\",\n    icon: () => __jsx(AssessmentIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    })\n  }];\n  return __jsx(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, routes.map((item, index) => __jsx(ListItem, {\n    button: true,\n    key: item.key,\n    onClick: () => {\n      Router.push(item.route);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, __jsx(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, item.icon()), __jsx(ListItemText, {\n    primary: item.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default SideMenu;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/SideMenu.jsx"],"names":["userEffect","useState","Router","makeStyles","List","ListItem","ListItemIcon","ListItemText","Divider","WebIcon","DashboardIcon","StorageIcon","AssessmentIcon","DashboardActions","useStyles","list","width","fullList","SideMenu","classes","dashboards","setDashboards","webPages","setWebPages","refresh","setRefresh","useEffect","udpateView","GetDashboards","getDashboards","GetWebPages","getWebpages","console","log","e","routes","key","text","route","icon","map","item","index","push"],"mappings":"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","sourcesContent":["import { userEffect, useState } from \"react\";\nimport Router from \"next/router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport WebIcon from \"@material-ui/icons/Web\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport DashboardActions from '../actions/dashboard.actions'\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\n\nconst SideMenu = () => {\n  const classes = useStyles();\n  const [dashboards, setDashboards] = useState([])\n  const [webPages, setWebPages] = useState([])\n  const [refresh, setRefresh] = useState(0)\n\n  useEffect(() => {\n    const udpateView = async () => {\n      try {\n        const GetDashboards = await DashboardActions.getDashboards({})\n        const GetWebPages = await DashboardActions.getWebpages({})\n        console.log(GetDashboards)\n        console.log(GetWebPages)\n      } catch(e) {\n        console.log(e)\n      }\n    }\n    udpateView()\n  }, [refresh])\n\n  const routes = [\n    {\n      key: \"dashboards\",\n      text: \"Dashboards\",\n      route: \"/dashboards\",\n      icon: () => <DashboardIcon />,\n    },\n    {\n      key: \"datasources\",\n      text: \"Data Sources\",\n      route: \"/datasources\",\n      icon: () => <StorageIcon />,\n    },\n    {\n      key: \"webpages\",\n      text: \"Web Pages\",\n      route: \"/webpages\",\n      icon: () => <WebIcon />,\n    },\n    {\n      key: \"widgets\",\n      text: \"Widgets\",\n      route: \"/widgets\",\n      icon: () => <AssessmentIcon />,\n    },\n  ];\n\n  return (\n    <div className={classes.list} role=\"presentation\">\n      <List>\n        {routes.map((item, index) => (\n          <ListItem\n            button\n            key={item.key}\n            onClick={() => {\n              Router.push(item.route);\n            }}\n          >\n            <ListItemIcon>{item.icon()}</ListItemIcon>\n            <ListItemText primary={item.text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n}\n\nexport default SideMenu"]},"metadata":{},"sourceType":"module"}