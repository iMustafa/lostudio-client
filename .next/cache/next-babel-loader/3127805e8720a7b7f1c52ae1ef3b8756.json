{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions';\nvar useStyles = makeStyles(function (theme) {\n  return {};\n});\n\nvar AutoCompleteWidget = function AutoCompleteWidget(_ref) {\n  var widgetId = _ref.widgetId;\n  var classes = useStyles();\n\n  var _useState = useState({\n    properties: {},\n    config: {\n      fields: []\n    }\n  }),\n      widget = _useState[0],\n      setWidget = _useState[1];\n\n  var _useState2 = useState([]),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState({\n    right: false\n  }),\n      menuState = _useState3[0],\n      setMenuState = _useState3[1];\n\n  useEffect(function () {\n    var getData = function getData() {\n      var $widget, $data;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(WidgetSettingsActions.getWidgetSettingsById(widgetId));\n\n            case 3:\n              $widget = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(WidgetSettingsActions.executeWidgetQuery(widgetId));\n\n            case 6:\n              $data = _context.sent;\n              setWidget($widget);\n              setData($data);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    };\n\n    getData();\n  }, []);\n  return __jsx(Autocomplete, {\n    id: widget.properties.id,\n    placeholder: widget.properties.placeholder,\n    className: widget.properties.className,\n    value: widget.properties.value,\n    options: data,\n    getOptionLabel: function getOptionLabel(option) {\n      return option[widget.config.fields[0]];\n    },\n    fullWidth: true,\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({\n        fullWidth: true,\n        name: widget.properties.name\n      }, params, {\n        label: widget.properties.label\n      }));\n    }\n  });\n};\n\nexport default AutoCompleteWidget;","map":null,"metadata":{},"sourceType":"module"}