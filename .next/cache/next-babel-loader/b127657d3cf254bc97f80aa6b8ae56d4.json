{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, ArgumentAxis, ValueAxis, AreaSeries, Title, Legend } from '@devexpress/dx-react-chart-material-ui';\nimport { ArgumentScale, Animation } from '@devexpress/dx-react-chart';\nimport { scalePoint } from 'd3-scale';\nimport { withStyles } from '@material-ui/core/styles';\nconst data = [{\n  year: '2010',\n  android: 67225,\n  ios: 46598\n}, {\n  year: '2011',\n  android: 179873,\n  ios: 90560\n}, {\n  year: '2012',\n  android: 310088,\n  ios: 118848\n}, {\n  year: '2015',\n  android: 539318,\n  ios: 189924\n}];\nconst chartRootStyles = {\n  chart: {\n    paddingRight: '20px'\n  }\n};\nconst legendStyles = {\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row'\n  }\n};\n\nconst legendLabelStyles = theme => ({\n  label: {\n    paddingTop: theme.spacing(1)\n  }\n});\n\nconst legendItemStyles = {\n  item: {\n    flexDirection: 'column'\n  }\n};\n\nconst ChartRootBase = (_ref) => {\n  let {\n    classes\n  } = _ref,\n      restProps = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  return __jsx(Chart.Root, _extends({}, restProps, {\n    className: classes.chart\n  }));\n};\n\nconst LegendRootBase = (_ref2) => {\n  let {\n    classes\n  } = _ref2,\n      restProps = _objectWithoutProperties(_ref2, [\"classes\"]);\n\n  return __jsx(Legend.Root, _extends({}, restProps, {\n    className: classes.root\n  }));\n};\n\nconst LegendLabelBase = (_ref3) => {\n  let {\n    classes\n  } = _ref3,\n      restProps = _objectWithoutProperties(_ref3, [\"classes\"]);\n\n  return __jsx(Legend.Label, _extends({}, restProps, {\n    className: classes.label\n  }));\n};\n\nconst LegendItemBase = (_ref4) => {\n  let {\n    classes\n  } = _ref4,\n      restProps = _objectWithoutProperties(_ref4, [\"classes\"]);\n\n  return __jsx(Legend.Item, _extends({}, restProps, {\n    className: classes.item\n  }));\n};\n\nconst ChartRoot = withStyles(chartRootStyles, {\n  name: 'ChartRoot'\n})(ChartRootBase);\nconst LegendRoot = withStyles(legendStyles, {\n  name: 'LegendRoot'\n})(LegendRootBase);\nconst LegendLabel = withStyles(legendLabelStyles, {\n  name: 'LegendLabel'\n})(LegendLabelBase);\nconst LegendItem = withStyles(legendItemStyles, {\n  name: 'LegendItem'\n})(LegendItemBase);\nexport default class Demo extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data\n    };\n  }\n\n  render() {\n    const {\n      data: chartData\n    } = this.state;\n    return __jsx(Paper, null, __jsx(Chart, {\n      data: chartData,\n      rootComponent: ChartRoot\n    }, __jsx(ArgumentScale, {\n      factory: scalePoint\n    }), __jsx(ArgumentAxis, null), __jsx(ValueAxis, null), __jsx(AreaSeries, {\n      name: \"Android\",\n      valueField: \"android\",\n      argumentField: \"year\"\n    }), __jsx(AreaSeries, {\n      name: \"iOS\",\n      valueField: \"ios\",\n      argumentField: \"year\"\n    }), __jsx(Animation, null), __jsx(Legend, {\n      position: \"bottom\",\n      rootComponent: LegendRoot,\n      itemComponent: LegendItem,\n      labelComponent: LegendLabel\n    }), __jsx(Title, {\n      text: \"Worldwide Sales to End Users by OS\"\n    })));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}