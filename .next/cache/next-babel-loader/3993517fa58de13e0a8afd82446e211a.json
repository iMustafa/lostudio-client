{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nvar _jsxFileName = \"F:\\\\Projects\\\\LoStudio\\\\client\\\\pages\\\\dashboards\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Cookies from 'next-cookies';\nimport DashboardActions from '../../actions/dashboard.actions';\nimport ListDashboards from '../../components/dashboards/list-dashboards';\n\nvar Dashboards = function Dashboards(Dashboard) {\n  var dashboards = _Object$values(Dashboard);\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    style: {\n      marginTop: \"25px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(ListDashboards, {\n    dashboards: dashboards,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n};\n\nDashboards.getInitialProps = function _callee(req) {\n  var Authorization, _Dashboards;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          Authorization = Cookies(req).id;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(DashboardActions.getDashboards({\n            Authorization: Authorization\n          }));\n\n        case 4:\n          _Dashboards = _context.sent;\n          return _context.abrupt(\"return\", _Dashboards);\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", []);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]]);\n};\n\nexport default Dashboards;","map":{"version":3,"sources":["F:/Projects/LoStudio/client/pages/dashboards/index.tsx"],"names":["Cookies","DashboardActions","ListDashboards","Dashboards","Dashboard","dashboards","marginTop","getInitialProps","req","Authorization","id","getDashboards"],"mappings":";;;;;AAEA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAEA,OAAOC,cAAP,MAA2B,6CAA3B;;AAEA,IAAMC,UAAsC,GAAG,SAAzCA,UAAyC,CAACC,SAAD,EAAiC;AAC9E,MAAMC,UAA4B,GAAG,eAAcD,SAAd,CAArC;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAE;AAAb,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,UAAU,EAAED,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CARD;;AAUAF,UAAU,CAACI,eAAX,GAA6B,iBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnBC,UAAAA,aAFmB,GAEHT,OAAO,CAACQ,GAAD,CAAP,CAAaE,EAFV;AAAA;AAAA,2CAGAT,gBAAgB,CAACU,aAAjB,CAA+B;AAAEF,YAAAA,aAAa,EAAbA;AAAF,WAA/B,CAHA;;AAAA;AAGnBN,UAAAA,WAHmB;AAAA,2CAIlBA,WAJkB;;AAAA;AAAA;AAAA;AAAA,2CAMlB,EANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AAUA,eAAeA,UAAf","sourcesContent":["import { NextPage } from 'next'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Cookies from 'next-cookies'\r\nimport DashboardActions from '../../actions/dashboard.actions'\r\nimport Dashboard from '../../types/dashboard.types'\r\nimport ListDashboards from '../../components/dashboards/list-dashboards'\r\n\r\nconst Dashboards: NextPage<Array<Dashboard>> = (Dashboard: Array<Dashboard>) => {\r\n  const dashboards: Array<Dashboard> = Object.values(Dashboard)\r\n\r\n  return (\r\n    <div className=\"container\" style={{ marginTop: \"25px\" }}>\r\n      <ListDashboards dashboards={dashboards}></ListDashboards>\r\n    </div>\r\n  )\r\n}\r\n\r\nDashboards.getInitialProps = async (req): Promise<Array<Dashboard>> => {\r\n  try {\r\n    const Authorization = Cookies(req).id\r\n    const Dashboards = await DashboardActions.getDashboards({ Authorization })\r\n    return Dashboards\r\n  } catch (e) {\r\n    return []\r\n  }\r\n}\r\n\r\nexport default Dashboards"]},"metadata":{},"sourceType":"module"}