{"ast":null,"code":"/**\n * Adds loadHtmltemplate command\n */\nimport axios from 'axios';\nimport { addWidget, updateWidget, getWidgets, getWidgetData } from './actions';\nimport { loadHtmltemplate } from \"./consts\";\nexport default ((editor, config) => {\n  const cm = editor.Commands;\n  cm.add(loadHtmltemplate, e => {\n    const pHtml = e.getModel().get('Parser').parserHtml; // JSX expression in attributes are quoted, so unquote them before passing on\n\n    let html = pHtml.unquoteJsxExpresionsInAttributes(e.getHtml());\n    config.setHtmlString(html);\n    config.setCssString(e.getCss());\n  });\n  cm.add('save-db', {\n    run: function (editor, sender) {\n      sender && sender.set('active');\n      editor.store();\n    }\n  });\n});","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/grapes/table-widgets/html-table-widget/commands.js"],"names":["axios","addWidget","updateWidget","getWidgets","getWidgetData","loadHtmltemplate","editor","config","cm","Commands","add","e","pHtml","getModel","get","parserHtml","html","unquoteJsxExpresionsInAttributes","getHtml","setHtmlString","setCssString","getCss","run","sender","set","store"],"mappings":"AAAA;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,YAFF,EAGEC,UAHF,EAIEC,aAJF,QAKO,WALP;AAMA,SAAQC,gBAAR,QAA+B,UAA/B;AAEA,gBAAe,CAACC,MAAD,EAASC,MAAT,KAAoB;AACjC,QAAMC,EAAE,GAAGF,MAAM,CAACG,QAAlB;AAEAD,EAAAA,EAAE,CAACE,GAAH,CAAOL,gBAAP,EAAyBM,CAAC,IAAI;AAC1B,UAAMC,KAAK,GAAGD,CAAC,CAACE,QAAF,GAAaC,GAAb,CAAiB,QAAjB,EAA2BC,UAAzC,CAD0B,CAE1B;;AACA,QAAIC,IAAI,GAAGJ,KAAK,CAACK,gCAAN,CAAuCN,CAAC,CAACO,OAAF,EAAvC,CAAX;AACAX,IAAAA,MAAM,CAACY,aAAP,CAAqBH,IAArB;AACAT,IAAAA,MAAM,CAACa,YAAP,CAAoBT,CAAC,CAACU,MAAF,EAApB;AACH,GAND;AAOAb,EAAAA,EAAE,CAACE,GAAH,CACG,SADH,EAEI;AACEY,IAAAA,GAAG,EAAE,UAAUhB,MAAV,EAAkBiB,MAAlB,EAA0B;AAC7BA,MAAAA,MAAM,IAAIA,MAAM,CAACC,GAAP,CAAW,QAAX,CAAV;AACAlB,MAAAA,MAAM,CAACmB,KAAP;AACD;AAJH,GAFJ;AAUD,CApBD","sourcesContent":["/**\n * Adds loadHtmltemplate command\n */\nimport axios from 'axios'\nimport {\n  addWidget,\n  updateWidget,\n  getWidgets,\n  getWidgetData\n} from './actions'\nimport {loadHtmltemplate} from \"./consts\";\n\nexport default (editor, config) => {\n  const cm = editor.Commands;\n\n  cm.add(loadHtmltemplate, e => {\n      const pHtml = e.getModel().get('Parser').parserHtml;\n      // JSX expression in attributes are quoted, so unquote them before passing on\n      let html = pHtml.unquoteJsxExpresionsInAttributes(e.getHtml());\n      config.setHtmlString(html);\n      config.setCssString(e.getCss());\n  });\n  cm.add\n    ('save-db',\n      {\n        run: function (editor, sender) {\n          sender && sender.set('active');\n          editor.store();\n        }\n      });\n \n  \n}\n"]},"metadata":{},"sourceType":"module"}