{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/imustafa/Projects/LoStudio/client/pages/dashboards/[id]/edit.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridLayout from 'react-grid-layout';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport ArrowLeft from '@material-ui/icons/ArrowLeft';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Drawer from '@material-ui/core/Drawer';\nimport DashboardActions from '../../../actions/dashboard.actions';\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions';\nimport WidgetSidemenu from '../../../components/dashboards/widgets-menu';\nimport DashboardSettings from '../../../components/dashboards/settings/dashboard-settings';\nimport { useRouter } from 'next/router';\nimport { decideWidgetSettings, decideWidget } from '../../../helpers/decide-widgets';\nvar useStyles = makeStyles({\n  list: {\n    width: 500\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\n\nvar EditDashboard = function EditDashboard() {\n  var classes = useStyles();\n  var router = useRouter();\n\n  var _useState = useState(router.query.id),\n      id = _useState[0],\n      setId = _useState[1];\n\n  var _useState2 = useState({\n    right: false,\n    addWidget: false,\n    settings: false\n  }),\n      menuState = _useState2[0],\n      setMenuState = _useState2[1];\n\n  var _useState3 = useState([]),\n      layout = _useState3[0],\n      setLayout = _useState3[1];\n\n  var _useState4 = useState(null),\n      addType = _useState4[0],\n      setAddType = _useState4[1];\n\n  var _useState5 = useState([]),\n      WidgetSettings = _useState5[0],\n      setWidgetSettings = _useState5[1];\n\n  var _useState6 = useState([]),\n      SubDashboards = _useState6[0],\n      setSubDashboards = _useState6[1];\n\n  var _useState7 = useState(0),\n      refresh = _useState7[0],\n      setRefresh = _useState7[1];\n\n  useEffect(function () {\n    var getProps = function getProps() {\n      var dashboard, $SubDashboards, $WidgetSettings;\n      return _regeneratorRuntime.async(function getProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(DashboardActions.getDashboardById(id));\n\n            case 3:\n              dashboard = _context.sent;\n\n              if (dashboard.isSub) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(DashboardActions.getSubDashboards({\n                id: id\n              }));\n\n            case 7:\n              $SubDashboards = _context.sent;\n              setSubDashboards($SubDashboards);\n\n            case 9:\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(DashboardActions.getWidgetSettings({\n                id: id\n              }));\n\n            case 11:\n              $WidgetSettings = _context.sent;\n              setLayout($WidgetSettings);\n              setWidgetSettings($WidgetSettings);\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 16]], Promise);\n    };\n\n    getProps();\n  }, [id, refresh]);\n\n  var onLayoutChange = function onLayoutChange($event) {\n    var layouts;\n    return _regeneratorRuntime.async(function onLayoutChange$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            layouts = layout.map(function (item) {\n              var $eventItem = $event.filter(function ($item) {\n                return $item.i == item.layout.i;\n              })[0];\n              return _objectSpread({}, item, {\n                layout: $eventItem\n              });\n            });\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(Promise.all(layouts.map(function (item) {\n              return WidgetSettingsActions.updateWidgetSettings(item.id, item);\n            })));\n\n          case 4:\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var toggleDrawer = function toggleDrawer(side, open) {\n    return function (event) {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) return;\n      setMenuState(_objectSpread({}, menuState, _defineProperty({}, side, open)));\n    };\n  };\n\n  var addPredefinedWidget = function addPredefinedWidget(widget, _) {\n    var $widget, saveWidget;\n    return _regeneratorRuntime.async(function addPredefinedWidget$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            $widget = _objectSpread({}, widget);\n            delete $widget.id;\n            delete $widget.icon;\n            $widget.layout.i = uuidv4();\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.createWidgetSettings($widget));\n\n          case 7:\n            saveWidget = _context3.sent;\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(DashboardActions.addWidgetToDashboard(id, saveWidget.id));\n\n          case 10:\n            setLayout([].concat(_toConsumableArray(layout), [{\n              layout: $widget.layout,\n              type: $widget.type\n            }]));\n            _context3.next = 16;\n            break;\n\n          case 13:\n            _context3.prev = 13;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n\n  var onWidgetAdd = function onWidgetAdd(config) {\n    var isFormControl,\n        widgetSettingsId,\n        layoutItem,\n        saveWidget,\n        linkWidget,\n        _saveWidget,\n        _linkWidget,\n        _args4 = arguments;\n\n    return _regeneratorRuntime.async(function onWidgetAdd$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            isFormControl = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : false;\n            widgetSettingsId = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : null;\n            _context4.prev = 2;\n            layoutItem = _objectSpread({\n              layout: {\n                i: uuidv4(),\n                x: 0,\n                y: 0,\n                w: 6,\n                h: 11,\n                maxW: 16,\n                isDraggable: true,\n                isResizable: true\n              }\n            }, config);\n\n            if (!widgetSettingsId) {\n              _context4.next = 14;\n              break;\n            }\n\n            delete layoutItem.layout;\n            _context4.next = 8;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.createWidgetSettings(layoutItem));\n\n          case 8:\n            saveWidget = _context4.sent;\n            _context4.next = 11;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.createSubWidget(widgetSettingsId, saveWidget.id));\n\n          case 11:\n            linkWidget = _context4.sent;\n            _context4.next = 22;\n            break;\n\n          case 14:\n            _context4.next = 16;\n            return _regeneratorRuntime.awrap(WidgetSettingsActions.createWidgetSettings(layoutItem));\n\n          case 16:\n            _saveWidget = _context4.sent;\n            _context4.next = 19;\n            return _regeneratorRuntime.awrap(DashboardActions.addWidgetToDashboard(id, _saveWidget.id));\n\n          case 19:\n            _linkWidget = _context4.sent;\n            layoutItem.id = _saveWidget.id;\n            setLayout([].concat(_toConsumableArray(layout), [layoutItem]));\n\n          case 22:\n            _context4.next = 27;\n            break;\n\n          case 24:\n            _context4.prev = 24;\n            _context4.t0 = _context4[\"catch\"](2);\n            console.log(_context4.t0);\n\n          case 27:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[2, 24]], Promise);\n  };\n\n  var addWidget = function addWidget(type, _) {\n    return _regeneratorRuntime.async(function addWidget$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            setAddType(type);\n            setMenuState(_objectSpread({}, menuState, {\n              addWidget: true,\n              right: false\n            }));\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var sideList = function sideList() {\n    return __jsx(\"div\", {\n      className: classes.list,\n      role: \"presentation\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }\n    }, __jsx(WidgetSidemenu, {\n      onWidgetClick: addWidget,\n      addPredefinedWidget: addPredefinedWidget,\n      widgetSettings: Object.values(WidgetSettings),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  var renderWidgets = function renderWidgets() {\n    return layout.map(function (item, i) {\n      return __jsx(\"div\", {\n        key: item.layout.i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 5\n        }\n      }, decideWidget(item));\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, __jsx(Drawer, {\n    anchor: \"right\",\n    open: menuState.right,\n    onClose: toggleDrawer('right', false),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, sideList()), __jsx(Drawer, {\n    anchor: \"right\",\n    open: menuState.addWidget,\n    onClose: toggleDrawer('addWidget', false),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, decideWidgetSettings(addType, onWidgetAdd)), __jsx(Drawer, {\n    anchor: \"right\",\n    open: menuState.settings,\n    onClose: toggleDrawer('settings', false),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, __jsx(DashboardSettings, {\n    id: id,\n    refresh: refresh,\n    setRefresh: setRefresh,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  })), __jsx(Card, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    onClick: function onClick() {\n      router.back();\n    },\n    \"aria-label\": \"back\",\n    size: \"medium\",\n    style: {\n      outline: 'none'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, __jsx(ArrowLeft, {\n    fontSize: \"default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      maxWidth: 700,\n      overflowX: 'scroll',\n      alignItems: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      setId(router.query.id);\n    },\n    style: {\n      marginLeft: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"Main\"), SubDashboards.map(function (subDashboard) {\n    return __jsx(Button, {\n      key: subDashboard.subDashboardId,\n      onClick: function onClick() {\n        setId(subDashboard.subDashboardId);\n      },\n      style: {\n        marginLeft: 10,\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, subDashboard.subDashboard.title);\n  })), __jsx(\"div\", {\n    style: {\n      justifySelf: 'flex-end',\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'flex-end',\n      paddingRight: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    style: {\n      outline: 'none'\n    },\n    size: \"small\",\n    startIcon: __jsx(SaveIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 71\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, \"Save\"), __jsx(Button, {\n    style: {\n      marginLeft: '10px',\n      outline: 'none'\n    },\n    size: \"small\",\n    onClick: toggleDrawer('right', true),\n    startIcon: __jsx(DashboardIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 129\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \"Widgets\"), __jsx(Button, {\n    style: {\n      marginLeft: '10px',\n      outline: 'none'\n    },\n    size: \"small\",\n    onClick: toggleDrawer('settings', true),\n    startIcon: __jsx(SettingsIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 132\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \"Settings\"))), __jsx(\"div\", {\n    style: {\n      paddingBottom: '15px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, __jsx(GridLayout, {\n    className: \"layout\",\n    cols: 16,\n    rowHeight: 30,\n    width: 1920,\n    layout: layout.map(function (item) {\n      return item.layout;\n    }),\n    onLayoutChange: onLayoutChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, renderWidgets())));\n}; // EditDashboard.getInitialProps = async (req) => {\n//   const Authorization = Cookies(req).id\n//   const { id } = req.query\n//   const WidgetSettings = await DashboardActions.getWidgetSettings({ Authorization, id })\n//   const SubDashboards = await DashboardActions.getSubDashboards({ Authorization, id })\n//   return { WidgetSettings, SubDashboards }\n// }\n\n\nexport default EditDashboard;","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/pages/dashboards/[id]/edit.jsx"],"names":["useState","useEffect","v4","uuidv4","makeStyles","GridLayout","IconButton","Button","Card","ArrowLeft","SaveIcon","DashboardIcon","SettingsIcon","Drawer","DashboardActions","WidgetSettingsActions","WidgetSidemenu","DashboardSettings","useRouter","decideWidgetSettings","decideWidget","useStyles","list","width","fullList","EditDashboard","classes","router","query","id","setId","right","addWidget","settings","menuState","setMenuState","layout","setLayout","addType","setAddType","WidgetSettings","setWidgetSettings","SubDashboards","setSubDashboards","refresh","setRefresh","getProps","getDashboardById","dashboard","isSub","getSubDashboards","$SubDashboards","getWidgetSettings","$WidgetSettings","console","log","onLayoutChange","$event","layouts","map","item","$eventItem","filter","$item","i","Promise","all","updateWidgetSettings","toggleDrawer","side","open","event","type","key","addPredefinedWidget","widget","_","$widget","icon","createWidgetSettings","saveWidget","addWidgetToDashboard","onWidgetAdd","config","isFormControl","widgetSettingsId","layoutItem","x","y","w","h","maxW","isDraggable","isResizable","createSubWidget","linkWidget","sideList","Object","values","renderWidgets","display","flexDirection","back","outline","maxWidth","overflowX","alignItems","marginLeft","subDashboard","subDashboardId","flex","title","justifySelf","justifyContent","paddingRight","paddingBottom"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport GridLayout from 'react-grid-layout'\nimport IconButton from '@material-ui/core/IconButton'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport ArrowLeft from '@material-ui/icons/ArrowLeft'\nimport SaveIcon from '@material-ui/icons/Save'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport Drawer from '@material-ui/core/Drawer'\nimport DashboardActions from '../../../actions/dashboard.actions'\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\nimport WidgetSidemenu from '../../../components/dashboards/widgets-menu'\nimport DashboardSettings from '../../../components/dashboards/settings/dashboard-settings'\nimport { useRouter } from 'next/router'\nimport { decideWidgetSettings, decideWidget } from '../../../helpers/decide-widgets'\n\nconst useStyles = makeStyles({\n  list: {\n    width: 500\n  },\n  fullList: {\n    width: 'auto'\n  }\n})\n\nconst EditDashboard = () => {\n  const classes = useStyles()\n  const router = useRouter()\n  const [id, setId] = useState(router.query.id)\n  const [menuState, setMenuState] = useState({ right: false, addWidget: false, settings: false })\n  const [layout, setLayout] = useState([])\n  const [addType, setAddType] = useState(null)\n  const [WidgetSettings, setWidgetSettings] = useState([])\n  const [SubDashboards, setSubDashboards] = useState([])\n  const [refresh, setRefresh] = useState(0)\n\n  useEffect(() => {\n    const getProps = async () => {\n      try {\n        const dashboard = await DashboardActions.getDashboardById(id)\n        if (!dashboard.isSub) {\n          const $SubDashboards = await DashboardActions.getSubDashboards({ id })\n          setSubDashboards($SubDashboards)\n        }\n        const $WidgetSettings = await DashboardActions.getWidgetSettings({ id })\n        setLayout($WidgetSettings)\n        setWidgetSettings($WidgetSettings)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    getProps()\n  }, [id, refresh])\n\n  const onLayoutChange = async ($event) => {\n    try {\n      const layouts = layout.map(item => {\n        const $eventItem = $event.filter($item => $item.i == item.layout.i)[0]\n        return { ...item, layout: $eventItem }\n      })\n      await Promise.all(layouts.map(item => WidgetSettingsActions.updateWidgetSettings(item.id, item)))\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift'))\n      return\n\n    setMenuState({ ...menuState, [side]: open })\n  }\n\n  const addPredefinedWidget = async (widget, _) => {\n    try {\n      const $widget = { ...widget }\n      delete $widget.id; delete $widget.icon\n      $widget.layout.i = uuidv4()\n      const saveWidget = await WidgetSettingsActions.createWidgetSettings($widget)\n      await DashboardActions.addWidgetToDashboard(id, saveWidget.id)\n      setLayout([...layout, { layout: $widget.layout, type: $widget.type }])\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const onWidgetAdd = async (config, isFormControl = false, widgetSettingsId = null) => {\n    try {\n      const layoutItem = {\n        layout: { i: uuidv4(), x: 0, y: 0, w: 6, h: 11, maxW: 16, isDraggable: true, isResizable: true },\n        ...config\n      }\n      if (widgetSettingsId) {\n        delete layoutItem.layout\n        const saveWidget = await WidgetSettingsActions.createWidgetSettings(layoutItem)\n        const linkWidget = await WidgetSettingsActions.createSubWidget(widgetSettingsId, saveWidget.id)\n      } else {\n        const saveWidget = await WidgetSettingsActions.createWidgetSettings(layoutItem)\n        const linkWidget = await DashboardActions.addWidgetToDashboard(id, saveWidget.id)\n        layoutItem.id = saveWidget.id\n        setLayout([...layout, layoutItem])\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const addWidget = async (type, _) => {\n    setAddType(type)\n    setMenuState({ ...menuState, addWidget: true, right: false })\n  }\n\n  const sideList = () => (\n    <div className={classes.list} role=\"presentation\">\n      <WidgetSidemenu onWidgetClick={addWidget} addPredefinedWidget={addPredefinedWidget} widgetSettings={Object.values(WidgetSettings)} />\n    </div>\n  )\n\n  const renderWidgets = () => layout.map((item, i) => (\n    <div key={item.layout.i}>\n      {decideWidget(item)}\n    </div>\n  ))\n\n  return (\n    <div>\n      <Drawer anchor=\"right\" open={menuState.right} onClose={toggleDrawer('right', false)}>\n        {sideList()}\n      </Drawer>\n\n      <Drawer anchor=\"right\" open={menuState.addWidget} onClose={toggleDrawer('addWidget', false)}>\n        {decideWidgetSettings(addType, onWidgetAdd)}\n      </Drawer>\n\n      <Drawer anchor=\"right\" open={menuState.settings} onClose={toggleDrawer('settings', false)}>\n        <DashboardSettings id={id} refresh={refresh} setRefresh={setRefresh} />\n      </Drawer>\n\n      <Card style={{ display: 'flex', flexDirection: 'row' }}>\n        <IconButton onClick={() => { router.back() }} aria-label=\"back\" size=\"medium\" style={{ outline: 'none' }}>\n          <ArrowLeft fontSize=\"default\" />\n        </IconButton>\n        <div style={{ display: 'flex', maxWidth: 700, overflowX: 'scroll', alignItems: 'flex-start' }}>\n          <Button onClick={() => { setId(router.query.id) }} style={{ marginLeft: 10 }}>Main</Button>\n          {\n            SubDashboards.map(subDashboard => (\n              <Button\n                key={subDashboard.subDashboardId}\n                onClick={() => {\n                  setId(subDashboard.subDashboardId)\n                }}\n                style={{ marginLeft: 10, flex: 1 }}>\n                {subDashboard.subDashboard.title}\n              </Button>\n            ))\n          }\n        </div>\n        <div style={{ justifySelf: 'flex-end', display: 'flex', flex: 1, justifyContent: 'flex-end', paddingRight: '10px' }}>\n          <Button style={{ outline: 'none' }} size=\"small\" startIcon={<SaveIcon />}>\n            Save\n          </Button>\n          <Button style={{ marginLeft: '10px', outline: 'none' }} size=\"small\" onClick={toggleDrawer('right', true)} startIcon={<DashboardIcon />}>\n            Widgets\n          </Button>\n          <Button style={{ marginLeft: '10px', outline: 'none' }} size=\"small\" onClick={toggleDrawer('settings', true)} startIcon={<SettingsIcon />}>\n            Settings\n          </Button>\n        </div>\n      </Card>\n\n      <div style={{ paddingBottom: '15px' }}>\n        <GridLayout className=\"layout\" cols={16} rowHeight={30} width={1920} layout={layout.map(item => item.layout)} onLayoutChange={onLayoutChange}>\n          {renderWidgets()}\n        </GridLayout>\n      </div>\n    </div>\n  )\n};\n\n// EditDashboard.getInitialProps = async (req) => {\n//   const Authorization = Cookies(req).id\n//   const { id } = req.query\n//   const WidgetSettings = await DashboardActions.getWidgetSettings({ Authorization, id })\n//   const SubDashboards = await DashboardActions.getSubDashboards({ Authorization, id })\n//   return { WidgetSettings, SubDashboards }\n// }\n\nexport default EditDashboard;"]},"metadata":{},"sourceType":"module"}