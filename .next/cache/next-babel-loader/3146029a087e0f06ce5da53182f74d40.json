{"ast":null,"code":"import axios from 'axios';\nimport config from 'next/config';\nimport Cookie from 'js-cookie';\nconst {\n  API_URL\n} = config().publicRuntimeConfig;\nexport default class DashboardActions {\n  static async createDashboard({\n    Authorization,\n    dashboard\n  }) {\n    return axios.post(`${API_URL}/Dashboards`, dashboard, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getDashboards({\n    Authorization,\n    query\n  }) {\n    return axios.get(`${API_URL}/Dashboards`, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      },\n      params: {\n        filter: {\n          where: {\n            isSub: false\n          }\n        }\n      }\n    }).then(res => res.data).catch(err => err);\n  }\n\n  static async getSubDashboards(dashboardId) {\n    return axios.get(`${API_URL}/Dashboards/${dashboardId}/subDashboards`, {\n      headers: {\n        Authorization: Cookie.get('id')\n      },\n      params: {\n        filter: {\n          include: 'subDashboard'\n        }\n      }\n    }).then(res => res.data).catch(err => err);\n  }\n\n  static async getDashboardById(data) {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  }\n\n  static async updateDashboard(id, data) {\n    return axios.patch(`${API_URL}/Dashboards/${id}`, data).then(res => res.data).catch(err => err.response);\n  }\n\n  static async deleteDashboard(data) {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getWidgetSettings({\n    Authorization,\n    id\n  }) {\n    return axios.get(`${API_URL}/Dashboards/${id}/widgetSettings`, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getCollaborators({\n    Authorization,\n    id\n  }) {\n    return axios.get(`${API_URL}/Dashboards/${id}/collaborators`, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async getCollaboratorations({\n    Authorization\n  }) {\n    return axios.get(`${API_URL}/Dashboards/collaborations`, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async addCollaborator({\n    Authorization,\n    email,\n    id,\n    editor,\n    viewer\n  }) {\n    return axios.post(`${API_URL}/Dashboards/${id}/dashboardRoleMappings`, {\n      email,\n      editor,\n      viewer\n    }, {\n      headers: {\n        Authorization: Authorization || Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async addWidgetToDashboard(id, fk) {\n    return axios.put(`${API_URL}/Dashboards/${id}/widgetSettings/rel/${fk}`, {\n      dashboardId: id,\n      widgetSettingsId: fk\n    }, {\n      headers: {\n        Authorization: Cookie.get('id')\n      }\n    }).then(res => res.data).catch(err => err.response);\n  }\n\n  static async removeWidgetFromDashboard(data) {\n    return axios.post('', {}).then(res => res.data).catch(err => err.response);\n  }\n\n}","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/actions/dashboard.actions.ts"],"names":["axios","config","Cookie","API_URL","publicRuntimeConfig","DashboardActions","createDashboard","Authorization","dashboard","post","headers","get","then","res","data","catch","err","response","getDashboards","query","params","filter","where","isSub","getSubDashboards","dashboardId","include","getDashboardById","updateDashboard","id","patch","deleteDashboard","getWidgetSettings","getCollaborators","getCollaboratorations","addCollaborator","email","editor","viewer","addWidgetToDashboard","fk","put","widgetSettingsId","removeWidgetFromDashboard"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport config from 'next/config'\nimport Cookie from 'js-cookie'\nimport User from '../types/users.types'\nimport Dashboard from '../types/dashboard.types'\nimport Datasource from '../types/datasource.types'\nimport Widget from '../types/widget.types'\nimport WidgetSettings from '../types/widgetSettings.type'\n\nconst { API_URL } = config().publicRuntimeConfig\n\nexport default class DashboardActions {\n\n  public static async createDashboard({ Authorization, dashboard }: { dashboard: Dashboard, Authorization: string }): Promise<Dashboard> {\n    return axios\n      .post(`${API_URL}/Dashboards`, dashboard, { headers: { Authorization: Authorization || Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async getDashboards({ Authorization, query }: { Authorization?: string, query?: any }): Promise<Array<Dashboard>> {\n    return axios\n      .get(`${API_URL}/Dashboards`, { headers: { Authorization: Authorization || Cookie.get('id') }, params: { filter: { where: { isSub: false } } } })\n      .then(res => res.data)\n      .catch(err => err)\n  }\n\n  public static async getSubDashboards(dashboardId: string): Promise<any> {\n    return axios\n      .get(`${API_URL}/Dashboards/${dashboardId}/subDashboards`, { headers: { Authorization: Cookie.get('id') }, params: { filter: { include: 'subDashboard' } } })\n      .then(res => res.data)\n      .catch(err => err)\n  }\n\n  public static async getDashboardById(data: Datasource): Promise<Dashboard> {\n    return axios\n      .post('', {})\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async updateDashboard(id: string, data): Promise<Dashboard> {\n    return axios\n      .patch(`${API_URL}/Dashboards/${id}`, data)\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async deleteDashboard(data: Datasource): Promise<Dashboard> {\n    return axios\n      .post('', {})\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async getWidgetSettings({ Authorization, id }: { Authorization?: string, id: string }): Promise<Array<WidgetSettings>> {\n    return axios\n      .get(`${API_URL}/Dashboards/${id}/widgetSettings`, { headers: { Authorization: Authorization || Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async getCollaborators({ Authorization, id }: { Authorization?: string, id: string }): Promise<Array<User>> {\n    return axios\n      .get(`${API_URL}/Dashboards/${id}/collaborators`, { headers: { Authorization: Authorization || Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async getCollaboratorations({ Authorization }: { Authorization?: string }): Promise<Array<Dashboard>> {\n    return axios\n      .get(`${API_URL}/Dashboards/collaborations`, { headers: { Authorization: Authorization || Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async addCollaborator(\n    { Authorization, email, id, editor, viewer }: { Authorization?: string, email: string, id: string, editor: boolean, viewer: boolean }\n  ): Promise<any> {\n    return axios\n      .post(\n        `${API_URL}/Dashboards/${id}/dashboardRoleMappings`,\n        { email, editor, viewer },\n        { headers: { Authorization: Authorization || Cookie.get('id') } }\n      )\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async addWidgetToDashboard(id: string, fk: string): Promise<Dashboard> {\n    return axios\n      .put(`${API_URL}/Dashboards/${id}/widgetSettings/rel/${fk}`, { dashboardId: id, widgetSettingsId: fk }, { headers: { Authorization: Cookie.get('id') } })\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n  public static async removeWidgetFromDashboard(data: Datasource): Promise<Dashboard> {\n    return axios\n      .post('', {})\n      .then(res => res.data)\n      .catch(err => err.response)\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}