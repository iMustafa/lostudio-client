{"ast":null,"code":"import grapesjs from 'grapesjs';\nimport loadComponents from './components';\nimport loadBlocks from './blocks';\nimport loadCommands from './commands';\nimport loadPanels from './panels';\nimport parserHtmlCaseSensitive from './ParserHtmlCaseSensitive';\nimport { ChartPluginRef } from './consts';\nexport default function addChartPlugin() {\n  grapesjs.plugins.add(ChartPluginRef, function (editor) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    editor.TraitManager.addType('pre', {\n      noLabel: true,\n      getInputEl: function getInputEl() {\n        var model = this.model;\n\n        var _model$props = model.props(),\n            text = _model$props.text;\n\n        var label = text;\n        var input = \"<div type=\\\"text\\\" style=\\\"font-size: 1rem; line-height:30px; margin:10px; word-wrap: break-word; width: 180px;\\\">\".concat(label, \"</div>\");\n        return input;\n      }\n    });\n    var c = opts;\n    var defaults = {\n      blocks: [ChartPluginRef],\n      blockLabel: 'Charts',\n      blockCategory: 'Extra',\n      defaultStyle: true\n    };\n    console.log(defaults);\n\n    for (var name in defaults) {\n      if (!(name in c)) c[name] = defaults[name];\n    }\n\n    loadComponents(editor, c);\n    loadBlocks(editor, c);\n    loadCommands(editor, c);\n    loadPanels(editor, c);\n    var em = editor.getModel();\n    var emConf = em.get('Config');\n    emConf.textTags = ['br', 'b', 'i', 'u', 'a', 'ul', 'ol'];\n    em.get('Parser').parserHtml = parserHtmlCaseSensitive(emConf);\n\n    em.get('Parser').parseHtml = function (str) {\n      var pHtml = em.get('Parser').parserHtml;\n      pHtml.compTypes = em.get('DomComponents').getTypes();\n      var res = pHtml.parse(str, em.get('Parser').parserCss);\n      return res;\n    };\n\n    editor.on(\"load\", function () {\n      var openBl = editor.Panels.getButton('views', 'open-blocks');\n      openBl && openBl.set('active', 1);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/imustafa/Projects/LoStudio/client/components/grapes/chart-widgets/line-chart/index.js"],"names":["grapesjs","loadComponents","loadBlocks","loadCommands","loadPanels","parserHtmlCaseSensitive","ChartPluginRef","addChartPlugin","plugins","add","editor","opts","TraitManager","addType","noLabel","getInputEl","model","props","text","label","input","c","defaults","blocks","blockLabel","blockCategory","defaultStyle","console","log","name","em","getModel","emConf","get","textTags","parserHtml","parseHtml","str","pHtml","compTypes","getTypes","res","parse","parserCss","on","openBl","Panels","getButton","set"],"mappings":"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","sourcesContent":["import grapesjs from 'grapesjs';\nimport loadComponents from './components'; \nimport loadBlocks from './blocks';\nimport loadCommands from './commands';\nimport loadPanels from './panels';\nimport parserHtmlCaseSensitive from './ParserHtmlCaseSensitive';\n\nimport {\n    ChartPluginRef\n} from './consts';\n\nexport default function addChartPlugin() {\n    grapesjs.plugins.add(ChartPluginRef, (editor, opts = {}) => {\n\n        \n        editor.TraitManager.addType('pre', {\n                                                                \n            noLabel: true,\n            \n            getInputEl() {\n                const { model} = this;\n                const {text} = model.props();\n                const label = text;\n                const input = `<div type=\"text\" style=\"font-size: 1rem; line-height:30px; margin:10px; word-wrap: break-word; width: 180px;\">${label}</div>`;\n                return input;\n            }\n        }\n                                                            \n\t\t) \n\n\n\n        let c = opts;\n \n        let defaults = {\n            blocks: [ChartPluginRef],\n\n            blockLabel: 'Charts',\n\n            blockCategory: 'Extra',\n\n            defaultStyle: true,\n\n        };\n        console.log(defaults)\n\n        for (let name in defaults) {\n            if (!(name in c))\n                c[name] = defaults[name];\n        }\n\n        loadComponents(editor, c);\n\n        loadBlocks(editor, c);\n\n        loadCommands(editor, c);\n\n        loadPanels(editor, c); \n\n        const em = editor.getModel();\n        const emConf = em.get('Config');\n        emConf.textTags = ['br', 'b', 'i', 'u', 'a', 'ul', 'ol'];\n        em.get('Parser').parserHtml = parserHtmlCaseSensitive(emConf);\n        em.get('Parser').parseHtml = (str) => {\n            const pHtml = em.get('Parser').parserHtml;\n            pHtml.compTypes = em.get('DomComponents').getTypes();\n            let res = pHtml.parse(str, em.get('Parser').parserCss);\n            return res;\n        };\n\n        editor.on(\"load\", () => {\n            const openBl = editor.Panels.getButton('views', 'open-blocks');\n            openBl && openBl.set('active', 1);\n        });\n\n    });\n}\n\n"]},"metadata":{},"sourceType":"module"}