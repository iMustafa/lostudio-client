{"version":3,"file":"static/webpack/static/development/pages/webpages.js.6a5facccbd140f37d4e1.hot-update.js","sources":["webpack:///./components/dashboards/add-dashboard-card.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport DashboardActions from \"../../actions/dashboard.actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: 280,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    paddingTop: 15,\n  },\n  media: {\n    height: 140,\n  },\n  title: {\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    color: \"#3F51B5\",\n  },\n}));\n\nconst AddDashboardCard = ({ type }) => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    title: \"\",\n    type,\n    description: \"\",\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const createProject = async () => {\n    if (state.title) {\n      try {\n        const { title, description, type } = state;\n        const project = await DashboardActions.createDashboard({\n          dashboard: { title, description, type },\n        });\n        setState({...state, title: '', description: ''})\n        console.log(project)\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  return (\n    <Card className={classes.card}>\n      <Typography className={classes.title}>Create new project</Typography>\n\n      <CardContent>\n        <TextField\n          fullWidth\n          required\n          name=\"title\"\n          label=\"Title\"\n          onChange={handleChange}\n          value={state.title}\n        />\n        <TextField\n          fullWidth\n          multiline\n          name=\"description\"\n          label=\"Description\"\n          onChange={handleChange}\n          value={state.description}\n        />\n      </CardContent>\n\n      <CardActions>\n        <Button fullWidth color=\"primary\" onClick={createProject}>\n          Create\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default AddDashboardCard;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAXA;AAAA;AACA;AAiBA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AACA;AAHA;AAFA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AALA;AAIA;AAGA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AACA;AADA;AAAA;AAAA;AAUA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}