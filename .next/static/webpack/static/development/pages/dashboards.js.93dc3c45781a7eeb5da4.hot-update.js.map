{"version":3,"file":"static/webpack/static/development/pages/dashboards.js.93dc3c45781a7eeb5da4.hot-update.js","sources":["webpack:///./components/dashboards/add-dashboard-card.jsx","webpack:///./components/dashboards/list-dashboards.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport DashboardActions from \"../../actions/dashboard.actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: 280,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    paddingTop: 15,\n  },\n  media: {\n    height: 140,\n  },\n  title: {\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    color: \"#3F51B5\",\n  },\n}));\n\nconst AddDashboardCard = ({ type, reloadChanges }) => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    title: \"\",\n    type,\n    description: \"\",\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const createProject = async () => {\n    if (state.title) {\n      try {\n        const { title, description, type } = state;\n        const project = await DashboardActions.createDashboard({\n          dashboard: { title, description, type },\n        });\n        setState({...state, title: '', description: ''})\n        reloadChanges()\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  return (\n    <Card className={classes.card}>\n      <Typography className={classes.title}>Create new project</Typography>\n\n      <CardContent>\n        <TextField\n          fullWidth\n          required\n          name=\"title\"\n          label=\"Title\"\n          onChange={handleChange}\n          value={state.title}\n        />\n        <TextField\n          fullWidth\n          multiline\n          name=\"description\"\n          label=\"Description\"\n          onChange={handleChange}\n          value={state.description}\n        />\n      </CardContent>\n\n      <CardActions>\n        <Button fullWidth color=\"primary\" onClick={createProject}>\n          Create\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default AddDashboardCard;\n","import { useState } from \"react\";\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport DashbordItem from \"./dashboard-item\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddDashboardCard from \"./add-dashboard-card\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"25px\",\n  },\n  cardBody: {\n    padding: \"10px\",\n  },\n  cardTitle: {\n    fontSize: \"12px\",\n    backgroundColor: \"#3F51B5\",\n    padding: \"3px 3px 3px 6px\",\n    color: \"#FFF\",\n    fontFamily: [\"Roboto\", \"Helvetica\", \"Arial\", \"sans-serif\"],\n  },\n  emptyCardBody: {\n    padding: 10,\n    height: 200,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n    borderBottom: \"1px solid #DEDEDE\",\n    marginTop: 10,\n    marginBottom: 15,\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 200,\n    },\n  },\n}));\n\nconst ListDashboards = ({ dashboards, title, type, dashboardType, reloadChanges }) => {\n  const classes = useStyles();\n  const [searchValue, setSearchValue] = useState(null);\n\n  const handleChange = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.cardTitle}>{title}</div>\n      <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          fullWidth\n          placeholder=\"Searchâ€¦\"\n          onChange={handleChange}\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ \"aria-label\": \"search\" }}\n        />\n      </div>\n      {dashboards.length ? (\n        <div className={classes.cardBody}>\n          <Grid container spacing={2}>\n            <Grid item xs={3}>\n              <AddDashboardCard type={dashboardType} reloadChanges={reloadChanges} />\n            </Grid>\n            {dashboards\n              .filter((dashboard) => {\n                const regex = new RegExp(searchValue, \"g\");\n                return searchValue ? regex.test(dashboard.title) : true\n              })\n              .map((dashboard, index) => {\n                const { title, description, id, permissions } = dashboard;\n                const $type = dashboard.type;\n                return (\n                  <Grid item xs={3} key={index}>\n                    <DashbordItem\n                      type={$type}\n                      title={title}\n                      description={description}\n                      id={id}\n                      permissions={permissions}\n                    />\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </div>\n      ) : (\n        <div className={classes.emptyCardBody}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <DashboardIcon style={{ color: \"#DDD\", fontSize: 128 }} />\n            <Typography style={{ color: \"#DDD\", fontSize: 32 }}>\n              No dashboards found.\n            </Typography>\n          </div>\n          <Typography style={{ color: \"#DDD\", fontSize: 18 }}>\n            {type == \"personal\"\n              ? \"Create a new dashboard to be displayed here.\"\n              : \"When a corporation adds you to collaborate on their dashboards, they will appear here.\"}\n          </Typography>\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default ListDashboards;\n"],"mappings":"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","sourceRoot":""}