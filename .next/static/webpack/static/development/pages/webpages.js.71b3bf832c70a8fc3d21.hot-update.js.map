{"version":3,"file":"static/webpack/static/development/pages/webpages.js.71b3bf832c70a8fc3d21.hot-update.js","sources":["webpack:///./pages/webpages/index.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { NextPage } from \"next\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Cookies from \"next-cookies\";\nimport DashboardActions from \"../../actions/dashboard.actions\";\nimport Dashboard from \"../../types/dashboard.types\";\nimport Grid from '@material-ui/core/Grid'\nimport ListDashboards from '../../components/dashboards/list-dashboards'\n\nconst WebPages: NextPage<{ WebPages }> = ({ WebPages }) => {\n  const $WebPages: Array<Dashboard> = Object.values(WebPages);\n  const [refresh, setRefresh] = useState(0);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <div className=\"container\" style={{ margin: \"25px auto 25px auto\" }}>\n          <ListDashboards\n            dashboards={$WebPages}\n            dashboardType=\"webpages\"\n            title=\"My Webpages\"\n            type=\"personal\"\n          ></ListDashboards>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nWebPages.getInitialProps = async (\n  req\n): Promise<{ WebPages: Array<Dashboard> }> => {\n  try {\n    const Authorization = Cookies(req).id;\n    const WebPages = await DashboardActions.getWebpages({ Authorization });\n    return { WebPages };\n  } catch (e) {\n    return { WebPages: [] };\n  }\n};\n\nexport default WebPages;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AAJA;AAAA;AAKA;AAAA;AACA;AANA;AAKA;AALA;AAMA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAQA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;;;;A","sourceRoot":""}