{"version":3,"file":"static/webpack/static/development/pages/signup.js.8f1a182b642d5fed3840.hot-update.js","sources":["webpack:///./components/signup/personal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Swal from 'sweetalert2'\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport { register } from '../../actions/auth.actions';\nimport countries from '../../helpers/countries'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from '@material-ui/core';\nimport router from 'next/router';\n\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode.toUpperCase().replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: '80vh',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  loginCard: {\n    padding: '30px 15px',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  headerHolder: {\n    borderRight: '1px solid #DEDEDE'\n  },\n  formHolder: {\n\n  },\n  textField: {\n    width: '90%'\n  },\n  fieldsGrid: {\n    marginTop: theme.spacing(4)\n  },\n  signupButtonHolder: {\n    display: 'flex',\n    marginTop: theme.spacing(4),\n    justifyContent: 'center'\n  },\n  signupButton: {\n    width: '50%'\n  },\n  loginHolder: {\n    textAlign: 'center',\n    marginTop: theme.spacing(3)\n  },\n  loginText: {\n    marginRight: theme.spacing(2)\n  },\n  loginButton: {\n  }\n}));\n\nconst personalSignUp = () => {\n  const classes = useStyles();\n  const [data, setData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    countryCode: '',\n    phoneNumber: '',\n    country: '',\n    city: '',\n    password: '',\n    confirmPassword: '',\n    roleString: 'personal'\n  });\n\n  const handleChange = e => {\n    setData({\n      ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const submitSignup = async () => {\n    try {\n      const user = await register(data)\n      router.push('/login')\n    } catch (e) {\n      switch (e.status) {\n        case 422:\n          Swal.fire('Error', 'Email already exists', 'error')\n          break\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <FormControl className={classes.textField}>\n            <TextField\n              name=\"firstName\"\n              label={'First Name'}\n              required\n              onChange={handleChange}\n              value={data.firstName}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <FormControl className={classes.textField}>\n            <TextField\n              name=\"lastName\"\n              label={'Last Name'}\n              required\n              onChange={handleChange}\n              value={data.lastName}\n            />\n          </FormControl>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.fieldsGrid}>\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <FormControl className={classes.textField}>\n            <TextField\n              name=\"email\"\n              label={'Email'}\n              type={'email'}\n              required\n              onChange={handleChange}\n              value={data.email}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <Grid container spacing={1}>\n            <Grid item xs={4}>\n              <Autocomplete\n                options={countries}\n                getOptionLabel={option => `+${option.phone}`}\n                renderOption={option => (\n                  <React.Fragment>\n                    <span>{countryToFlag(option.code)}</span>\n                    <span style={{ fontSize: '10px' }}>+{option.phone}</span>\n                  </React.Fragment>\n                )}\n                renderInput={params => (\n                  <TextField {...params} name={'countryCode'} label=\"Country Code\" />\n                )}\n              />\n            </Grid>\n            <Grid item xs={8}>\n              <FormControl className={classes.textField}>\n                <TextField\n                  name=\"phoneNumber\"\n                  label={'Phone Number'}\n                  onChange={handleChange}\n                  value={data.phoneNumber}\n                />\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.fieldsGrid}>\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <FormControl className={classes.textField}>\n            <Autocomplete\n              options={countries}\n              getOptionLabel={option => option.label}\n              renderInput={params => (\n                <TextField {...params} name={'country'} label=\"Country\" fullWidth required />\n              )}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <FormControl className={classes.textField}>\n            <TextField\n              name=\"city\"\n              label={'City'}\n              required\n              onChange={handleChange}\n              value={data.city}\n            />\n          </FormControl>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.fieldsGrid}>\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <FormControl className={classes.textField}>\n            <TextField\n              name=\"password\"\n              label={'Password'}\n              required\n              onChange={handleChange}\n              value={data.password}\n              type={'password'}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid item md={6} xs={12} style={{ textAlign: 'center' }}>\n          <FormControl className={classes.textField}>\n            <TextField\n              name=\"confirmPassword\"\n              label={'Confirm Password'}\n              required\n              onChange={handleChange}\n              value={data.confirmPassword}\n              type={'password'}\n            />\n          </FormControl>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12} className={classes.signupButtonHolder}>\n        <Button className={classes.signupButton} onClick={submitSignup}>Signup</Button>\n      </Grid>\n    </div>\n  )\n}\n\nexport default personalSignUp"],"mappings":"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","sourceRoot":""}