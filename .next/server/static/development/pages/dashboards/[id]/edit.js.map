{"version":3,"file":"static\\development\\pages\\dashboards\\[id]\\edit.js","sources":["webpack:///webpack/bootstrap","webpack:///./actions/dashboard.actions.ts","webpack:///./actions/datasource.actions.ts","webpack:///./actions/widgetSettings.actions.ts","webpack:///./components/dashboards/my-widgets.jsx","webpack:///./components/dashboards/settings/add-new-collaborator.jsx","webpack:///./components/dashboards/settings/collaborator-card.jsx","webpack:///./components/dashboards/settings/dashboard-settings.jsx","webpack:///./components/dashboards/settings/general-settings.jsx","webpack:///./components/dashboards/settings/privacy-settings.jsx","webpack:///./components/dashboards/system-widgets.jsx","webpack:///./components/dashboards/widgets-menu.jsx","webpack:///./components/widgets/charts/area-chart/area-chart-widget-settings.jsx","webpack:///./components/widgets/charts/area-chart/area-chart-widget.jsx","webpack:///./components/widgets/charts/area-chart/index.js","webpack:///./components/widgets/charts/bar-chart/bar-chart-widget-settings.jsx","webpack:///./components/widgets/charts/bar-chart/bar-chart-widget.jsx","webpack:///./components/widgets/charts/bar-chart/index.js","webpack:///./components/widgets/charts/donut-chart/donut-chart-widget-settings.jsx","webpack:///./components/widgets/charts/donut-chart/donut-chart-widget.jsx","webpack:///./components/widgets/charts/donut-chart/index.js","webpack:///./components/widgets/charts/index.js","webpack:///./components/widgets/charts/line-chart/index.js","webpack:///./components/widgets/charts/line-chart/line-chart-widget-settings.jsx","webpack:///./components/widgets/charts/line-chart/line-chart-widget.jsx","webpack:///./components/widgets/charts/pie-chart/index.js","webpack:///./components/widgets/charts/pie-chart/pie-chart-widget-settings.jsx","webpack:///./components/widgets/charts/pie-chart/pie-chart-widget.jsx","webpack:///./components/widgets/form-controls/autocomplete/autocomplete-widget-settings.jsx","webpack:///./components/widgets/form-controls/autocomplete/autocomplete-widget.jsx","webpack:///./components/widgets/form-controls/autocomplete/index.js","webpack:///./components/widgets/form-controls/button/button-widget-settings.jsx","webpack:///./components/widgets/form-controls/button/button-widget.jsx","webpack:///./components/widgets/form-controls/button/index.js","webpack:///./components/widgets/form-controls/checkbox/checkbox-widget-settings.jsx","webpack:///./components/widgets/form-controls/checkbox/checkbox-widget.jsx","webpack:///./components/widgets/form-controls/checkbox/index.js","webpack:///./components/widgets/form-controls/date-time/datetime-widget-settings.jsx","webpack:///./components/widgets/form-controls/date-time/index.js","webpack:///./components/widgets/form-controls/file/file-widget-settings.jsx","webpack:///./components/widgets/form-controls/file/file-widget.jsx","webpack:///./components/widgets/form-controls/file/index.js","webpack:///./components/widgets/form-controls/index.js","webpack:///./components/widgets/form-controls/number/index.js","webpack:///./components/widgets/form-controls/number/number-widget-settings.jsx","webpack:///./components/widgets/form-controls/number/number-widget.jsx","webpack:///./components/widgets/form-controls/password/index.js","webpack:///./components/widgets/form-controls/password/password-widget-settings.jsx","webpack:///./components/widgets/form-controls/password/password-widget.jsx","webpack:///./components/widgets/form-controls/radio/index.js","webpack:///./components/widgets/form-controls/radio/radio-widget-settings.jsx","webpack:///./components/widgets/form-controls/radio/radio-widget.jsx","webpack:///./components/widgets/form-controls/select/index.js","webpack:///./components/widgets/form-controls/select/select-widget-settings.jsx","webpack:///./components/widgets/form-controls/select/select-widget.jsx","webpack:///./components/widgets/form-controls/textarea/index.js","webpack:///./components/widgets/form-controls/textarea/textarea-widget-settings.jsx","webpack:///./components/widgets/form-controls/textarea/textarea-widget.jsx","webpack:///./components/widgets/form-controls/textfield/index.js","webpack:///./components/widgets/form-controls/textfield/text-field-widget-settings.jsx","webpack:///./components/widgets/form-controls/textfield/text-field-widget.jsx","webpack:///./components/widgets/html-elements/accordion/accordion-widget-settings.jsx","webpack:///./components/widgets/html-elements/accordion/accordion-widget.jsx","webpack:///./components/widgets/html-elements/accordion/index.js","webpack:///./components/widgets/html-elements/data-grid/data-grid-widget-settings.jsx","webpack:///./components/widgets/html-elements/data-grid/data-grid-widget.jsx","webpack:///./components/widgets/html-elements/data-grid/index.js","webpack:///./components/widgets/html-elements/div/div-widget-settings.jsx","webpack:///./components/widgets/html-elements/div/div-widget.jsx","webpack:///./components/widgets/html-elements/div/index.js","webpack:///./components/widgets/html-elements/image/image-widget-settings.jsx","webpack:///./components/widgets/html-elements/image/image-widget.jsx","webpack:///./components/widgets/html-elements/image/index.js","webpack:///./components/widgets/html-elements/index.js","webpack:///./components/widgets/html-elements/list/index.js","webpack:///./components/widgets/html-elements/list/list-widget-settings.jsx","webpack:///./components/widgets/html-elements/list/list-widget.jsx","webpack:///./components/widgets/html-elements/paragraph/index.js","webpack:///./components/widgets/html-elements/paragraph/paragraph-widget-settings.jsx","webpack:///./components/widgets/html-elements/paragraph/paragraph-widget.jsx","webpack:///./components/widgets/html-elements/progress-bar/index.js","webpack:///./components/widgets/html-elements/progress-bar/progress-bar-widget-settings.jsx","webpack:///./components/widgets/html-elements/progress-bar/progress-bar-widget.jsx","webpack:///./components/widgets/html-elements/span/index.js","webpack:///./components/widgets/html-elements/span/span-widget-settings.jsx","webpack:///./components/widgets/html-elements/span/span-widget.jsx","webpack:///./components/widgets/html-elements/tabs/index.js","webpack:///./components/widgets/html-elements/tabs/tabs-widget-settings.jsx","webpack:///./components/widgets/html-elements/tabs/tabs-widget.jsx","webpack:///./components/widgets/index.js","webpack:///./components/widgets/table/index.js","webpack:///./components/widgets/table/table-widget-settings.jsx","webpack:///./components/widgets/table/table-widget.jsx","webpack:///./components/widgets/widget-icon.jsx","webpack:///./helpers/decide-widgets.jsx","webpack:///./pages/dashboards//edit.jsx","webpack:///external \"@devexpress/dx-react-chart\"","webpack:///external \"@devexpress/dx-react-chart-material-ui\"","webpack:///external \"@material-ui/core/AppBar\"","webpack:///external \"@material-ui/core/Box\"","webpack:///external \"@material-ui/core/Button\"","webpack:///external \"@material-ui/core/ButtonBase\"","webpack:///external \"@material-ui/core/Card\"","webpack:///external \"@material-ui/core/Checkbox\"","webpack:///external \"@material-ui/core/CircularProgress\"","webpack:///external \"@material-ui/core/Drawer\"","webpack:///external \"@material-ui/core/ExpansionPanel\"","webpack:///external \"@material-ui/core/ExpansionPanelDetails\"","webpack:///external \"@material-ui/core/ExpansionPanelSummary\"","webpack:///external \"@material-ui/core/FormControl\"","webpack:///external \"@material-ui/core/FormControlLabel\"","webpack:///external \"@material-ui/core/FormGroup\"","webpack:///external \"@material-ui/core/Grid\"","webpack:///external \"@material-ui/core/IconButton\"","webpack:///external \"@material-ui/core/Input\"","webpack:///external \"@material-ui/core/InputLabel\"","webpack:///external \"@material-ui/core/MenuItem\"","webpack:///external \"@material-ui/core/Paper\"","webpack:///external \"@material-ui/core/Radio\"","webpack:///external \"@material-ui/core/RadioGroup\"","webpack:///external \"@material-ui/core/Select\"","webpack:///external \"@material-ui/core/Tab\"","webpack:///external \"@material-ui/core/Tabs\"","webpack:///external \"@material-ui/core/TextField\"","webpack:///external \"@material-ui/core/Typography\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/icons/ArrowLeft\"","webpack:///external \"@material-ui/icons/Autorenew\"","webpack:///external \"@material-ui/icons/BarChart\"","webpack:///external \"@material-ui/icons/BubbleChart\"","webpack:///external \"@material-ui/icons/CheckBox\"","webpack:///external \"@material-ui/icons/Dashboard\"","webpack:///external \"@material-ui/icons/DateRange\"","webpack:///external \"@material-ui/icons/Delete\"","webpack:///external \"@material-ui/icons/Dialpad\"","webpack:///external \"@material-ui/icons/DonutLarge\"","webpack:///external \"@material-ui/icons/ExpandMore\"","webpack:///external \"@material-ui/icons/FileCopy\"","webpack:///external \"@material-ui/icons/GridOn\"","webpack:///external \"@material-ui/icons/Image\"","webpack:///external \"@material-ui/icons/List\"","webpack:///external \"@material-ui/icons/ListAlt\"","webpack:///external \"@material-ui/icons/Lock\"","webpack:///external \"@material-ui/icons/PieChart\"","webpack:///external \"@material-ui/icons/RadioButtonChecked\"","webpack:///external \"@material-ui/icons/Receipt\"","webpack:///external \"@material-ui/icons/Refresh\"","webpack:///external \"@material-ui/icons/Save\"","webpack:///external \"@material-ui/icons/SelectAll\"","webpack:///external \"@material-ui/icons/Settings\"","webpack:///external \"@material-ui/icons/Subject\"","webpack:///external \"@material-ui/icons/TableChart\"","webpack:///external \"@material-ui/icons/TextFields\"","webpack:///external \"@material-ui/icons/TextFormat\"","webpack:///external \"@material-ui/icons/TextRotationNone\"","webpack:///external \"@material-ui/icons/Timeline\"","webpack:///external \"@material-ui/icons/Title\"","webpack:///external \"@material-ui/icons/TouchApp\"","webpack:///external \"@material-ui/icons/ViewList\"","webpack:///external \"@material-ui/icons/VisibilityOff\"","webpack:///external \"axios\"","webpack:///external \"d3-scale\"","webpack:///external \"js-cookie\"","webpack:///external \"material-table\"","webpack:///external \"next-cookies\"","webpack:///external \"next/config\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-grid-layout\"","webpack:///external \"sweetalert2\"","webpack:///external \"uuid\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","import axios from 'axios'\r\nimport config from 'next/config'\r\nimport Cookie from 'js-cookie'\r\nimport User from '../types/users.types'\r\nimport Dashboard from '../types/dashboard.types'\r\nimport Datasource from '../types/datasource.types'\r\nimport Widget from '../types/widget.types'\r\nimport WidgetSettings from '../types/widgetSettings.type'\r\n\r\nconst { API_URL } = config().publicRuntimeConfig\r\n\r\nexport default class DashboardActions {\r\n\r\n  public static async createDashboard(dashborad: Dashboard): Promise<Dashboard> {\r\n    return axios\r\n      .post('', {})\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async getDashboards({ Authorization, query }: { Authorization?: string, query?: any }): Promise<Array<Dashboard>> {\r\n    console.log(Authorization)\r\n    return axios\r\n      .get(`${API_URL}/Dashboards`, { headers: { Authorization: Authorization || Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err)\r\n  }\r\n\r\n  public static async getDashboardById(data: Datasource): Promise<Dashboard> {\r\n    return axios\r\n      .post('', {})\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async updateDashboard(id: string, data): Promise<Dashboard> {\r\n    return axios\r\n      .patch(`${API_URL}/Dashboards/${id}`, data)\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async deleteDashboard(data: Datasource): Promise<Dashboard> {\r\n    return axios\r\n      .post('', {})\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async getWidgetSettings({ Authorization, id }: { Authorization?: string, id: string }): Promise<Array<WidgetSettings>> {\r\n    return axios\r\n      .get(`${API_URL}/Dashboards/${id}/widgetSettings`, { headers: { Authorization: Authorization || Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async getCollaborators({ Authorization, id }: { Authorization?: string, id: string }): Promise<Array<User>> {\r\n    return axios\r\n      .get(`${API_URL}/Dashboards/${id}/collaborators`, { headers: { Authorization: Authorization || Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async getCollaboratorations({ Authorization }: { Authorization?: string }): Promise<Array<Dashboard>> {\r\n    return axios\r\n      .get(`${API_URL}/Dashboards/collaborations`, { headers: { Authorization: Authorization || Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async addCollaborator(\r\n    { Authorization, email, id, editor, viewer }: { Authorization?: string, email: string, id: string, editor: boolean, viewer: boolean }\r\n  ): Promise<any> {\r\n    return axios\r\n      .post(\r\n        `${API_URL}/Dashboards/${id}/dashboardRoleMappings`,\r\n        { email, editor, viewer },\r\n        { headers: { Authorization: Authorization || Cookie.get('id') } }\r\n      )\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async addWidgetToDashboard(id: string, fk: string): Promise<Dashboard> {\r\n    return axios\r\n      .put(`${API_URL}/Dashboards/${id}/widgetSettings/rel/${fk}`, { dashboardId: id, widgetSettingsId: fk }, { headers: { Authorization: Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async removeWidgetFromDashboard(data: Datasource): Promise<Dashboard> {\r\n    return axios\r\n      .post('', {})\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n}\r\n\r\n","import axios from 'axios'\r\nimport config from 'next/config'\r\nimport Cookie from 'js-cookie'\r\nimport Datasource from '../types/datasource.types'\r\n\r\nconst { API_URL } = config().publicRuntimeConfig\r\n\r\nexport default class DatasourceActions {\r\n\r\n  public static async createDatasource(data: Datasource): Promise<Datasource> {\r\n    return axios\r\n      .post(`${API_URL}/DataSources`, data, { headers: { Authorization: Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err)\r\n  }\r\n\r\n  public static async updateDatasource(id: string, data: Datasource): Promise<Datasource> {\r\n    return axios\r\n      .patch(`${API_URL}/DataSources/${id}`, data, { headers: { Authorization: Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async getDatasources({ Authorization, query }: { Authorization?: string, query?: any }): Promise<Array<Datasource>> {\r\n    return axios\r\n      .get(`${API_URL}/DataSources`, { headers: { Authorization: Authorization || Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err)\r\n  }\r\n\r\n  public static async getUserDatasources(id: string, query: any): Promise<Array<Datasource>> {\r\n    return axios\r\n      .get(`${API_URL}/users/${id}/dataSrouces`, { headers: { Authorization: Cookie.get('id') }, params: { ...query } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async getDatasourceById(id: string): Promise<Datasource> {\r\n    return axios\r\n      .get(`${API_URL}/DataSources/${id}`, { headers: { Authorization: Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async removeDatasource(id: string): Promise<Datasource> {\r\n    return axios\r\n      .delete(`${API_URL}/DataSources/${id}`, { headers: { Authorization: Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async getDocList(id: string): Promise<any> {\r\n    return axios\r\n      .get(`${API_URL}/DataSources/${id}/doc-list`, { headers: { Authorization: Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async getFieldList(id: string, docId: string): Promise<any> {\r\n    return axios\r\n      .get(`${API_URL}/DataSources/${id}/field-list`, { headers: { Authorization: Cookie.get('id') }, params: { docId } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async queryDatasource(query: string): Promise<any> {\r\n    return axios\r\n      .post('', {})\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n}\r\n\r\n","import axios from 'axios'\r\nimport config from 'next/config'\r\nimport Cookie from 'js-cookie'\r\nimport User from '../types/users.types'\r\nimport Dashboard from '../types/dashboard.types'\r\nimport Datasource from '../types/datasource.types'\r\nimport Widget from '../types/widget.types'\r\nimport WidgetSettings from '../types/widgetSettings.type'\r\nimport { promises } from 'dns'\r\n\r\nconst { API_URL } = config().publicRuntimeConfig\r\n\r\nexport default class WidgetSettingsActions {\r\n\r\n  // TODO\r\n  public static async createWidgetSettings(widgetSettings: WidgetSettings): Promise<WidgetSettings> {\r\n    return axios\r\n      .post(`${API_URL}/WidgetSettings`, widgetSettings, { headers: { Authorization: Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  // TODO\r\n  public static async getWidgetSettings(): Promise<Array<WidgetSettings>> {\r\n    return axios\r\n      .post('', {})\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  // TODO\r\n  public static async getWidgetSettingsById(id: string, Authorization?: string): Promise<WidgetSettings> {\r\n    return axios\r\n      .get(`${API_URL}/WidgetSettings/${id}`, { headers: { Authorization: Authorization || Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  // TODO\r\n  public static async updateWidgetSettings(id: string, widgetSettings: WidgetSettings): Promise<WidgetSettings> {\r\n    return axios\r\n      .patch(`${API_URL}/WidgetSettings/${id}`, widgetSettings, { headers: { Authorization: Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  // TODO\r\n  public static async deleteWidgetSettings(id: string): Promise<WidgetSettings> {\r\n    return axios\r\n      .post('', {})\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n\r\n  public static async executeWidgetQuery(id: string, Authorization: string): Promise<any> {\r\n    return axios\r\n      .get(`${API_URL}/WidgetSettings/${id}/execute-query`, { headers: { Authorization: Authorization || Cookie.get('id') } })\r\n      .then(res => res.data)\r\n      .catch(err => err.response)\r\n  }\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport WidgetIcon from '../widgets/widget-icon'\r\n\r\nimport TableChartIcon from '@material-ui/icons/TableChart'\r\nimport TimelineIcon from '@material-ui/icons/Timeline'\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart'\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge'\r\nimport PieChartIcon from '@material-ui/icons/PieChart'\r\nimport BarChartIcon from '@material-ui/icons/BarChart'\r\nimport ListAltIcon from '@material-ui/icons/ListAlt'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n}))\r\n\r\nconst MyWidgets = ({ addPredefinedWidget, widgetSettings }) => {\r\n  const classes = useStyles()\r\n\r\n  const TableWidgets = [\r\n    { title: 'Table', icon: <TableChartIcon /> }\r\n  ]\r\n  const ChartWidgets = [\r\n    { title: 'Line Chart', icon: <TimelineIcon /> },\r\n    { title: 'Bar Chart', icon: <BarChartIcon /> },\r\n    { title: 'Bubble Chart', icon: <BubbleChartIcon /> },\r\n    { title: 'Pie Chart', icon: <PieChartIcon /> },\r\n    { title: 'Donut Chart', icon: <DonutLargeIcon /> },\r\n    { title: 'Gantt Chart', icon: <ListAltIcon /> }\r\n  ]\r\n\r\n  const MyTableWidgets = widgetSettings.filter(widget => widget.type.indexOf('Table') > -1).map(widget => ({ ...widget, icon: TableWidgets.find($ => $.title == widget.type).icon }))\r\n  const MyChartWidgets = widgetSettings.filter(widget => widget.type.indexOf('Chart') > -1).map(widget => ({ ...widget, icon: ChartWidgets.find($ => $.title == widget.type).icon }))\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n        >\r\n          <Typography className={classes.heading}>Tables</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Grid container spacing={2}>\r\n            {MyTableWidgets.map(widget => (\r\n              <Grid item xs={4} key={widget.id}>\r\n                <WidgetIcon widget={widget} addPredefinedWidget={addPredefinedWidget} icon={widget.icon} title={widget.title} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n        >\r\n          <Typography className={classes.heading}>Charts</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Grid container spacing={2}>\r\n            {MyChartWidgets.map(widget => (\r\n              <Grid item xs={4} key={widget.id}>\r\n                <WidgetIcon widget={widget} addPredefinedWidget={addPredefinedWidget} icon={widget.icon} title={widget.title} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyWidgets","import { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport DashboardActions from '../../../actions/dashboard.actions'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Card from '@material-ui/core/Card'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n}))\r\n\r\nconst AddCollaboratorCard = ({ id, cancel }) => {\r\n  const classes = useStyles()\r\n  const [email, setEmail] = useState('')\r\n  const [permissions, setPermissions] = useState({ viewer: false, editor: false })\r\n\r\n  const handleEmailChange = e => { setEmail(e.target.value) }\r\n\r\n  const handlePermissionsChange = (event) => {\r\n    setPermissions({\r\n      ...permissions,\r\n      [event.target.name]: event.target.checked\r\n    })\r\n  }\r\n\r\n  const addCollaborator = async () => {\r\n    const { editor, viewer } = permissions\r\n    try {\r\n      const collaboration = await DashboardActions.addCollaborator({ email, editor, viewer, id })\r\n      if (collaboration.status == 500) {\r\n        Swal.fire('Error', collaboration.data.error.message, 'error')\r\n      } else {\r\n        if (collaboration.sent)\r\n          Swal.fire('Success', `${email} is now a collaborator on this board. `, 'success')\r\n        else\r\n          Swal.fire('Success', `${email} is not a member yet, but they'll be assigned as a collaborator as soon as they sign up. `, 'success')\r\n\r\n        setEmail('')\r\n        setPermissions({ editor: false, viewer: false })\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card style={{ marginBottom: 10 }}>\r\n      <Grid spacing={2} container style={{ margin: 0, width: '100%' }}>\r\n        <Grid item xs={6} className={classes.name}>\r\n          <TextField type=\"email\" onChange={handleEmailChange} label=\"Email\" placeholder=\"example@domain.com\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={6} style={{ display: 'flex', alignItems: 'flex-end' }}>\r\n          <FormControlLabel\r\n            style={{ margin: 0 }}\r\n            control={<Checkbox checked={permissions.viewer} onChange={handlePermissionsChange} name=\"viewer\" />}\r\n            label=\"Editor\"\r\n          />\r\n          <FormControlLabel\r\n            style={{ margin: 0 }}\r\n            control={<Checkbox checked={permissions.editor} onChange={handlePermissionsChange} name=\"editor\" />}\r\n            label=\"Viewer\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid spacing={2} container style={{ margin: 0, width: '100%', marginTop: 10 }}>\r\n        <Grid item xs={6}>\r\n          <Button fullWidth onClick={cancel}>Cancel</Button>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button fullWidth onClick={addCollaborator}>Add</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AddCollaboratorCard","import { makeStyles } from '@material-ui/core/styles'\r\nimport DashboardActions from '../../../actions/dashboard.actions'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Card from '@material-ui/core/Card'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  name: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center'\r\n  },\r\n  collaboratorActionButtons: {\r\n    display: 'flex'\r\n  }\r\n}))\r\n\r\nconst CollaboratorCard = ({ collaborator }) => {\r\n  const classes = useStyles()\r\n  const { id, email, firstName, lastName, sent } = collaborator\r\n  const { viewer, editor } = collaborator.permissions\r\n\r\n  return (\r\n    <Card style={{ marginBottom: 15 }}>\r\n      <Grid spacing={2} container style={{ margin: 0, width: '100%' }}>\r\n        <Grid item xs={7} className={classes.name}>\r\n          <Typography>{email}</Typography>\r\n          {\r\n            sent ?\r\n              (<Typography>{firstName} {lastName}</Typography>) :\r\n              (<Typography style={{ fontSize: 11 }}>User is not registered yet. They'll recieve the collaboration invitation once they register for an account</Typography>)\r\n          }\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <FormControlLabel\r\n            style={{ margin: 0 }}\r\n            control={<Checkbox name=\"viewer\" checked={editor} onChange={() => { console.log() }} />}\r\n            label=\"Editor\"\r\n          />\r\n          <FormControlLabel\r\n            style={{ margin: 0 }}\r\n            control={<Checkbox name=\"editor\" checked={viewer} onChange={() => { console.log() }} />}\r\n            label=\"Viewer\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2} className={classes.collaboratorActionButtons}>\r\n          <IconButton aria-label=\"delete\" style={{ outline: 'none' }}>\r\n            <DeleteIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CollaboratorCard","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Box from '@material-ui/core/Box'\r\nimport LockIcon from '@material-ui/icons/Lock'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport PrivacySettings from './privacy-settings'\r\nimport GeneralSettings from './general-settings'\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nconst a11yProps = (index) => {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: 500\r\n  }\r\n}))\r\n\r\nconst DashboardSettings = ({ id }) => {\r\n  const classes = useStyles()\r\n  const [value, setValue] = useState(0)\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"General Settings\" icon={<SettingsIcon />} {...a11yProps(0)} />\r\n          <Tab label=\"Privacy Settings\" icon={<LockIcon />} {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <div\r\n        index={value}\r\n      >\r\n        <TabPanel value={value} index={0}>\r\n          <GeneralSettings id={id} />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <PrivacySettings id={id} />\r\n        </TabPanel>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  }\r\n}))\r\n\r\nconst GeneralSettings = ({ id }) => {\r\n  const classes = useStyles()\r\n  const [state, setState] = useState({})\r\n\r\n  useEffect(() => {\r\n    const getInitialProps = async () => {\r\n      try {\r\n\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Dashboard Details</span>\r\n      </h2>\r\n      <div>\r\n        <TextField label=\"Title\" placeholder=\"Dashboard Title\" fullWidth />\r\n\r\n        <TextField\r\n          style={{ marginTop: 10 }}\r\n          fullWidth\r\n          label=\"Description\"\r\n          placeholder=\"Dashboard Description\"\r\n          multiline\r\n          rows={2}\r\n          rowsMax={4}\r\n        />\r\n\r\n        <Button fullWidth style={{ marginTop: 10 }}>Save Changes</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GeneralSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport DashboardActions from '../../../actions/dashboard.actions'\r\nimport CollaboratorCard from './collaborator-card'\r\nimport AddCollaboratorCard from './add-new-collaborator'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  }\r\n}))\r\n\r\nconst PrivacySettings = ({ id }) => {\r\n  const classes = useStyles()\r\n  const [collaborators, setCollaborators] = useState([])\r\n  const [isAddingCollaborator, setIsAddingCollaborator] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const getInitialProps = async () => {\r\n      try {\r\n        const $collaborators = await DashboardActions.getCollaborators({ id })\r\n        setCollaborators($collaborators)\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getInitialProps()\r\n  }, [])\r\n\r\n  const renderButtonOrAdd = () => {\r\n    return isAddingCollaborator ? <AddCollaboratorCard id={id} cancel={() => setIsAddingCollaborator(false)} /> :\r\n      <Button fullWidth style={{ marginBottom: 10, outline: 'none' }} onClick={() => setIsAddingCollaborator(true)}>Add New Collaborator</Button>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Collaborators</span>\r\n      </h2>\r\n      <div>\r\n        {renderButtonOrAdd()}\r\n        {collaborators.map(collaborator => <CollaboratorCard key={collaborator.id} collaborator={collaborator} />)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PrivacySettings","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport WidgetIcon from '../widgets/widget-icon'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport TableChartIcon from '@material-ui/icons/TableChart'\r\nimport TimelineIcon from '@material-ui/icons/Timeline'\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart'\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge'\r\nimport PieChartIcon from '@material-ui/icons/PieChart'\r\nimport BarChartIcon from '@material-ui/icons/BarChart'\r\nimport ListAltIcon from '@material-ui/icons/ListAlt'\r\nimport TextRotationNoneIcon from '@material-ui/icons/TextRotationNone'\r\nimport TouchAppIcon from '@material-ui/icons/TouchApp'\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox'\r\nimport DateRangeIcon from '@material-ui/icons/DateRange'\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\r\nimport DialpadIcon from '@material-ui/icons/Dialpad'\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked'\r\nimport SelectAllIcon from '@material-ui/icons/SelectAll'\r\nimport TextFormatIcon from '@material-ui/icons/TextFormat'\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields'\r\nimport GridOnIcon from '@material-ui/icons/GridOn'\r\nimport ReceiptIcon from '@material-ui/icons/Receipt'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\nimport ListIcon from '@material-ui/icons/List'\r\nimport SubjectIcon from '@material-ui/icons/Subject'\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\r\nimport TitleIcon from '@material-ui/icons/Title'\r\nimport ViewListIcon from '@material-ui/icons/ViewList'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n}))\r\n\r\nconst SystemWidgets = (props) => {\r\n  const classes = useStyles()\r\n\r\n  const TableWidgets = [\r\n    { title: 'Table', icon: <TableChartIcon /> }\r\n  ]\r\n  const ChartWidgets = [\r\n    { title: 'Line Chart', icon: <TimelineIcon /> },\r\n    { title: 'Bar Chart', icon: <BarChartIcon /> },\r\n    { title: 'Bubble Chart', icon: <BubbleChartIcon /> },\r\n    { title: 'Pie Chart', icon: <PieChartIcon /> },\r\n    { title: 'Donut Chart', icon: <DonutLargeIcon /> },\r\n    { title: 'Gantt Chart', icon: <ListAltIcon /> }\r\n  ]\r\n  const FormControlsWidgets = [\r\n    { title: 'Auto Complete', icon: <TextRotationNoneIcon /> },\r\n    { title: 'Button', icon: <TouchAppIcon /> },\r\n    { title: 'Checkbox', icon: <CheckBoxIcon /> },\r\n    { title: 'Date Time', icon: <DateRangeIcon /> },\r\n    { title: 'File', icon: <FileCopyIcon /> },\r\n    { title: 'Number', icon: <DialpadIcon /> },\r\n    { title: 'Password', icon: <VisibilityOffIcon /> },\r\n    { title: 'Radio', icon: <RadioButtonCheckedIcon /> },\r\n    { title: 'Select', icon: <SelectAllIcon /> },\r\n    { title: 'Text Area', icon: <TextFormatIcon /> },\r\n    { title: 'Text Field', icon: <TextFieldsIcon /> }\r\n  ]\r\n  const HtmlElementWidgets = [\r\n    { title: 'Accordion', icon: <ExpandMoreIcon /> },\r\n    { title: 'Data Grid', icon: <GridOnIcon /> },\r\n    { title: 'Div', icon: <ReceiptIcon /> },\r\n    { title: 'Image', icon: <ImageIcon /> },\r\n    { title: 'List', icon: <ListIcon /> },\r\n    { title: 'Paragraph', icon: <SubjectIcon /> },\r\n    { title: 'Progress Bar', icon: <AutorenewIcon /> },\r\n    { title: 'Span', icon: <TitleIcon /> },\r\n    { title: 'Tabs', icon: <ViewListIcon /> }\r\n  ]\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n        >\r\n          <Typography className={classes.heading}>Tables</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Grid container spacing={2}>\r\n            {TableWidgets.map(chart => (\r\n              <Grid item xs={4} key={uuidv4()}>\r\n                <WidgetIcon onWidgetClick={props.onWidgetClick} icon={chart.icon} title={chart.title} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n        >\r\n          <Typography className={classes.heading}>Charts</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Grid container spacing={2}>\r\n            {ChartWidgets.map(chart => (\r\n              <Grid item xs={4} key={uuidv4()}>\r\n                <WidgetIcon onWidgetClick={props.onWidgetClick} icon={chart.icon} title={chart.title} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n        >\r\n          <Typography className={classes.heading}>HTML Elements</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Grid container spacing={2}>\r\n            {HtmlElementWidgets.map(element => (\r\n              <Grid item xs={4} key={uuidv4()}>\r\n                <WidgetIcon onWidgetClick={props.onWidgetClick} icon={element.icon} title={element.title} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n        >\r\n          <Typography className={classes.heading}>Form Controls</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Grid container spacing={2}>\r\n            {FormControlsWidgets.map(control => (\r\n              <Grid item xs={4} key={uuidv4()}>\r\n                <WidgetIcon onWidgetClick={props.onWidgetClick} icon={control.icon} title={control.title} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SystemWidgets","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Box from '@material-ui/core/Box'\r\nimport SystemWidgets from './system-widgets'\r\nimport MyWidgets from './my-widgets'\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nconst a11yProps = (index) => {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n}))\r\n\r\nconst WidgetSidemenu = ({ onWidgetClick, widgetSettings, addPredefinedWidget }) => {\r\n  const classes = useStyles()\r\n  const [value, setValue] = useState(0)\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"System Widgets\" {...a11yProps(0)} />\r\n          <Tab label=\"My Widgets\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <div\r\n        index={value}\r\n      >\r\n        <TabPanel value={value} index={0}>\r\n          <SystemWidgets onWidgetClick={onWidgetClick} />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <MyWidgets addPredefinedWidget={addPredefinedWidget} widgetSettings={widgetSettings} />\r\n        </TabPanel>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WidgetSidemenu","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Input from '@material-ui/core/Input'\r\nimport Select from '@material-ui/core/Select'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst AreaChartWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n  const [datasources, setDatasources] = useState([])\r\n  const [datasource, setDatasource] = useState(!isAdding ? widget.dataSourceId : '')\r\n  const [docList, setDocList] = useState([])\r\n  const [doc, setDoc] = useState(!isAdding ? widget.config.docId : '')\r\n  const [fieldList, setFieldList] = useState([])\r\n  const [fields, setFields] = useState(!isAdding ? widget.config.fields : [])\r\n  const [query, setQuery] = useState({})\r\n\r\n  const getDatasources = async () => {\r\n    try {\r\n      const $datasources = await DataSourceActions.getDatasources({})\r\n      if (!isAdding) {\r\n        const $docList = await DataSourceActions.getDocList(datasource)\r\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\r\n        setDocList($docList)\r\n        setFieldList($fieldList)\r\n      }\r\n      setDatasources($datasources)\r\n      return $datasources\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getDocList = async (id) => {\r\n    try {\r\n      setDatasource(id)\r\n      const $docList = await DataSourceActions.getDocList(id)\r\n      setDocList($docList)\r\n      return $docList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getFieldList = async (id, docId) => {\r\n    try {\r\n      setDoc(docId)\r\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\r\n      setFieldList($fieldList)\r\n      return $fieldList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const handleDatasourceChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getDocList(value)\r\n  }\r\n\r\n  const handleDocChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getFieldList(datasource, value)\r\n  }\r\n\r\n  const handleFieldChange = name => event => {\r\n    const { checked } = event.target\r\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name))\r\n  }\r\n\r\n  const renderFieldSettings = () => fieldList.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Fields Settings</span>\r\n    </h2>\r\n\r\n    {fieldList.map(field => (<FormControlLabel\r\n      key={field}\r\n      control={\r\n        <Checkbox checked={fields.includes(field)} onChange={handleFieldChange(field)} value={field} />\r\n      }\r\n      label={field}\r\n    />))}\r\n  </div>) : <div></div>\r\n\r\n  const renderQuerySettings = () => fields.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Query Settings</span>\r\n    </h2>\r\n\r\n    {fields.map(field => (<div>\r\n\r\n    </div>))}\r\n  </div>) : <div></div>\r\n\r\n  const saveConfigSettings = async () => {\r\n    try {\r\n      const data = {\r\n        dataSourceId: datasource,\r\n        config: {\r\n          docId: doc,\r\n          fields,\r\n          type: 'simple',\r\n          func: 'find',\r\n          query: {}\r\n        },\r\n        type: 'Table'\r\n      }\r\n      if (isAdding) {\r\n        onWidgetAdd(data)\r\n      } else {\r\n        const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data)\r\n        handleSettingsClose(update)\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDatasources()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <div>\r\n        <h2 className={classes.h2}>\r\n          <span className={classes.span}>Widget Properties</span>\r\n        </h2>\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <InputLabel id='title'>Title</InputLabel>\r\n          <Input />\r\n        </FormControl>\r\n        <h2 className={classes.h2}>\r\n          <span className={classes.span}>Connection Settings</span>\r\n        </h2>\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <InputLabel id=\"data-source\">Data Source</InputLabel>\r\n          <Select\r\n            name=\"datasource\"\r\n            labelId=\"data-source\"\r\n            value={datasource}\r\n            onChange={handleDatasourceChange}\r\n          >\r\n            {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\r\n          <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\r\n          <Select\r\n            name=\"docList\"\r\n            labelId=\"doc-list\"\r\n            value={doc}\r\n            onChange={handleDocChange}\r\n          >\r\n            {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {renderFieldSettings()}\r\n\r\n        {renderQuerySettings()}\r\n\r\n        <Button fullWidth onClick={saveConfigSettings}>{isAdding ? 'Add' : 'Save'}</Button>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AreaChartWidgetSettings","import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  Chart,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  AreaSeries,\r\n  Title,\r\n  Legend,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { ArgumentScale, Animation } from '@devexpress/dx-react-chart';\r\nimport { scalePoint } from 'd3-scale';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst data = [\r\n  { year: '2010', android: 67225, ios: 46598 },\r\n  { year: '2011', android: 179873, ios: 90560 },\r\n  { year: '2012', android: 310088, ios: 118848 },\r\n  { year: '2015', android: 539318, ios: 189924 },\r\n];\r\n\r\nconst chartRootStyles = {\r\n  chart: {\r\n    paddingRight: '20px',\r\n  },\r\n};\r\nconst legendStyles = {\r\n  root: {\r\n    display: 'flex',\r\n    margin: 'auto',\r\n    flexDirection: 'row',\r\n  },\r\n};\r\nconst legendLabelStyles = theme => ({\r\n  label: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n});\r\nconst legendItemStyles = {\r\n  item: {\r\n    flexDirection: 'column',\r\n  },\r\n};\r\n\r\nconst ChartRootBase = ({ classes, ...restProps }) => (\r\n  <Chart.Root {...restProps} className={classes.chart} />\r\n);\r\nconst LegendRootBase = ({ classes, ...restProps }) => (\r\n  <Legend.Root {...restProps} className={classes.root} />\r\n);\r\nconst LegendLabelBase = ({ classes, ...restProps }) => (\r\n  <Legend.Label {...restProps} className={classes.label} />\r\n);\r\nconst LegendItemBase = ({ classes, ...restProps }) => (\r\n  <Legend.Item {...restProps} className={classes.item} />\r\n);\r\nconst ChartRoot = withStyles(chartRootStyles, { name: 'ChartRoot' })(ChartRootBase);\r\nconst LegendRoot = withStyles(legendStyles, { name: 'LegendRoot' })(LegendRootBase);\r\nconst LegendLabel = withStyles(legendLabelStyles, { name: 'LegendLabel' })(LegendLabelBase);\r\nconst LegendItem = withStyles(legendItemStyles, { name: 'LegendItem' })(LegendItemBase);\r\n\r\nexport default class Demo extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { data: chartData } = this.state;\r\n    return (\r\n      <Paper>\r\n        <Chart\r\n          data={chartData}\r\n          rootComponent={ChartRoot}\r\n        >\r\n          <ArgumentScale factory={scalePoint} />\r\n          <ArgumentAxis />\r\n          <ValueAxis />\r\n\r\n          <AreaSeries\r\n            name=\"Android\"\r\n            valueField=\"android\"\r\n            argumentField=\"year\"\r\n          />\r\n          <AreaSeries\r\n            name=\"iOS\"\r\n            valueField=\"ios\"\r\n            argumentField=\"year\"\r\n          />\r\n          <Animation />\r\n          <Legend\r\n            position=\"bottom\"\r\n            rootComponent={LegendRoot}\r\n            itemComponent={LegendItem}\r\n            labelComponent={LegendLabel}\r\n          />\r\n          <Title\r\n            text=\"Worldwide Sales to End Users by OS\"\r\n          />\r\n        </Chart>\r\n      </Paper>\r\n    );\r\n  }\r\n}","import AreaChartWidget from './area-chart-widget'\r\nimport AreaChartWidgetSettings from './area-chart-widget-settings'\r\nexport { AreaChartWidget, AreaChartWidgetSettings }","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Input from '@material-ui/core/Input'\r\nimport Select from '@material-ui/core/Select'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst BarChartWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n  const [datasources, setDatasources] = useState([])\r\n  const [datasource, setDatasource] = useState(!isAdding ? widget.dataSourceId : '')\r\n  const [docList, setDocList] = useState([])\r\n  const [doc, setDoc] = useState(!isAdding ? widget.config.docId : '')\r\n  const [fieldList, setFieldList] = useState([])\r\n  const [fields, setFields] = useState(!isAdding ? widget.config.fields : [])\r\n  const [query, setQuery] = useState({})\r\n\r\n  const getDatasources = async () => {\r\n    try {\r\n      const $datasources = await DataSourceActions.getDatasources({})\r\n      if (!isAdding) {\r\n        const $docList = await DataSourceActions.getDocList(datasource)\r\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\r\n        setDocList($docList)\r\n        setFieldList($fieldList)\r\n      }\r\n      setDatasources($datasources)\r\n      return $datasources\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getDocList = async (id) => {\r\n    try {\r\n      setDatasource(id)\r\n      const $docList = await DataSourceActions.getDocList(id)\r\n      setDocList($docList)\r\n      return $docList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getFieldList = async (id, docId) => {\r\n    try {\r\n      setDoc(docId)\r\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\r\n      setFieldList($fieldList)\r\n      return $fieldList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const handleDatasourceChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getDocList(value)\r\n  }\r\n\r\n  const handleDocChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getFieldList(datasource, value)\r\n  }\r\n\r\n  const handleFieldChange = name => event => {\r\n    const { checked } = event.target\r\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name))\r\n  }\r\n\r\n  const renderFieldSettings = () => fieldList.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Fields Settings</span>\r\n    </h2>\r\n\r\n    {fieldList.map(field => (<FormControlLabel\r\n      key={field}\r\n      control={\r\n        <Checkbox checked={fields.includes(field)} onChange={handleFieldChange(field)} value={field} />\r\n      }\r\n      label={field}\r\n    />))}\r\n  </div>) : <div></div>\r\n\r\n  const renderQuerySettings = () => fields.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Query Settings</span>\r\n    </h2>\r\n\r\n    {fields.map(field => (<div>\r\n\r\n    </div>))}\r\n  </div>) : <div></div>\r\n\r\n  const saveConfigSettings = async () => {\r\n    try {\r\n      const data = {\r\n        dataSourceId: datasource,\r\n        config: {\r\n          docId: doc,\r\n          fields,\r\n          type: 'simple',\r\n          func: 'find',\r\n          query: {}\r\n        },\r\n        type: 'Table'\r\n      }\r\n      if (isAdding) {\r\n        onWidgetAdd(data)\r\n      } else {\r\n        const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data)\r\n        handleSettingsClose(update)\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDatasources()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <div>\r\n        <h2 className={classes.h2}>\r\n          <span className={classes.span}>Widget Properties</span>\r\n        </h2>\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <InputLabel id='title'>Title</InputLabel>\r\n          <Input />\r\n        </FormControl>\r\n        <h2 className={classes.h2}>\r\n          <span className={classes.span}>Connection Settings</span>\r\n        </h2>\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <InputLabel id=\"data-source\">Data Source</InputLabel>\r\n          <Select\r\n            name=\"datasource\"\r\n            labelId=\"data-source\"\r\n            value={datasource}\r\n            onChange={handleDatasourceChange}\r\n          >\r\n            {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\r\n          <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\r\n          <Select\r\n            name=\"docList\"\r\n            labelId=\"doc-list\"\r\n            value={doc}\r\n            onChange={handleDocChange}\r\n          >\r\n            {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {renderFieldSettings()}\r\n\r\n        {renderQuerySettings()}\r\n\r\n        <Button fullWidth onClick={saveConfigSettings}>{isAdding ? 'Add' : 'Save'}</Button>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BarChartWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport {\r\n  Chart,\r\n  BarSeries,\r\n  Title,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n} from '@devexpress/dx-react-chart-material-ui'\r\nimport { Animation } from '@devexpress/dx-react-chart'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport BarChartWidgetSettings from './bar-chart-widget-settings'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500\r\n  },\r\n  widgetActions: {\r\n    display: 'flex',\r\n    backgroundColor: \"#3F51B5\",\r\n    borderTopRightRadius: \"5px\",\r\n    borderTopLeftRadius: \"5px\",\r\n  },\r\n  widgetTitle: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    paddingLeft: \"10px\"\r\n  },\r\n  actionButtons: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  }\r\n}))\r\n\r\nconst BarChartWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [data, setData] = useState([])\r\n  const [isLoadingData, setIsLoadingData] = useState(false)\r\n  const [refresh, setRefresh] = useState(0)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  const getWidgetData = async () => {\r\n    try {\r\n      const $data = await WidgetSettingsActions.executeWidgetQuery(widgetId)\r\n      console.log($data, $data)\r\n      setData($data)\r\n      return $data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getWidget = async () => {\r\n    try {\r\n      const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n      console.log('$widget', $widget)\r\n      setWidget($widget)\r\n      return $widget\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWidget()\r\n    getWidgetData()\r\n  }, [refresh])\r\n\r\n  const refreshData = async () => {\r\n    setIsLoadingData(true)\r\n    getWidget()\r\n    getWidgetData()\r\n    setIsLoadingData(false)\r\n  }\r\n\r\n  const handleSettingsClose = () => {\r\n    setRefresh(refresh + 1)\r\n    toggleDrawer('right', false)\r\n  }\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift'))\r\n      return\r\n    setMenuState({ ...menuState, [side]: open })\r\n  }\r\n\r\n  const renderChart = () => {\r\n    return isLoadingData || !widget ? (<CircularProgress />) : (\r\n      <Paper>\r\n        <Chart\r\n          data={data}\r\n        >\r\n          <ArgumentAxis />\r\n          <ValueAxis max={7} />\r\n\r\n          <BarSeries\r\n            valueField=\"total\"\r\n            argumentField=\"month\"\r\n          />\r\n          <Title text=\"World population\" />\r\n          <Animation />\r\n        </Chart>\r\n      </Paper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.widgetActions}>\r\n        <div className={classes.widgetTitle}>\r\n          <Typography style={{ color: \"#FFF\" }}>Widget Title</Typography>\r\n        </div>\r\n        <div className={classes.actionButtons}>\r\n          <IconButton onClick={toggleDrawer('right', true)}>\r\n            <SettingsIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton onClick={refreshData}>\r\n            <RefreshIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {renderChart()}\r\n      </div>\r\n      <Drawer anchor=\"right\" open={menuState.right} onClose={toggleDrawer('right', false)}>\r\n        <BarChartWidgetSettings widget={widget} handleSettingsClose={handleSettingsClose} />\r\n      </Drawer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BarChartWidget","import BarChartWidget from './bar-chart-widget'\r\nimport BarChartWidgetSettings from './bar-chart-widget-settings'\r\nexport { BarChartWidget, BarChartWidgetSettings }","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Input from '@material-ui/core/Input'\r\nimport Select from '@material-ui/core/Select'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst DonutChartWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n  const [datasources, setDatasources] = useState([])\r\n  const [datasource, setDatasource] = useState(!isAdding ? widget.dataSourceId : '')\r\n  const [docList, setDocList] = useState([])\r\n  const [doc, setDoc] = useState(!isAdding ? widget.config.docId : '')\r\n  const [fieldList, setFieldList] = useState([])\r\n  const [fields, setFields] = useState(!isAdding ? widget.config.fields : [])\r\n  const [query, setQuery] = useState({})\r\n\r\n  const getDatasources = async () => {\r\n    try {\r\n      const $datasources = await DataSourceActions.getDatasources({})\r\n      if (!isAdding) {\r\n        const $docList = await DataSourceActions.getDocList(datasource)\r\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\r\n        setDocList($docList)\r\n        setFieldList($fieldList)\r\n      }\r\n      setDatasources($datasources)\r\n      return $datasources\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getDocList = async (id) => {\r\n    try {\r\n      setDatasource(id)\r\n      const $docList = await DataSourceActions.getDocList(id)\r\n      setDocList($docList)\r\n      return $docList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getFieldList = async (id, docId) => {\r\n    try {\r\n      setDoc(docId)\r\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\r\n      setFieldList($fieldList)\r\n      return $fieldList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const handleDatasourceChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getDocList(value)\r\n  }\r\n\r\n  const handleDocChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getFieldList(datasource, value)\r\n  }\r\n\r\n  const handleFieldChange = name => event => {\r\n    const { checked } = event.target\r\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name))\r\n  }\r\n\r\n  const renderFieldSettings = () => fieldList.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Fields Settings</span>\r\n    </h2>\r\n\r\n    {fieldList.map(field => (<FormControlLabel\r\n      key={field}\r\n      control={\r\n        <Checkbox checked={fields.includes(field)} onChange={handleFieldChange(field)} value={field} />\r\n      }\r\n      label={field}\r\n    />))}\r\n  </div>) : <div></div>\r\n\r\n  const renderQuerySettings = () => fields.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Query Settings</span>\r\n    </h2>\r\n\r\n    {fields.map(field => (<div>\r\n\r\n    </div>))}\r\n  </div>) : <div></div>\r\n\r\n  const saveConfigSettings = async () => {\r\n    try {\r\n      const data = {\r\n        dataSourceId: datasource,\r\n        config: {\r\n          docId: doc,\r\n          fields,\r\n          type: 'simple',\r\n          func: 'find',\r\n          query: {}\r\n        },\r\n        type: 'Table'\r\n      }\r\n      if (isAdding) {\r\n        onWidgetAdd(data)\r\n      } else {\r\n        const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data)\r\n        handleSettingsClose(update)\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDatasources()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <div>\r\n        <h2 className={classes.h2}>\r\n          <span className={classes.span}>Widget Properties</span>\r\n        </h2>\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <InputLabel id='title'>Title</InputLabel>\r\n          <Input />\r\n        </FormControl>\r\n        <h2 className={classes.h2}>\r\n          <span className={classes.span}>Connection Settings</span>\r\n        </h2>\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <InputLabel id=\"data-source\">Data Source</InputLabel>\r\n          <Select\r\n            name=\"datasource\"\r\n            labelId=\"data-source\"\r\n            value={datasource}\r\n            onChange={handleDatasourceChange}\r\n          >\r\n            {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\r\n          <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\r\n          <Select\r\n            name=\"docList\"\r\n            labelId=\"doc-list\"\r\n            value={doc}\r\n            onChange={handleDocChange}\r\n          >\r\n            {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {renderFieldSettings()}\r\n\r\n        {renderQuerySettings()}\r\n\r\n        <Button fullWidth onClick={saveConfigSettings}>{isAdding ? 'Add' : 'Save'}</Button>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DonutChartWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport {\r\n  Chart,\r\n  PieSeries,\r\n  Title,\r\n} from '@devexpress/dx-react-chart-material-ui'\r\nimport { Animation } from '@devexpress/dx-react-chart'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport DonutChartWidgetSettings from './donut-chart-widget-settings'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500\r\n  },\r\n  widgetActions: {\r\n    display: 'flex',\r\n    backgroundColor: \"#3F51B5\",\r\n    borderTopRightRadius: \"5px\",\r\n    borderTopLeftRadius: \"5px\",\r\n  },\r\n  widgetTitle: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    paddingLeft: \"10px\"\r\n  },\r\n  actionButtons: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  }\r\n}))\r\n\r\nconst DonutChartWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [data, setData] = useState([])\r\n  const [isLoadingData, setIsLoadingData] = useState(false)\r\n  const [refresh, setRefresh] = useState(0)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  const getWidgetData = async () => {\r\n    try {\r\n      const $data = await WidgetSettingsActions.executeWidgetQuery(widgetId)\r\n      console.log($data, $data)\r\n      setData($data)\r\n      return $data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getWidget = async () => {\r\n    try {\r\n      const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n      console.log('$widget', $widget)\r\n      setWidget($widget)\r\n      return $widget\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWidget()\r\n    getWidgetData()\r\n  }, [refresh])\r\n\r\n  const refreshData = async () => {\r\n    setIsLoadingData(true)\r\n    getWidget()\r\n    getWidgetData()\r\n    setIsLoadingData(false)\r\n  }\r\n\r\n  const handleSettingsClose = () => {\r\n    setRefresh(refresh + 1)\r\n    toggleDrawer('right', false)\r\n  }\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift'))\r\n      return\r\n    setMenuState({ ...menuState, [side]: open })\r\n  }\r\n\r\n  const renderChart = () => {\r\n    return isLoadingData || !widget ? (<CircularProgress />) : (\r\n      <Paper>\r\n        <Chart data={data}>\r\n          <PieSeries\r\n            valueField=\"total\"\r\n            argumentField=\"month\"\r\n            innerRadius={0.6}\r\n          />\r\n          <Title\r\n            text=\"The Population of Continents and Regions\"\r\n          />\r\n          <Animation />\r\n        </Chart>\r\n      </Paper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.widgetActions}>\r\n        <div className={classes.widgetTitle}>\r\n          <Typography style={{ color: \"#FFF\" }}>Widget Title</Typography>\r\n        </div>\r\n        <div className={classes.actionButtons}>\r\n          <IconButton onClick={toggleDrawer('right', true)}>\r\n            <SettingsIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton onClick={refreshData}>\r\n            <RefreshIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {renderChart()}\r\n      </div>\r\n      <Drawer anchor=\"right\" open={menuState.right} onClose={toggleDrawer('right', false)}>\r\n        <DonutChartWidgetSettings widget={widget} handleSettingsClose={handleSettingsClose} />\r\n      </Drawer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DonutChartWidget","import DonutChartWidget from './donut-chart-widget'\r\nimport DonutChartWidgetSettings from './donut-chart-widget-settings'\r\nexport { DonutChartWidget, DonutChartWidgetSettings }","export * from './area-chart'\r\nexport * from './bar-chart'\r\nexport * from './donut-chart'\r\n// export * from './gantt-chart'\r\nexport * from './line-chart'\r\nexport * from './pie-chart'","import LineChartWidget from './line-chart-widget'\r\nimport LineChartWidgetSettings from './line-chart-widget-settings'\r\nexport { LineChartWidget, LineChartWidgetSettings }","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Input from '@material-ui/core/Input'\r\nimport Select from '@material-ui/core/Select'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst LineChartWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n  const [datasources, setDatasources] = useState([])\r\n  const [datasource, setDatasource] = useState(!isAdding ? widget.dataSourceId : '')\r\n  const [docList, setDocList] = useState([])\r\n  const [doc, setDoc] = useState(!isAdding ? widget.config.docId : '')\r\n  const [fieldList, setFieldList] = useState([])\r\n  const [fields, setFields] = useState(!isAdding ? widget.config.fields : [])\r\n  const [query, setQuery] = useState({})\r\n\r\n  const getDatasources = async () => {\r\n    try {\r\n      const $datasources = await DataSourceActions.getDatasources({})\r\n      if (!isAdding) {\r\n        const $docList = await DataSourceActions.getDocList(datasource)\r\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\r\n        setDocList($docList)\r\n        setFieldList($fieldList)\r\n      }\r\n      setDatasources($datasources)\r\n      return $datasources\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getDocList = async (id) => {\r\n    try {\r\n      setDatasource(id)\r\n      const $docList = await DataSourceActions.getDocList(id)\r\n      setDocList($docList)\r\n      return $docList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getFieldList = async (id, docId) => {\r\n    try {\r\n      setDoc(docId)\r\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\r\n      setFieldList($fieldList)\r\n      return $fieldList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const handleDatasourceChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getDocList(value)\r\n  }\r\n\r\n  const handleDocChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getFieldList(datasource, value)\r\n  }\r\n\r\n  const handleFieldChange = name => event => {\r\n    const { checked } = event.target\r\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name))\r\n  }\r\n\r\n  const renderFieldSettings = () => fieldList.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Fields Settings</span>\r\n    </h2>\r\n\r\n    {fieldList.map(field => (<FormControlLabel\r\n      key={field}\r\n      control={\r\n        <Checkbox checked={fields.includes(field)} onChange={handleFieldChange(field)} value={field} />\r\n      }\r\n      label={field}\r\n    />))}\r\n  </div>) : <div></div>\r\n\r\n  const renderQuerySettings = () => fields.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Query Settings</span>\r\n    </h2>\r\n\r\n    {fields.map(field => (<div>\r\n\r\n    </div>))}\r\n  </div>) : <div></div>\r\n\r\nconst saveConfigSettings = async () => {\r\n  try {\r\n    const data = {\r\n      dataSourceId: datasource,\r\n      config: {\r\n        docId: doc,\r\n        fields,\r\n        type: 'simple',\r\n        func: 'find',\r\n        query: {}\r\n      },\r\n      type: 'Table'\r\n    }\r\n    if (isAdding) {\r\n      onWidgetAdd(data)\r\n    } else {\r\n      const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data)\r\n      handleSettingsClose(update)\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\n  useEffect(() => {\r\n    getDatasources()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <div>\r\n        <h2 className={classes.h2}>\r\n          <span className={classes.span}>Widget Properties</span>\r\n        </h2>\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <InputLabel id='title'>Title</InputLabel>\r\n          <Input />\r\n        </FormControl>\r\n        <h2 className={classes.h2}>\r\n          <span className={classes.span}>Connection Settings</span>\r\n        </h2>\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <InputLabel id=\"data-source\">Data Source</InputLabel>\r\n          <Select\r\n            name=\"datasource\"\r\n            labelId=\"data-source\"\r\n            value={datasource}\r\n            onChange={handleDatasourceChange}\r\n          >\r\n            {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\r\n          <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\r\n          <Select\r\n            name=\"docList\"\r\n            labelId=\"doc-list\"\r\n            value={doc}\r\n            onChange={handleDocChange}\r\n          >\r\n            {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {renderFieldSettings()}\r\n\r\n        {renderQuerySettings()}\r\n\r\n        <Button fullWidth onClick={saveConfigSettings}>{isAdding ? 'Add' : 'Save'}</Button>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineChartWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport {\r\n  Chart,\r\n  ArgumentAxis,\r\n  ValueAxis,\r\n  LineSeries,\r\n  Legend,\r\n} from '@devexpress/dx-react-chart-material-ui'\r\nimport { ValueScale } from '@devexpress/dx-react-chart'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport LineChartWidgetSettings from './line-chart-widget-settings'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500\r\n  },\r\n  widgetActions: {\r\n    display: 'flex',\r\n    backgroundColor: \"#3F51B5\",\r\n    borderTopRightRadius: \"5px\",\r\n    borderTopLeftRadius: \"5px\",\r\n  },\r\n  widgetTitle: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    paddingLeft: \"10px\"\r\n  },\r\n  actionButtons: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  }\r\n}))\r\n\r\nconst LineChartWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [data, setData] = useState([])\r\n  const [isLoadingData, setIsLoadingData] = useState(false)\r\n  const [refresh, setRefresh] = useState(0)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  const getWidgetData = async () => {\r\n    try {\r\n      const $data = await WidgetSettingsActions.executeWidgetQuery(widgetId)\r\n      setData($data)\r\n      return $data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getWidget = async () => {\r\n    try {\r\n      const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n      setWidget($widget)\r\n      return $widget\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWidget()\r\n    getWidgetData()\r\n  }, [refresh])\r\n\r\n  const refreshData = async () => {\r\n    setIsLoadingData(true)\r\n    getWidget()\r\n    getWidgetData()\r\n    setIsLoadingData(false)\r\n  }\r\n\r\n  const handleSettingsClose = () => {\r\n    setRefresh(refresh + 1)\r\n    toggleDrawer('right', false)\r\n  }\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift'))\r\n      return\r\n    setMenuState({ ...menuState, [side]: open })\r\n  }\r\n\r\n  const renderTable = () => {\r\n    return isLoadingData || !widget ? (<CircularProgress />) : <Paper>\r\n      <Chart data={data}>\r\n        <ValueScale name=\"total\" />\r\n        <ArgumentAxis />\r\n        <ValueAxis scaleName=\"total\" position=\"left\" showGrid={true} showLine showTicks />\r\n        <LineSeries\r\n          name=\"Total Transactions\"\r\n          valueField=\"total\"\r\n          argumentField=\"month\"\r\n          scaleName=\"total\"\r\n        />\r\n        <Legend />\r\n      </Chart>\r\n    </Paper>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.widgetActions}>\r\n        <div className={classes.widgetTitle}>\r\n          <Typography style={{ color: \"#FFF\" }}>Widget Title</Typography>\r\n        </div>\r\n        <div className={classes.actionButtons}>\r\n          <IconButton onClick={toggleDrawer('right', true)}>\r\n            <SettingsIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton onClick={refreshData}>\r\n            <RefreshIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {renderTable()}\r\n      </div>\r\n      <Drawer anchor=\"right\" open={menuState.right} onClose={toggleDrawer('right', false)}>\r\n        <LineChartWidgetSettings widget={widget} handleSettingsClose={handleSettingsClose} />\r\n      </Drawer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineChartWidget","import PieChartWidget from './pie-chart-widget'\r\nimport PieChartWidgetSettings from './pie-chart-widget-settings'\r\nexport { PieChartWidget, PieChartWidgetSettings }","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Input from '@material-ui/core/Input'\r\nimport Select from '@material-ui/core/Select'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst PieChartWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n  const [datasources, setDatasources] = useState([])\r\n  const [datasource, setDatasource] = useState(!isAdding ? widget.dataSourceId : '')\r\n  const [docList, setDocList] = useState([])\r\n  const [doc, setDoc] = useState(!isAdding ? widget.config.docId : '')\r\n  const [fieldList, setFieldList] = useState([])\r\n  const [fields, setFields] = useState(!isAdding ? widget.config.fields : [])\r\n  const [query, setQuery] = useState({})\r\n\r\n  const getDatasources = async () => {\r\n    try {\r\n      const $datasources = await DataSourceActions.getDatasources({})\r\n      if (!isAdding) {\r\n        const $docList = await DataSourceActions.getDocList(datasource)\r\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\r\n        setDocList($docList)\r\n        setFieldList($fieldList)\r\n      }\r\n      setDatasources($datasources)\r\n      return $datasources\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getDocList = async (id) => {\r\n    try {\r\n      setDatasource(id)\r\n      const $docList = await DataSourceActions.getDocList(id)\r\n      setDocList($docList)\r\n      return $docList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getFieldList = async (id, docId) => {\r\n    try {\r\n      setDoc(docId)\r\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\r\n      setFieldList($fieldList)\r\n      return $fieldList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const handleDatasourceChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getDocList(value)\r\n  }\r\n\r\n  const handleDocChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getFieldList(datasource, value)\r\n  }\r\n\r\n  const handleFieldChange = name => event => {\r\n    const { checked } = event.target\r\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name))\r\n  }\r\n\r\n  const renderFieldSettings = () => fieldList.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Fields Settings</span>\r\n    </h2>\r\n\r\n    {fieldList.map(field => (<FormControlLabel\r\n      key={field}\r\n      control={\r\n        <Checkbox checked={fields.includes(field)} onChange={handleFieldChange(field)} value={field} />\r\n      }\r\n      label={field}\r\n    />))}\r\n  </div>) : <div></div>\r\n\r\n  const renderQuerySettings = () => fields.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Query Settings</span>\r\n    </h2>\r\n\r\n    {fields.map(field => (<div>\r\n\r\n    </div>))}\r\n  </div>) : <div></div>\r\n\r\n  const saveConfigSettings = async () => {\r\n    try {\r\n      const data = {\r\n        dataSourceId: datasource,\r\n        config: {\r\n          docId: doc,\r\n          fields,\r\n          type: 'simple',\r\n          func: 'find',\r\n          query: {}\r\n        },\r\n        type: 'Table'\r\n      }\r\n      if (isAdding) {\r\n        onWidgetAdd(data)\r\n      } else {\r\n        const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data)\r\n        handleSettingsClose(update)\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDatasources()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel id='title'>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Connection Settings</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel id=\"data-source\">Data Source</InputLabel>\r\n        <Select\r\n          name=\"datasource\"\r\n          labelId=\"data-source\"\r\n          value={datasource}\r\n          onChange={handleDatasourceChange}\r\n        >\r\n          {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\r\n        <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\r\n        <Select\r\n          name=\"docList\"\r\n          labelId=\"doc-list\"\r\n          value={doc}\r\n          onChange={handleDocChange}\r\n        >\r\n          {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\r\n        </Select>\r\n      </FormControl>\r\n\r\n      {renderFieldSettings()}\r\n\r\n      {renderQuerySettings()}\r\n\r\n      <Button fullWidth onClick={saveConfigSettings}>{isAdding ? 'Add' : 'Save'}</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PieChartWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport {\r\n  Chart,\r\n  PieSeries,\r\n  Title,\r\n} from '@devexpress/dx-react-chart-material-ui'\r\nimport { Animation } from '@devexpress/dx-react-chart'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport PieChartWidgetSettings from './pie-chart-widget-settings'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500\r\n  },\r\n  widgetActions: {\r\n    display: 'flex',\r\n    backgroundColor: \"#3F51B5\",\r\n    borderTopRightRadius: \"5px\",\r\n    borderTopLeftRadius: \"5px\",\r\n  },\r\n  widgetTitle: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    paddingLeft: \"10px\"\r\n  },\r\n  actionButtons: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  }\r\n}))\r\n\r\nconst PieChartWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [data, setData] = useState([])\r\n  const [isLoadingData, setIsLoadingData] = useState(false)\r\n  const [refresh, setRefresh] = useState(0)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  const getWidgetData = async () => {\r\n    try {\r\n      const $data = await WidgetSettingsActions.executeWidgetQuery(widgetId)\r\n      console.log($data, $data)\r\n      setData($data)\r\n      return $data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getWidget = async () => {\r\n    try {\r\n      const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n      console.log('$widget', $widget)\r\n      setWidget($widget)\r\n      return $widget\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWidget()\r\n    getWidgetData()\r\n  }, [refresh])\r\n\r\n  const refreshData = async () => {\r\n    setIsLoadingData(true)\r\n    getWidget()\r\n    getWidgetData()\r\n    setIsLoadingData(false)\r\n  }\r\n\r\n  const handleSettingsClose = () => {\r\n    setRefresh(refresh + 1)\r\n    toggleDrawer('right', false)\r\n  }\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift'))\r\n      return\r\n    setMenuState({ ...menuState, [side]: open })\r\n  }\r\n\r\n  const renderChart = () => {\r\n    return isLoadingData || !widget ? (<CircularProgress />) : (\r\n      <Paper>\r\n        <Chart\r\n          data={data}\r\n        >\r\n          <PieSeries\r\n            valueField=\"total\"\r\n            argumentField=\"month\"\r\n          />\r\n          <Title\r\n            text=\"Area of Countries\"\r\n          />\r\n          <Animation />\r\n        </Chart>\r\n      </Paper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.widgetActions}>\r\n        <div className={classes.widgetTitle}>\r\n          <Typography style={{ color: \"#FFF\" }}>Widget Title</Typography>\r\n        </div>\r\n        <div className={classes.actionButtons}>\r\n          <IconButton onClick={toggleDrawer('right', true)}>\r\n            <SettingsIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton onClick={refreshData}>\r\n            <RefreshIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {renderChart()}\r\n      </div>\r\n      <Drawer anchor=\"right\" open={menuState.right} onClose={toggleDrawer('right', false)}>\r\n        <PieChartWidgetSettings widget={widget} handleSettingsClose={handleSettingsClose} />\r\n      </Drawer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PieChartWidget","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst AutoCompleteWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n  const [datasources, setDatasources] = useState([])\r\n  const [datasource, setDatasource] = useState(!isAdding ? widget.dataSourceId : '')\r\n  const [docList, setDocList] = useState([])\r\n  const [doc, setDoc] = useState(!isAdding ? widget.config.docId : '')\r\n  const [fieldList, setFieldList] = useState([])\r\n  const [fields, setFields] = useState(!isAdding ? widget.config.fields : [])\r\n\r\n  const getDatasources = async () => {\r\n    try {\r\n      const $datasources = await DataSourceActions.getDatasources({})\r\n      if (!isAdding) {\r\n        const $docList = await DataSourceActions.getDocList(datasource)\r\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\r\n        setDocList($docList)\r\n        setFieldList($fieldList)\r\n      }\r\n      setDatasources($datasources)\r\n      return $datasources\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getDocList = async (id) => {\r\n    try {\r\n      setDatasource(id)\r\n      const $docList = await DataSourceActions.getDocList(id)\r\n      setDocList($docList)\r\n      return $docList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getFieldList = async (id, docId) => {\r\n    try {\r\n      setDoc(docId)\r\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\r\n      setFieldList($fieldList)\r\n      return $fieldList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const handleDatasourceChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getDocList(value)\r\n  }\r\n\r\n  const handleDocChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getFieldList(datasource, value)\r\n  }\r\n\r\n  const handleFieldChange = name => event => {\r\n    const { checked } = event.target\r\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name))\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDatasources()\r\n  }, [])\r\n\r\n  const renderFieldSettings = () => fieldList.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Fields Settings</span>\r\n    </h2>\r\n\r\n    {fieldList.map(field => (<FormControlLabel\r\n      key={field}\r\n      control={\r\n        <Checkbox checked={fields.includes(field)} onChange={handleFieldChange(field)} value={field} />\r\n      }\r\n      label={field}\r\n    />))}\r\n  </div>) : <div></div>\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Label</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>ID</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Placeholder</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Class name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Value</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Unique Properties</span>\r\n      </h2>\r\n      <FormGroup row>\r\n        <RadioGroup style={{ justifyContent: 'space-evenly', width: '100%', flexDirection: 'row' }}>\r\n          <FormControlLabel value=\"female\" control={<Radio />} label=\"From Data Source\" />\r\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"Fixed Values\" />\r\n        </RadioGroup>\r\n      </FormGroup>\r\n      <div>\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <InputLabel id=\"data-source\">Data Source</InputLabel>\r\n          <Select\r\n            name=\"datasource\"\r\n            labelId=\"data-source\"\r\n            value={datasource}\r\n            onChange={handleDatasourceChange}\r\n          >\r\n            {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\r\n          <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\r\n          <Select\r\n            name=\"docList\"\r\n            labelId=\"doc-list\"\r\n            value={doc}\r\n            onChange={handleDocChange}\r\n          >\r\n            {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {renderFieldSettings()}\r\n      </div>\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AutoCompleteWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst AutoCompleteWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        console.log($widget)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <TextField\r\n    // label={widget.config.label || ''}\r\n    // id={widget.config.id || ''}\r\n    // placeholder={widget.config.placeholder || ''}\r\n    // className={widget.config.className || ''}\r\n    // styles={widget.config.styles || {}}\r\n    // name={widget.config.name || ''}\r\n    // value={widget.config.value || ''}\r\n    // type={widget.config.type || 'text'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default AutoCompleteWidget","import AutoCompleteWidget from './autocomplete-widget'\r\nimport AutoCompleteWidgetSettings from './autocomplete-widget-settings'\r\n\r\nexport {\r\n  AutoCompleteWidget,\r\n  AutoCompleteWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst ButtonWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Label</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>ID</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Placeholder</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Class name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Value</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Type</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ButtonWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst ButtonWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        console.log($widget)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <TextField\r\n    // label={widget.config.label || ''}\r\n    // id={widget.config.id || ''}\r\n    // placeholder={widget.config.placeholder || ''}\r\n    // className={widget.config.className || ''}\r\n    // styles={widget.config.styles || {}}\r\n    // name={widget.config.name || ''}\r\n    // value={widget.config.value || ''}\r\n    // type={widget.config.type || 'text'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ButtonWidget","import ButtonWidget from './button-widget'\r\nimport ButtonWidgetSettings from './button-widget-settings'\r\n\r\nexport {\r\n  ButtonWidget,\r\n  ButtonWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst CheckboxWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Label</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>ID</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Placeholder</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Class name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Value</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Type</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckboxWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst CheckboxWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        console.log($widget)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <TextField\r\n    // label={widget.config.label || ''}\r\n    // id={widget.config.id || ''}\r\n    // placeholder={widget.config.placeholder || ''}\r\n    // className={widget.config.className || ''}\r\n    // styles={widget.config.styles || {}}\r\n    // name={widget.config.name || ''}\r\n    // value={widget.config.value || ''}\r\n    // type={widget.config.type || 'text'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CheckboxWidget","import CheckboxWidget from './checkbox-widget'\r\nimport CheckboxWidgetSettings from './checkbox-widget-settings'\r\n\r\nexport {\r\n  CheckboxWidget,\r\n  CheckboxWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst DateTimeWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Label</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>ID</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Placeholder</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Class name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Value</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Type</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DateTimeWidgetSettings","import DateTimeWidget from './datetime-widget'\r\nimport DateTimeWidgetSettings from './datetime-widget-settings'\r\n\r\nexport {\r\n  DateTimeWidget,\r\n  DateTimeWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst FileWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Label</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>ID</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Placeholder</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Class name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Value</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Type</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst FileWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        console.log($widget)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <TextField\r\n    // label={widget.config.label || ''}\r\n    // id={widget.config.id || ''}\r\n    // placeholder={widget.config.placeholder || ''}\r\n    // className={widget.config.className || ''}\r\n    // styles={widget.config.styles || {}}\r\n    // name={widget.config.name || ''}\r\n    // value={widget.config.value || ''}\r\n    // type={widget.config.type || 'text'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default FileWidget","import FileWidget from './file-widget'\r\nimport FileWidgetSettings from './file-widget-settings'\r\n\r\nexport {\r\n  FileWidget,\r\n  FileWidgetSettings\r\n}","export * from './autocomplete'\r\nexport * from './button'\r\nexport * from './checkbox'\r\nexport * from './date-time'\r\nexport * from './file'\r\nexport * from './number'\r\nexport * from './password'\r\nexport * from './radio'\r\nexport * from './select'\r\nexport * from './textarea'\r\nexport * from './textfield'","import NumberWidget from './number-widget'\r\nimport NumberWidgetSettings from './number-widget-settings'\r\n\r\nexport {\r\n  NumberWidget,\r\n  NumberWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst NumberWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Label</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>ID</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Placeholder</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Class name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Value</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Type</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NumberWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst NumberWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        console.log($widget)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <TextField\r\n    // label={widget.config.label || ''}\r\n    // id={widget.config.id || ''}\r\n    // placeholder={widget.config.placeholder || ''}\r\n    // className={widget.config.className || ''}\r\n    // styles={widget.config.styles || {}}\r\n    // name={widget.config.name || ''}\r\n    // value={widget.config.value || ''}\r\n    // type={widget.config.type || 'text'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default NumberWidget","import PasswordWidget from './password-widget'\r\nimport PasswordWidgetSettings from './password-widget-settings'\r\n\r\nexport {\r\n  PasswordWidget,\r\n  PasswordWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst PasswordWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Label</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>ID</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Placeholder</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Class name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Value</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Type</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PasswordWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst PasswordWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        console.log($widget)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <TextField\r\n    // label={widget.config.label || ''}\r\n    // id={widget.config.id || ''}\r\n    // placeholder={widget.config.placeholder || ''}\r\n    // className={widget.config.className || ''}\r\n    // styles={widget.config.styles || {}}\r\n    // name={widget.config.name || ''}\r\n    // value={widget.config.value || ''}\r\n    // type={widget.config.type || 'text'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PasswordWidget","import RadioWidget from './radio-widget'\r\nimport RadioWidgetSettings from './radio-widget-settings'\r\n\r\nexport {\r\n  RadioWidget,\r\n  RadioWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst RadioWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Label</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>ID</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Placeholder</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Class name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Value</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Type</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RadioWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst RadioWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        console.log($widget)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <TextField\r\n    // label={widget.config.label || ''}\r\n    // id={widget.config.id || ''}\r\n    // placeholder={widget.config.placeholder || ''}\r\n    // className={widget.config.className || ''}\r\n    // styles={widget.config.styles || {}}\r\n    // name={widget.config.name || ''}\r\n    // value={widget.config.value || ''}\r\n    // type={widget.config.type || 'text'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default RadioWidget","import SelectWidget from './select-widget'\r\nimport SelectWidgetSettings from './select-widget-settings'\r\n\r\nexport {\r\n  SelectWidget,\r\n  SelectWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst SelectWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Label</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>ID</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Placeholder</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Class name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Value</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Type</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst SelectWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        console.log($widget)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <TextField\r\n    // label={widget.config.label || ''}\r\n    // id={widget.config.id || ''}\r\n    // placeholder={widget.config.placeholder || ''}\r\n    // className={widget.config.className || ''}\r\n    // styles={widget.config.styles || {}}\r\n    // name={widget.config.name || ''}\r\n    // value={widget.config.value || ''}\r\n    // type={widget.config.type || 'text'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SelectWidget","import TextAreaWidget from './textarea-widget'\r\nimport TextAreaWidgetSettings from './textarea-widget-settings'\r\n\r\nexport {\r\n  TextAreaWidget,\r\n  TextAreaWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst TextAreaWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Label</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>ID</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Placeholder</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Class name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Value</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Type</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Unique Properties</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Rows</InputLabel>\r\n        <Input type=\"number\" />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Columns</InputLabel>\r\n        <Input type=\"number\" />\r\n      </FormControl>\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TextAreaWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst TextAreaWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        console.log($widget)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <TextField\r\n    // label={widget.config.label || ''}\r\n    // id={widget.config.id || ''}\r\n    // placeholder={widget.config.placeholder || ''}\r\n    // className={widget.config.className || ''}\r\n    // styles={widget.config.styles || {}}\r\n    // name={widget.config.name || ''}\r\n    // value={widget.config.value || ''}\r\n    // type={widget.config.type || 'text'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TextAreaWidget","import TextFieldWidget from './text-field-widget'\r\nimport TextFieldWidgetSettings from './text-field-widget-settings'\r\n\r\nexport {\r\n  TextFieldWidget,\r\n  TextFieldWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst TextFieldWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Label</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>ID</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Placeholder</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Class name</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Value</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Type</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TextFieldWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst TextFieldWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        console.log($widget)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <TextField\r\n    // label={widget.config.label || ''}\r\n    // id={widget.config.id || ''}\r\n    // placeholder={widget.config.placeholder || ''}\r\n    // className={widget.config.className || ''}\r\n    // styles={widget.config.styles || {}}\r\n    // name={widget.config.name || ''}\r\n    // value={widget.config.value || ''}\r\n    // type={widget.config.type || 'text'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TextFieldWidget","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst AccordionWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccordionWidgetSettings","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}))\r\n\r\nconst AccordionWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [expanded, setExpanded] = useState(false)\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  const expansionPanelItem = ({ id, title, description, innerHTML, text }) => {\r\n    return (\r\n      <ExpansionPanel expanded={expanded === id} onChange={handleChange(id)}>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography className={classes.heading}>{title}</Typography>\r\n          <Typography className={classes.secondaryHeading}>{description}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            {text}\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {expansionPanelItem({\r\n        id: 1,\r\n        title: 'Test',\r\n        description: 'Description',\r\n        text: \"Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer sit amet egestas eros, vitae egestas augue. Duis vel est augue.\"\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccordionWidget","import AccordionWidget from './accordion-widget'\r\nimport AccordionWidgetSettings from './accordion-widget-settings'\r\n\r\nexport {\r\n  AccordionWidget,\r\n  AccordionWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst DataGridWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DataGridWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst DataGridWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default DataGridWidget","import DataGridWidget from './data-grid-widget'\r\nimport DataGridWidgetSettings from './data-grid-widget-settings'\r\n\r\nexport {\r\n  DataGridWidget,\r\n  DataGridWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst DivWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DivWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst DivWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default DivWidget","import DivWidget from './div-widget'\r\nimport DivWidgetSettings from './div-widget-settings'\r\n\r\nexport {\r\n  DivWidget,\r\n  DivWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst ImageWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst ImageWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default ImageWidget","import ImageWidget from './image-widget'\r\nimport ImageWidgetSettings from './image-widget-settings'\r\n\r\nexport {\r\n  ImageWidget,\r\n  ImageWidgetSettings\r\n}","export * from './accordion'\r\nexport * from './data-grid'\r\nexport * from './div'\r\nexport * from './image'\r\nexport * from './list'\r\nexport * from './paragraph'\r\nexport * from './progress-bar'\r\nexport * from './span'\r\nexport * from './tabs'","import ListWidget from './list-widget'\r\nimport ListWidgetSettings from './list-widget-settings'\r\n\r\nexport {\r\n  ListWidget,\r\n  ListWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst ListWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst ListWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default ListWidget","import ParagraphWidget from './paragraph-widget'\r\nimport ParagraphWidgetSettings from './paragraph-widget-settings'\r\n\r\nexport {\r\n  ParagraphWidget,\r\n  ParagraphWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst ParagraphWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ParagraphWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst ParagraphWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default ParagraphWidget","import ProgressBarWidget from './progress-bar-widget'\r\nimport ProgressBarWidgetSettings from './progress-bar-widget-settings'\r\n\r\nexport {\r\n  ProgressBarWidget,\r\n  ProgressBarWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst ProgressBarWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProgressBarWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst ProgressBarWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default ProgressBarWidget","import SpanWidget from './span-widget'\r\nimport SpanWidgetSettings from './span-widget-settings'\r\n\r\nexport {\r\n  SpanWidget,\r\n  SpanWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst SpanWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SpanWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst SpanWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default SpanWidget","import TabsWidget from './tabs-widget'\r\nimport TabsWidgetSettings from './tabs-widget-settings'\r\n\r\nexport {\r\n  TabsWidget,\r\n  TabsWidgetSettings\r\n}","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport DataSourceActions from '../../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst TabsWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Info</span>\r\n      </h2>\r\n      <FormControl fullWidth className={classes.formControl}>\r\n        <InputLabel>Title</InputLabel>\r\n        <Input />\r\n      </FormControl>\r\n\r\n      <h2 className={classes.h2}>\r\n        <span className={classes.span}>Widget Properties</span>\r\n      </h2>\r\n\r\n\r\n      <Button fullWidth color=\"primary\" className={classes.formControl}>Save</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TabsWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst TabsWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n        setWidget($widget)\r\n        return $widget\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  return (\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default TabsWidget","export * from './table'\r\nexport * from './charts'\r\nexport * from './form-controls'\r\nexport * from './html-elements'","import TableWidget from './table-widget'\r\nimport TableWidgetSettings from './table-widget-settings'\r\nexport { TableWidget, TableWidgetSettings }","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Input from '@material-ui/core/Input'\r\nimport Select from '@material-ui/core/Select'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport DataSourceActions from '../../../actions/datasource.actions'\r\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500,\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    paddingTop: \"15px\"\r\n  },\r\n  h2: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderBottom: '1px solid #000',\r\n    lineHeight: '0.1em',\r\n    marginTop: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontFamily: 'Roboto',\r\n    fontSize: '13px',\r\n    color: \"#3F51B5\"\r\n  },\r\n  span: {\r\n    background: '#fff',\r\n    padding: '0 10px'\r\n  },\r\n  formControl: {\r\n    marginTop: \"15px\"\r\n  }\r\n}))\r\n\r\nconst TableWidgetSettings = ({ widget, handleSettingsClose, isAdding, onWidgetAdd }) => {\r\n  const classes = useStyles()\r\n  const [datasources, setDatasources] = useState([])\r\n  const [datasource, setDatasource] = useState(!isAdding ? widget.dataSourceId : '')\r\n  const [docList, setDocList] = useState([])\r\n  const [doc, setDoc] = useState(!isAdding ? widget.config.docId : '')\r\n  const [fieldList, setFieldList] = useState([])\r\n  const [fields, setFields] = useState(!isAdding ? widget.config.fields : [])\r\n  const [query, setQuery] = useState({})\r\n\r\n  const getDatasources = async () => {\r\n    try {\r\n      const $datasources = await DataSourceActions.getDatasources({})\r\n      if (!isAdding) {\r\n        const $docList = await DataSourceActions.getDocList(datasource)\r\n        const $fieldList = await DataSourceActions.getFieldList(datasource, doc)\r\n        setDocList($docList)\r\n        setFieldList($fieldList)\r\n      }\r\n      setDatasources($datasources)\r\n      return $datasources\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getDocList = async (id) => {\r\n    try {\r\n      setDatasource(id)\r\n      const $docList = await DataSourceActions.getDocList(id)\r\n      setDocList($docList)\r\n      return $docList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getFieldList = async (id, docId) => {\r\n    try {\r\n      setDoc(docId)\r\n      const $fieldList = await DataSourceActions.getFieldList(id, docId)\r\n      setFieldList($fieldList)\r\n      return $fieldList\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const handleDatasourceChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getDocList(value)\r\n  }\r\n\r\n  const handleDocChange = async (event) => {\r\n    const { name, value } = event.target\r\n    setFieldList([])\r\n    setFields([])\r\n    await getFieldList(datasource, value)\r\n  }\r\n\r\n  const handleFieldChange = name => event => {\r\n    const { checked } = event.target\r\n    checked ? setFields([...fields, name]) : setFields(fields.filter(field => field != name))\r\n  }\r\n\r\n  const renderFieldSettings = () => fieldList.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Fields Settings</span>\r\n    </h2>\r\n\r\n    {fieldList.map(field => (<FormControlLabel\r\n      key={field}\r\n      control={\r\n        <Checkbox checked={fields.includes(field)} onChange={handleFieldChange(field)} value={field} />\r\n      }\r\n      label={field}\r\n    />))}\r\n  </div>) : <div></div>\r\n\r\n  const renderQuerySettings = () => fields.length ? (<div>\r\n    <h2 className={classes.h2}>\r\n      <span className={classes.span}>Query Settings</span>\r\n    </h2>\r\n\r\n    {fields.map(field => (<div>\r\n\r\n    </div>))}\r\n  </div>) : <div></div>\r\n\r\n  const saveConfigSettings = async () => {\r\n    try {\r\n      const data = {\r\n        dataSourceId: datasource,\r\n        config: {\r\n          docId: doc,\r\n          fields,\r\n          type: 'simple',\r\n          func: 'find',\r\n          query: {}\r\n        },\r\n        type: 'Table'\r\n      }\r\n      if (isAdding) {\r\n        onWidgetAdd(data)\r\n      } else {\r\n        const update = await WidgetSettingsActions.updateWidgetSettings(widget.id, data)\r\n        handleSettingsClose(update)\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDatasources()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <div>\r\n        <h2 className={classes.h2}>\r\n          <span className={classes.span}>Widget Properties</span>\r\n        </h2>\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <InputLabel id='title'>Title</InputLabel>\r\n          <Input />\r\n        </FormControl>\r\n        <h2 className={classes.h2}>\r\n          <span className={classes.span}>Connection Settings</span>\r\n        </h2>\r\n        <FormControl fullWidth className={classes.formControl}>\r\n          <InputLabel id=\"data-source\">Data Source</InputLabel>\r\n          <Select\r\n            name=\"datasource\"\r\n            labelId=\"data-source\"\r\n            value={datasource}\r\n            onChange={handleDatasourceChange}\r\n          >\r\n            {datasources.map(item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth className={classes.formControl} disabled={datasource ? false : true}>\r\n          <InputLabel id=\"doc-list\">Table/Collection</InputLabel>\r\n          <Select\r\n            name=\"docList\"\r\n            labelId=\"doc-list\"\r\n            value={doc}\r\n            onChange={handleDocChange}\r\n          >\r\n            {docList.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {renderFieldSettings()}\r\n\r\n        {renderQuerySettings()}\r\n\r\n        <Button fullWidth onClick={saveConfigSettings}>{isAdding ? 'Add' : 'Save'}</Button>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableWidgetSettings","import { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport MaterialTable from 'material-table'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport TableWidgetSettings from './table-widget-settings'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 500\r\n  },\r\n  widgetActions: {\r\n    display: 'flex',\r\n    backgroundColor: \"#3F51B5\",\r\n    borderTopRightRadius: \"5px\",\r\n    borderTopLeftRadius: \"5px\",\r\n  },\r\n  widgetTitle: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n    paddingLeft: \"10px\"\r\n  },\r\n  actionButtons: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  }\r\n}))\r\n\r\nconst TableWidget = ({ widgetId }) => {\r\n  const classes = useStyles()\r\n  const [widget, setWidget] = useState(null)\r\n  const [data, setData] = useState([])\r\n  const [isLoadingData, setIsLoadingData] = useState(false)\r\n  const [refresh, setRefresh] = useState(0)\r\n  const [menuState, setMenuState] = useState({ right: false })\r\n\r\n  const getWidgetData = async () => {\r\n    try {\r\n      const $data = await WidgetSettingsActions.executeWidgetQuery(widgetId)\r\n      setData($data)\r\n      return $data\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getWidget = async () => {\r\n    try {\r\n      const $widget = await WidgetSettingsActions.getWidgetSettingsById(widgetId)\r\n      setWidget($widget)\r\n      return $widget\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWidget()\r\n    getWidgetData()\r\n  }, [refresh])\r\n\r\n  const refreshData = async () => {\r\n    setIsLoadingData(true)\r\n    getWidget()\r\n    getWidgetData()\r\n    setIsLoadingData(false)\r\n  }\r\n\r\n  const handleSettingsClose = () => {\r\n    setRefresh(refresh + 1)\r\n    toggleDrawer('right', false)\r\n  }\r\n\r\n  const renderTable = () => {\r\n    return isLoadingData || !widget ? (<CircularProgress />) : (<MaterialTable\r\n      columns={widget.config.fields.map(field => ({ field, title: field }))}\r\n      data={data}\r\n      title=\"\"\r\n    />)\r\n  }\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift'))\r\n      return\r\n    setMenuState({ ...menuState, [side]: open })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.widgetActions}>\r\n        <div className={classes.widgetTitle}>\r\n          <Typography style={{ color: \"#FFF\" }}>Widget Title</Typography>\r\n        </div>\r\n        <div className={classes.actionButtons}>\r\n          <IconButton onClick={toggleDrawer('right', true)}>\r\n            <SettingsIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton onClick={refreshData}>\r\n            <RefreshIcon style={{ color: \"#FFF\" }} fontSize=\"small\" />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {renderTable()}\r\n      </div>\r\n      <Drawer anchor=\"right\" open={menuState.right} onClose={toggleDrawer('right', false)}>\r\n        <TableWidgetSettings widget={widget} handleSettingsClose={handleSettingsClose} />\r\n      </Drawer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableWidget","import Typography from '@material-ui/core/Typography'\r\nimport Card from '@material-ui/core/Card'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ButtonBase from '@material-ui/core/ButtonBase'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    cursor: 'pointer',\r\n    outline: 'none'\r\n  },\r\n  card: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    alignContent: 'center',\r\n    flexDirection: 'column',\r\n    paddingTop: 15,\r\n    paddingBottom: 15,\r\n  }\r\n}))\r\n\r\nconst TableWidget = ({ title, widget, icon, onWidgetClick, addPredefinedWidget }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <ButtonBase className={classes.root} onClick={widget ? addPredefinedWidget.bind(this, widget) : onWidgetClick.bind(this, title)}>\r\n      <Card className={classes.card}>\r\n        {icon}\r\n        <Typography style={{ marginTop: 10 }}>{title}</Typography>\r\n      </Card>\r\n    </ButtonBase>\r\n  )\r\n}\r\n\r\nexport default TableWidget","import {\r\n  TableWidget, TableWidgetSettings,\r\n  LineChartWidget, LineChartWidgetSettings,\r\n  PieChartWidget, PieChartWidgetSettings,\r\n  DonutChartWidget, DonutChartWidgetSettings,\r\n  BarChartWidget, BarChartWidgetSettings,\r\n  AreaChartWidget, AreaChartWidgetSettings,\r\n  AutoCompleteWidget, AutoCompleteWidgetSettings,\r\n  ButtonWidget, ButtonWidgetSettings,\r\n  CheckboxWidget, CheckboxWidgetSettings,\r\n  DateTimeWidget, DateTimeWidgetSettings,\r\n  FileWidget, FileWidgetSettings,\r\n  NumberWidget, NumberWidgetSettings,\r\n  PasswordWidget, PasswordWidgetSettings,\r\n  RadioWidget, RadioWidgetSettings,\r\n  SelectWidget, SelectWidgetSettings,\r\n  TextAreaWidget, TextAreaWidgetSettings,\r\n  TextFieldWidget, TextFieldWidgetSettings,\r\n  AccordionWidget, AccordionWidgetSettings,\r\n  DataGridWidget, DataGridWidgetSettings,\r\n  DivWidget, DivWidgetSettings,\r\n  ImageWidget, ImageWidgetSettings,\r\n  ListWidget, ListWidgetSettings,\r\n  ParagraphWidget, ParagraphWidgetSettings,\r\n  ProgressBarWidget, ProgressBarWidgetSettings,\r\n  SpanWidget, SpanWidgetSettings,\r\n  TabsWidget, TabsWidgetSettings\r\n} from '../components/widgets'\r\n\r\nconst decideWidgetSettings = (addType, onWidgetAdd) => {\r\n  switch (addType) {\r\n    case 'Table':\r\n      return <TableWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Line Chart':\r\n      return <LineChartWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Bar Chart':\r\n      return <BarChartWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Pie Chart':\r\n      return <PieChartWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Donut Chart':\r\n      return <DonutChartWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Area Chart':\r\n      return <AreaChartWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Auto Complete':\r\n      return <AutoCompleteWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Button':\r\n      return <ButtonWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Checkbox':\r\n      return <CheckboxWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Date Time':\r\n      return <DateTimeWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'File':\r\n      return <FileWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Number':\r\n      return <NumberWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Password':\r\n      return <PasswordWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Radio':\r\n      return <RadioWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Select':\r\n      return <SelectWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Text Area':\r\n      return <TextAreaWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Text Field':\r\n      return <TextFieldWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Accordion':\r\n      return <AccordionWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Data Grid':\r\n      return <DataGridWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Div':\r\n      return <DivWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Image':\r\n      return <ImageWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'List':\r\n      return <ListWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Paragraph':\r\n      return <ParagraphWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Progress Bar':\r\n      return <ProgressBarWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Span':\r\n      return <SpanWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    case 'Tabs':\r\n      return <TabsWidgetSettings isAdding={true} onWidgetAdd={onWidgetAdd} />\r\n    default:\r\n      return <div></div>\r\n  }\r\n}\r\n\r\nconst decideWidget = (widget) => {\r\n  switch (widget.type) {\r\n    case 'Table':\r\n      return <TableWidget widgetId={widget.id} />\r\n    case 'Line Chart':\r\n      return <LineChartWidget widgetId={widget.id} />\r\n    case 'Bar Chart':\r\n      return <BarChartWidget widgetId={widget.id} />\r\n    case 'Pie Chart':\r\n      return <PieChartWidget widgetId={widget.id} />\r\n    case 'Donut Chart':\r\n      return <DonutChartWidget widgetId={widget.id} />\r\n    case 'Area Chart':\r\n      return <AreaChartWidget widgetId={widget.id} />\r\n    case 'TextField':\r\n      return <TextFieldWidget widgetId={widget.id} />\r\n    case 'Auto Complete':\r\n      return <AutoCompleteWidget widgetId={widget.id} />\r\n    case 'Button':\r\n      return <ButtonWidget widgetId={widget.id} />\r\n    case 'Checkbox':\r\n      return <CheckboxWidget widgetId={widget.id} />\r\n    case 'Date Time':\r\n      return <DateTimeWidget widgetId={widget.id} />\r\n    case 'File':\r\n      return <FileWidget widgetId={widget.id} />\r\n    case 'Number':\r\n      return <NumberWidget widgetId={widget.id} />\r\n    case 'Password':\r\n      return <PasswordWidget widgetId={widget.id} />\r\n    case 'Radio':\r\n      return <RadioWidget widgetId={widget.id} />\r\n    case 'Select':\r\n      return <SelectWidget widgetId={widget.id} />\r\n    case 'Text Area':\r\n      return <TextAreaWidget widgetId={widget.id} />\r\n    case 'Text Field':\r\n      return <TextFieldWidget widgetId={widget.id} />\r\n    case 'Accordion':\r\n      return <AccordionWidget widgetId={widget.id} />\r\n    case 'Data Grid':\r\n      return <DataGridWidget widgetId={widget.id} />\r\n    case 'Div':\r\n      return <DivWidget widgetId={widget.id} />\r\n    case 'Image':\r\n      return <ImageWidget widgetId={widget.id} />\r\n    case 'List':\r\n      return <ListWidget widgetId={widget.id} />\r\n    case 'Paragraph':\r\n      return <ParagraphWidget widgetId={widget.id} />\r\n    case 'Progress Bar':\r\n      return <ProgressBarWidget widgetId={widget.id} />\r\n    case 'Span':\r\n      return <SpanWidget widgetId={widget.id} />\r\n    case 'Tabs':\r\n      return <TabsWidget widgetId={widget.id} />\r\n  }\r\n}\r\n\r\nexport {\r\n  decideWidgetSettings,\r\n  decideWidget\r\n}","import { useState } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport GridLayout from 'react-grid-layout'\r\nimport Cookies from 'next-cookies'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Button from '@material-ui/core/Button'\r\nimport Card from '@material-ui/core/Card'\r\nimport ArrowLeft from '@material-ui/icons/ArrowLeft'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport DashboardIcon from '@material-ui/icons/Dashboard'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport DashboardActions from '../../../actions/dashboard.actions'\r\nimport WidgetSettingsActions from '../../../actions/widgetSettings.actions'\r\nimport WidgetSidemenu from '../../../components/dashboards/widgets-menu'\r\nimport DashboardSettings from '../../../components/dashboards/settings/dashboard-settings'\r\nimport { useRouter } from 'next/router'\r\nimport { decideWidgetSettings, decideWidget } from '../../../helpers/decide-widgets'\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 500\r\n  },\r\n  fullList: {\r\n    width: 'auto'\r\n  }\r\n})\r\n\r\nconst EditDashboard = (WidgetSettings) => {\r\n  const classes = useStyles()\r\n  const router = useRouter()\r\n  const { id } = router.query\r\n  const [menuState, setMenuState] = useState({ right: false, addWidget: false, settings: false })\r\n  const [layout, setLayout] = useState(Object.values(WidgetSettings))\r\n  const [addType, setAddType] = useState(null)\r\n\r\n  const onLayoutChange = async ($event) => {\r\n    try {\r\n      const layouts = layout.map(item => {\r\n        const $eventItem = $event.filter($item => $item.i == item.layout.i)[0]\r\n        return { ...item, layout: $eventItem }\r\n      })\r\n      await Promise.all(layouts.map(item => WidgetSettingsActions.updateWidgetSettings(item.id, item)))\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift'))\r\n      return\r\n\r\n    setMenuState({ ...menuState, [side]: open })\r\n  }\r\n\r\n  const addPredefinedWidget = async (widget, _) => {\r\n    try {\r\n      const $widget = { ...widget }\r\n      delete $widget.id; delete $widget.icon\r\n      $widget.layout.i = uuidv4()\r\n      const saveWidget = await WidgetSettingsActions.createWidgetSettings($widget)\r\n      await DashboardActions.addWidgetToDashboard(id, saveWidget.id)\r\n      setLayout([...layout, { layout: $widget.layout, type: $widget.type }])\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const onWidgetAdd = async (config) => {\r\n    try {\r\n      const layoutItem = {\r\n        layout: { i: uuidv4(), x: 0, y: 0, w: 6, h: 11, maxW: 16, isDraggable: true, isResizable: true },\r\n        ...config\r\n      }\r\n      const saveWidget = await WidgetSettingsActions.createWidgetSettings(layoutItem)\r\n      await DashboardActions.addWidgetToDashboard(id, saveWidget.id)\r\n      layoutItem.id = saveWidget.id\r\n      setLayout([...layout, layoutItem])\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const addWidget = async (type, _) => {\r\n    setAddType(type)\r\n    setMenuState({ ...menuState, addWidget: true, right: false })\r\n    // try {\r\n    //   const layoutItem = {\r\n    //     layout: { i: uuidv4(), x: 0, y: 0, w: 6, h: 11, maxW: 16, isDraggable: true, isResizable: true },\r\n    //     type\r\n    //   }\r\n    //   const saveWidget = await WidgetSettingsActions.createWidgetSettings(layoutItem)\r\n    //   await DashboardActions.addWidgetToDashboard(id, saveWidget.id)\r\n    //   layoutItem.id = saveWidget.id\r\n    //   setLayout([...layout, layoutItem])\r\n    // } catch (e) {\r\n    //   console.log(e)\r\n    // }\r\n  }\r\n\r\n  const sideList = () => (\r\n    <div className={classes.list} role=\"presentation\">\r\n      <WidgetSidemenu onWidgetClick={addWidget} addPredefinedWidget={addPredefinedWidget} widgetSettings={Object.values(WidgetSettings)} />\r\n    </div>\r\n  )\r\n\r\n  const renderWidgets = () => layout.map((item, i) => (\r\n    <div key={item.layout.i}>\r\n      {decideWidget(item)}\r\n    </div>\r\n  ))\r\n\r\n  return (\r\n    <div>\r\n      <Drawer anchor=\"right\" open={menuState.right} onClose={toggleDrawer('right', false)}>\r\n        {sideList()}\r\n      </Drawer>\r\n\r\n      <Drawer anchor=\"right\" open={menuState.addWidget} onClose={toggleDrawer('addWidget', false)}>\r\n        {decideWidgetSettings(addType, onWidgetAdd)}\r\n      </Drawer>\r\n\r\n      <Drawer anchor=\"right\" open={menuState.settings} onClose={toggleDrawer('settings', false)}>\r\n        <DashboardSettings id={id} />\r\n      </Drawer>\r\n\r\n      <Card style={{ display: 'flex', flexDirection: 'row' }}>\r\n        <div style={{ justifySelf: 'flex-start', display: 'flex', flex: 1 }}>\r\n          <IconButton aria-label=\"back\" size=\"medium\" style={{ outline: 'none' }}>\r\n            <ArrowLeft fontSize=\"default\" />\r\n          </IconButton>\r\n        </div>\r\n        <div style={{ justifySelf: 'flex-end', display: 'flex', flex: 1, justifyContent: 'flex-end', paddingRight: '10px' }}>\r\n          <Button style={{ outline: 'none' }} size=\"small\" startIcon={<SaveIcon />}>\r\n            Save\r\n          </Button>\r\n          <Button style={{ marginLeft: '10px', outline: 'none' }} size=\"small\" onClick={toggleDrawer('right', true)} startIcon={<DashboardIcon />}>\r\n            Widgets\r\n          </Button>\r\n          <Button style={{ marginLeft: '10px', outline: 'none' }} size=\"small\" onClick={toggleDrawer('settings', true)} startIcon={<SettingsIcon />}>\r\n            Settings\r\n          </Button>\r\n        </div>\r\n      </Card>\r\n\r\n      <div style={{ paddingBottom: '15px' }}>\r\n        <GridLayout className=\"layout\" cols={16} rowHeight={30} width={1920} layout={layout.map(item => item.layout)} onLayoutChange={onLayoutChange}>\r\n          {renderWidgets()}\r\n        </GridLayout>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nEditDashboard.getInitialProps = async (req) => {\r\n  const Authorization = Cookies(req).id\r\n  const WidgetSettings = await DashboardActions.getWidgetSettings({ Authorization, id: \"5e413f33f6af6d17b44df269\" })\r\n  return WidgetSettings\r\n}\r\n\r\nexport default EditDashboard;","module.exports = require(\"@devexpress/dx-react-chart\");","module.exports = require(\"@devexpress/dx-react-chart-material-ui\");","module.exports = require(\"@material-ui/core/AppBar\");","module.exports = require(\"@material-ui/core/Box\");","module.exports = require(\"@material-ui/core/Button\");","module.exports = require(\"@material-ui/core/ButtonBase\");","module.exports = require(\"@material-ui/core/Card\");","module.exports = require(\"@material-ui/core/Checkbox\");","module.exports = require(\"@material-ui/core/CircularProgress\");","module.exports = require(\"@material-ui/core/Drawer\");","module.exports = require(\"@material-ui/core/ExpansionPanel\");","module.exports = require(\"@material-ui/core/ExpansionPanelDetails\");","module.exports = require(\"@material-ui/core/ExpansionPanelSummary\");","module.exports = require(\"@material-ui/core/FormControl\");","module.exports = require(\"@material-ui/core/FormControlLabel\");","module.exports = require(\"@material-ui/core/FormGroup\");","module.exports = require(\"@material-ui/core/Grid\");","module.exports = require(\"@material-ui/core/IconButton\");","module.exports = require(\"@material-ui/core/Input\");","module.exports = require(\"@material-ui/core/InputLabel\");","module.exports = require(\"@material-ui/core/MenuItem\");","module.exports = require(\"@material-ui/core/Paper\");","module.exports = require(\"@material-ui/core/Radio\");","module.exports = require(\"@material-ui/core/RadioGroup\");","module.exports = require(\"@material-ui/core/Select\");","module.exports = require(\"@material-ui/core/Tab\");","module.exports = require(\"@material-ui/core/Tabs\");","module.exports = require(\"@material-ui/core/TextField\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/icons/ArrowLeft\");","module.exports = require(\"@material-ui/icons/Autorenew\");","module.exports = require(\"@material-ui/icons/BarChart\");","module.exports = require(\"@material-ui/icons/BubbleChart\");","module.exports = require(\"@material-ui/icons/CheckBox\");","module.exports = require(\"@material-ui/icons/Dashboard\");","module.exports = require(\"@material-ui/icons/DateRange\");","module.exports = require(\"@material-ui/icons/Delete\");","module.exports = require(\"@material-ui/icons/Dialpad\");","module.exports = require(\"@material-ui/icons/DonutLarge\");","module.exports = require(\"@material-ui/icons/ExpandMore\");","module.exports = require(\"@material-ui/icons/FileCopy\");","module.exports = require(\"@material-ui/icons/GridOn\");","module.exports = require(\"@material-ui/icons/Image\");","module.exports = require(\"@material-ui/icons/List\");","module.exports = require(\"@material-ui/icons/ListAlt\");","module.exports = require(\"@material-ui/icons/Lock\");","module.exports = require(\"@material-ui/icons/PieChart\");","module.exports = require(\"@material-ui/icons/RadioButtonChecked\");","module.exports = require(\"@material-ui/icons/Receipt\");","module.exports = require(\"@material-ui/icons/Refresh\");","module.exports = require(\"@material-ui/icons/Save\");","module.exports = require(\"@material-ui/icons/SelectAll\");","module.exports = require(\"@material-ui/icons/Settings\");","module.exports = require(\"@material-ui/icons/Subject\");","module.exports = require(\"@material-ui/icons/TableChart\");","module.exports = require(\"@material-ui/icons/TextFields\");","module.exports = require(\"@material-ui/icons/TextFormat\");","module.exports = require(\"@material-ui/icons/TextRotationNone\");","module.exports = require(\"@material-ui/icons/Timeline\");","module.exports = require(\"@material-ui/icons/Title\");","module.exports = require(\"@material-ui/icons/TouchApp\");","module.exports = require(\"@material-ui/icons/ViewList\");","module.exports = require(\"@material-ui/icons/VisibilityOff\");","module.exports = require(\"axios\");","module.exports = require(\"d3-scale\");","module.exports = require(\"js-cookie\");","module.exports = require(\"material-table\");","module.exports = require(\"next-cookies\");","module.exports = require(\"next/config\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-grid-layout\");","module.exports = require(\"sweetalert2\");","module.exports = require(\"uuid\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxrFA;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAGA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAIA;AACA;AAhEA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAQA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAhDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;;;;;;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A;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAA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AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;AC9IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAthNA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAjBA;AACA;AAuBA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;AC1IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtBA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AATA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChNA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAjBA;AACA;AAuzIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtjBA;AACA;AAuBA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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;AACA;AADA;AAtBA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC9FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC9FA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtBA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC9FA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtBA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC9FA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtBA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC9FA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AA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;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC9FA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtBA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AATA;AACA;AAcA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtBA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtBA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtBA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtBA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtBA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtBA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtBA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAtBA;AACA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAthNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAjBA;AACA;AAuBA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxHA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AANA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACptDA;AAwtDA;AAwDA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AACA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACjKA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}